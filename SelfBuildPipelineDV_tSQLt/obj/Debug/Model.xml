<?xml version="1.0" encoding="utf-8"?>
<DataSchemaModel FileFormatVersion="1.2" SchemaVersion="2.9" DspName="Microsoft.Data.Tools.Schema.Sql.Sql130DatabaseSchemaProvider" CollationLcid="1033" CollationCaseSensitive="False" xmlns="http://schemas.microsoft.com/sqlserver/dac/Serialization/2012/02">
	<Header>
		<CustomData Category="AnsiNulls">
			<Metadata Name="AnsiNulls" Value="True" />
		</CustomData>
		<CustomData Category="QuotedIdentifier">
			<Metadata Name="QuotedIdentifier" Value="True" />
		</CustomData>
		<CustomData Category="CompatibilityMode">
			<Metadata Name="CompatibilityMode" Value="130" />
		</CustomData>
		<CustomData Category="Reference" Type="Assembly">
			<Metadata Name="LogicalName" Value="tSQLtCLR.dll" />
			<Metadata Name="FileName" Value="C:\PROJECTS\SELFBUILDPIPELINEDV_TSQLT\SELFBUILDPIPELINEDV_TSQLT\ASSEMBLIES\TSQLTCLR.DLL" />
			<Metadata Name="AssemblyName" Value="tSQLtCLR" />
			<Metadata Name="PermissionSet" Value="SAFE" />
			<Metadata Name="Owner" Value="dbo" />
			<Metadata Name="GenerateSqlClrDdl" Value="False" />
			<Metadata Name="IsVisible" Value="True" />
			<Metadata Name="IsModelAware" Value="True" />
			<Metadata Name="SkipCreationIfEmpty" Value="False" />
			<Metadata Name="AssemblySymbolsName" />
		</CustomData>
		<CustomData Category="Reference" Type="SqlSchema">
			<Metadata Name="FileName" Value="C:\PROGRAM FILES (X86)\MICROSOFT VISUAL STUDIO 14.0\COMMON7\IDE\EXTENSIONS\MICROSOFT\SQLDB\EXTENSIONS\SQLSERVER\130\SQLSCHEMAS\MASTER.DACPAC" />
			<Metadata Name="LogicalName" Value="master.dacpac" />
			<Metadata Name="ExternalParts" Value="[master]" />
			<Metadata Name="SuppressMissingDependenciesErrors" Value="False" />
		</CustomData>
		<CustomData Category="Reference" Type="Assembly">
			<Metadata Name="LogicalName" Value="SelfBuildPipelineDV_tSQLt.dll" />
			<Metadata Name="FileName" Value="C:\PROJECTS\SELFBUILDPIPELINEDV_TSQLT\SELFBUILDPIPELINEDV_TSQLT\OBJ\DEBUG\SELFBUILDPIPELINEDV_TSQLT.DLL" />
			<Metadata Name="AssemblyName" Value="SelfBuildPipelineDV_tSQLt" />
			<Metadata Name="PermissionSet" Value="SAFE" />
			<Metadata Name="Owner" Value="" />
			<Metadata Name="GenerateSqlClrDdl" Value="True" />
			<Metadata Name="IsVisible" Value="True" />
			<Metadata Name="IsModelAware" Value="True" />
			<Metadata Name="SkipCreationIfEmpty" Value="True" />
			<Metadata Name="AssemblySymbolsName" Value="C:\Projects\SelfBuildPipelineDV_tSQLt\SelfBuildPipelineDV_tSQLt\obj\Debug\SelfBuildPipelineDV_tSQLt.pdb" />
		</CustomData>
		<CustomData Category="SqlCmdVariables" Type="SqlCmdVariable" />
	</Header>
	<Model>
		<Element Type="SqlDatabaseOptions">
			<Property Name="Collation" Value="Latin1_General_CI_AS" />
			<Property Name="IsAnsiNullDefaultOn" Value="True" />
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Property Name="IsAnsiWarningsOn" Value="True" />
			<Property Name="IsArithAbortOn" Value="True" />
			<Property Name="IsConcatNullYieldsNullOn" Value="True" />
			<Property Name="IsTornPageProtectionOn" Value="False" />
			<Property Name="IsFullTextEnabled" Value="True" />
			<Property Name="PageVerifyMode" Value="3" />
			<Property Name="DefaultLanguage" Value="" />
			<Property Name="DefaultFullTextLanguage" Value="" />
			<Property Name="QueryStoreStaleQueryThreshold" Value="367" />
			<Relationship Name="DefaultFilegroup">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[PRIMARY]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlPrimaryKeyConstraint">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[tSQLt].[Private_Configurations].[Name]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[tSQLt].[Private_Configurations]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="7" />
		</Element>
		<Element Type="SqlPrimaryKeyConstraint">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[tSQLt].[TestResult].[Id]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[tSQLt].[TestResult]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="8" />
		</Element>
		<Element Type="SqlPrimaryKeyConstraint">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[tSQLt].[Private_NewTestClassList].[ClassName]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[tSQLt].[Private_NewTestClassList]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="9" />
		</Element>
		<Element Type="SqlPrimaryKeyConstraint">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[tSQLt].[CaptureOutputLog].[Id]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[tSQLt].[CaptureOutputLog]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="10" />
		</Element>
		<Element Type="SqlRoleMembership">
			<Relationship Name="Member">
				<Entry>
					<References Name="[NT AUTHORITY\LOCAL SERVICE]" Disambiguator="5" />
				</Entry>
			</Relationship>
			<Relationship Name="Role">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[db_owner]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlTable" Name="[dbo].[Album]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Album].[AlbumId]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Album].[Title]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="160" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Album].[ArtistId]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="11" />
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="12" />
		</Element>
		<Element Type="SqlIndex" Name="[dbo].[Album].[IFK_AlbumArtistId]">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[Album].[ArtistId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="IndexedObject">
				<Entry>
					<References Name="[dbo].[Album]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlTable" Name="[dbo].[Artist]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Artist].[ArtistId]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Artist].[Name]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="140" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="13" />
		</Element>
		<Element Type="SqlTable" Name="[dbo].[Customer]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Customer].[CustomerId]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Customer].[FirstName]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="40" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Customer].[LastName]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="20" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Customer].[Company]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="80" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Customer].[Address]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="70" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Customer].[City]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="40" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Customer].[State]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="40" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Customer].[Country]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="40" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Customer].[PostalCode]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="10" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Customer].[Phone]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="24" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Customer].[Fax]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="24" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Customer].[Email]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="60" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Customer].[SupportRepId]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="14" />
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="15" />
		</Element>
		<Element Type="SqlIndex" Name="[dbo].[Customer].[IFK_CustomerSupportRepId]">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[Customer].[SupportRepId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="IndexedObject">
				<Entry>
					<References Name="[dbo].[Customer]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlTable" Name="[dbo].[Employee]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Employee].[EmployeeId]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Employee].[LastName]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="20" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Employee].[FirstName]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="20" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Employee].[Title]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="30" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Employee].[ReportsTo]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Employee].[BirthDate]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[datetime]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Employee].[HireDate]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[datetime]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Employee].[Address]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="70" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Employee].[City]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="40" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Employee].[State]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="40" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Employee].[Country]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="40" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Employee].[PostalCode]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="10" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Employee].[Phone]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="24" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Employee].[Fax]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="24" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Employee].[Email]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="60" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="16" />
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="17" />
		</Element>
		<Element Type="SqlIndex" Name="[dbo].[Employee].[IFK_EmployeeReportsTo]">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[Employee].[ReportsTo]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="IndexedObject">
				<Entry>
					<References Name="[dbo].[Employee]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlForeignKeyConstraint" Name="[dbo].[FK_AlbumArtistId]">
			<Relationship Name="Columns">
				<Entry>
					<References Name="[dbo].[Album].[ArtistId]" />
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[Album]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignColumns">
				<Entry>
					<References Name="[dbo].[Artist].[ArtistId]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignTable">
				<Entry>
					<References Name="[dbo].[Artist]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="12" />
		</Element>
		<Element Type="SqlForeignKeyConstraint" Name="[dbo].[FK_CustomerSupportRepId]">
			<Relationship Name="Columns">
				<Entry>
					<References Name="[dbo].[Customer].[SupportRepId]" />
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[Customer]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignColumns">
				<Entry>
					<References Name="[dbo].[Employee].[EmployeeId]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignTable">
				<Entry>
					<References Name="[dbo].[Employee]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="15" />
		</Element>
		<Element Type="SqlForeignKeyConstraint" Name="[dbo].[FK_EmployeeReportsTo]">
			<Relationship Name="Columns">
				<Entry>
					<References Name="[dbo].[Employee].[ReportsTo]" />
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[Employee]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignColumns">
				<Entry>
					<References Name="[dbo].[Employee].[EmployeeId]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignTable">
				<Entry>
					<References Name="[dbo].[Employee]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="17" />
		</Element>
		<Element Type="SqlForeignKeyConstraint" Name="[dbo].[FK_InvoiceCustomerId]">
			<Relationship Name="Columns">
				<Entry>
					<References Name="[dbo].[Invoice].[CustomerId]" />
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[Invoice]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignColumns">
				<Entry>
					<References Name="[dbo].[Customer].[CustomerId]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignTable">
				<Entry>
					<References Name="[dbo].[Customer]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="18" />
		</Element>
		<Element Type="SqlForeignKeyConstraint" Name="[dbo].[FK_InvoiceLineInvoiceId]">
			<Relationship Name="Columns">
				<Entry>
					<References Name="[dbo].[InvoiceLine].[InvoiceId]" />
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[InvoiceLine]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignColumns">
				<Entry>
					<References Name="[dbo].[Invoice].[InvoiceId]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignTable">
				<Entry>
					<References Name="[dbo].[Invoice]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="19" />
		</Element>
		<Element Type="SqlForeignKeyConstraint" Name="[dbo].[FK_InvoiceLineTrackId]">
			<Relationship Name="Columns">
				<Entry>
					<References Name="[dbo].[InvoiceLine].[TrackId]" />
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[InvoiceLine]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignColumns">
				<Entry>
					<References Name="[dbo].[Track].[TrackId]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignTable">
				<Entry>
					<References Name="[dbo].[Track]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="20" />
		</Element>
		<Element Type="SqlForeignKeyConstraint" Name="[dbo].[FK_PlaylistTrackPlaylistId]">
			<Relationship Name="Columns">
				<Entry>
					<References Name="[dbo].[PlaylistTrack].[PlaylistId]" />
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[PlaylistTrack]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignColumns">
				<Entry>
					<References Name="[dbo].[Playlist].[PlaylistId]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignTable">
				<Entry>
					<References Name="[dbo].[Playlist]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="21" />
		</Element>
		<Element Type="SqlForeignKeyConstraint" Name="[dbo].[FK_PlaylistTrackTrackId]">
			<Relationship Name="Columns">
				<Entry>
					<References Name="[dbo].[PlaylistTrack].[TrackId]" />
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[PlaylistTrack]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignColumns">
				<Entry>
					<References Name="[dbo].[Track].[TrackId]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignTable">
				<Entry>
					<References Name="[dbo].[Track]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="22" />
		</Element>
		<Element Type="SqlForeignKeyConstraint" Name="[dbo].[FK_TrackAlbumId]">
			<Relationship Name="Columns">
				<Entry>
					<References Name="[dbo].[Track].[AlbumId]" />
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[Track]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignColumns">
				<Entry>
					<References Name="[dbo].[Album].[AlbumId]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignTable">
				<Entry>
					<References Name="[dbo].[Album]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="23" />
		</Element>
		<Element Type="SqlForeignKeyConstraint" Name="[dbo].[FK_TrackGenreId]">
			<Relationship Name="Columns">
				<Entry>
					<References Name="[dbo].[Track].[GenreId]" />
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[Track]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignColumns">
				<Entry>
					<References Name="[dbo].[Genre].[GenreId]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignTable">
				<Entry>
					<References Name="[dbo].[Genre]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="24" />
		</Element>
		<Element Type="SqlForeignKeyConstraint" Name="[dbo].[FK_TrackMediaTypeId]">
			<Relationship Name="Columns">
				<Entry>
					<References Name="[dbo].[Track].[MediaTypeId]" />
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[Track]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignColumns">
				<Entry>
					<References Name="[dbo].[MediaType].[MediaTypeId]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignTable">
				<Entry>
					<References Name="[dbo].[MediaType]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="25" />
		</Element>
		<Element Type="SqlTable" Name="[dbo].[Genre]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Genre].[GenreId]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Genre].[Name]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="120" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="26" />
		</Element>
		<Element Type="SqlTable" Name="[dbo].[Invoice]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Invoice].[InvoiceId]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Invoice].[CustomerId]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Invoice].[InvoiceDate]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[datetime]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Invoice].[BillingAddress]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="70" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Invoice].[BillingCity]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="40" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Invoice].[BillingState]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="40" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Invoice].[BillingCountry]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="40" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Invoice].[BillingPostalCode]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="10" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Invoice].[Total]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Scale" Value="2" />
									<Property Name="Precision" Value="10" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[numeric]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="27" />
			<AttachedAnnotation Disambiguator="18" />
		</Element>
		<Element Type="SqlIndex" Name="[dbo].[Invoice].[IFK_InvoiceCustomerId]">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[Invoice].[CustomerId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="IndexedObject">
				<Entry>
					<References Name="[dbo].[Invoice]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlTable" Name="[dbo].[InvoiceLine]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[InvoiceLine].[InvoiceLineId]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[InvoiceLine].[InvoiceId]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[InvoiceLine].[TrackId]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[InvoiceLine].[UnitPrice]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Scale" Value="2" />
									<Property Name="Precision" Value="10" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[numeric]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[InvoiceLine].[Quantity]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="28" />
			<AttachedAnnotation Disambiguator="19" />
			<AttachedAnnotation Disambiguator="20" />
		</Element>
		<Element Type="SqlIndex" Name="[dbo].[InvoiceLine].[IFK_InvoiceLineInvoiceId]">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[InvoiceLine].[InvoiceId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="IndexedObject">
				<Entry>
					<References Name="[dbo].[InvoiceLine]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlIndex" Name="[dbo].[InvoiceLine].[IFK_InvoiceLineTrackId]">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[InvoiceLine].[TrackId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="IndexedObject">
				<Entry>
					<References Name="[dbo].[InvoiceLine]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlTable" Name="[dbo].[MediaType]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[MediaType].[MediaTypeId]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[MediaType].[Name]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="120" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="29" />
		</Element>
		<Element Type="SqlPrimaryKeyConstraint" Name="[dbo].[PK_Album]">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[Album].[AlbumId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[Album]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="11" />
		</Element>
		<Element Type="SqlPrimaryKeyConstraint" Name="[dbo].[PK_Artist]">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[Artist].[ArtistId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[Artist]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="13" />
		</Element>
		<Element Type="SqlPrimaryKeyConstraint" Name="[dbo].[PK_Customer]">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[Customer].[CustomerId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[Customer]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="14" />
		</Element>
		<Element Type="SqlPrimaryKeyConstraint" Name="[dbo].[PK_Employee]">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[Employee].[EmployeeId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[Employee]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="16" />
		</Element>
		<Element Type="SqlPrimaryKeyConstraint" Name="[dbo].[PK_Genre]">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[Genre].[GenreId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[Genre]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="26" />
		</Element>
		<Element Type="SqlPrimaryKeyConstraint" Name="[dbo].[PK_Invoice]">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[Invoice].[InvoiceId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[Invoice]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="27" />
		</Element>
		<Element Type="SqlPrimaryKeyConstraint" Name="[dbo].[PK_InvoiceLine]">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[InvoiceLine].[InvoiceLineId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[InvoiceLine]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="28" />
		</Element>
		<Element Type="SqlPrimaryKeyConstraint" Name="[dbo].[PK_MediaType]">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[MediaType].[MediaTypeId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[MediaType]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="29" />
		</Element>
		<Element Type="SqlPrimaryKeyConstraint" Name="[dbo].[PK_Playlist]">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[Playlist].[PlaylistId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[Playlist]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="30" />
		</Element>
		<Element Type="SqlPrimaryKeyConstraint" Name="[dbo].[PK_PlaylistTrack]">
			<Property Name="IsClustered" Value="False" />
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[PlaylistTrack].[PlaylistId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[PlaylistTrack].[TrackId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[PlaylistTrack]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="31" />
		</Element>
		<Element Type="SqlPrimaryKeyConstraint" Name="[dbo].[PK_Track]">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[Track].[TrackId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[Track]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="32" />
		</Element>
		<Element Type="SqlTable" Name="[dbo].[Playlist]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Playlist].[PlaylistId]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Playlist].[Name]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="120" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="30" />
		</Element>
		<Element Type="SqlTable" Name="[dbo].[PlaylistTrack]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[PlaylistTrack].[PlaylistId]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[PlaylistTrack].[TrackId]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="31" />
			<AttachedAnnotation Disambiguator="21" />
			<AttachedAnnotation Disambiguator="22" />
		</Element>
		<Element Type="SqlIndex" Name="[dbo].[PlaylistTrack].[IFK_PlaylistTrackTrackId]">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[PlaylistTrack].[TrackId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="IndexedObject">
				<Entry>
					<References Name="[dbo].[PlaylistTrack]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[testTotalInvoiceAmountFail]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
    DECLARE  @InvoiceTotal  NUMERIC(10,2)
            ,@ExpectedTotal NUMERIC(10,2) = 12345678.91;
 
    SELECT @InvoiceTotal = ISNULL(SUM(Total), 12345678.90) 
	FROM   [dbo].[Invoice];

    DECLARE @expected MONEY; SET @expected = 2.4;   --(rate * amount)
    EXEC tSQLt.AssertEquals @ExpectedTotal , @InvoiceTotal;

END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[numeric]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[numeric]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[money]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[Invoice]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[Invoice].[Total]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[AssertEquals]" />
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="395" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [dbo].[testTotalInvoiceAmountFail]&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[testTotalInvoiceAmountPass]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
    DECLARE  @InvoiceTotal  NUMERIC(10,2)
            ,@ExpectedTotal NUMERIC(10,2) = 12345678.90;
 
    SELECT @InvoiceTotal = ISNULL(SUM(Total), 12345678.90) 
	FROM   [dbo].[Invoice];

    DECLARE @expected MONEY; SET @expected = 2.4;   --(rate * amount)
    EXEC tSQLt.AssertEquals @ExpectedTotal , @InvoiceTotal;

END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[numeric]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[numeric]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[money]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[Invoice]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[Invoice].[Total]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[AssertEquals]" />
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="395" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [dbo].[testTotalInvoiceAmountPass]&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlTable" Name="[dbo].[Track]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Track].[TrackId]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Track].[Name]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="250" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Track].[AlbumId]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Track].[MediaTypeId]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Track].[GenreId]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Track].[Composer]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="220" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Track].[Milliseconds]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Track].[Bytes]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[Track].[UnitPrice]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Scale" Value="2" />
									<Property Name="Precision" Value="10" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[numeric]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="32" />
			<AttachedAnnotation Disambiguator="23" />
			<AttachedAnnotation Disambiguator="24" />
			<AttachedAnnotation Disambiguator="25" />
		</Element>
		<Element Type="SqlIndex" Name="[dbo].[Track].[IFK_TrackAlbumId]">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[Track].[AlbumId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="IndexedObject">
				<Entry>
					<References Name="[dbo].[Track]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlIndex" Name="[dbo].[Track].[IFK_TrackGenreId]">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[Track].[GenreId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="IndexedObject">
				<Entry>
					<References Name="[dbo].[Track]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlIndex" Name="[dbo].[Track].[IFK_TrackMediaTypeId]">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[Track].[MediaTypeId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="IndexedObject">
				<Entry>
					<References Name="[dbo].[Track]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlSchema" Name="[demoTestCLass]">
			<Relationship Name="Authorizer">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[demoTestCLass].[testTotalInvoiceAmountFail]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
    DECLARE  @ActualTotal  NUMERIC(10,2)
            ,@ExpectedTotal NUMERIC(10,2) = 12345678.91;
 
    SELECT @ActualTotal = ISNULL(SUM(Total), 12345678.90) 
	FROM   [dbo].[Invoice];

    EXEC tSQLt.AssertEquals @ExpectedTotal , @ActualTotal;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[numeric]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[numeric]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[Invoice]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[Invoice].[Total]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[AssertEquals]" />
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[demoTestCLass]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="331" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [demoTestCLass].[testTotalInvoiceAmountFail]&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[demoTestCLass].[testTotalInvoiceAmountPass]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
    DECLARE  @ActualTotal  NUMERIC(10,2)
            ,@ExpectedTotal NUMERIC(10,2) = 12345678.90;
 
    SELECT @ActualTotal = ISNULL(SUM(Total), 12345678.90) 
	FROM   [dbo].[Invoice];

    EXEC tSQLt.AssertEquals @ExpectedTotal , @ActualTotal;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[numeric]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[numeric]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[Invoice]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[Invoice].[Total]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[AssertEquals]" />
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[demoTestCLass]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="331" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [demoTestCLass].[testTotalInvoiceAmountPass]&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlLogin" Name="[NT AUTHORITY\LOCAL SERVICE]">
			<Property Name="IsMappedToWindowsLogin" Value="True" />
			<Property Name="DefaultLanguage" Value="us_english" />
			<Property Name="IsCheckPolicyOn" Value="False" />
			<Annotation Type="GloballyScoped" />
		</Element>
		<Element Type="SqlUser" Name="[NT AUTHORITY\LOCAL SERVICE]" Disambiguator="5">
			<Property Name="LoginIdentifierScript">
				<Value><![CDATA[[NT AUTHORITY\LOCAL SERVICE]]]></Value>
			</Property>
			<Property Name="AuthenticationType" Value="3" />
			<Relationship Name="Login">
				<Entry>
					<References Name="[NT AUTHORITY\LOCAL SERVICE]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlExtendedProperty" Name="[SqlSchema].[demoTestCLass].[tSQLt.TestClass]">
			<Property Name="Value">
				<Value><![CDATA[1]]></Value>
			</Property>
			<Relationship Name="Host">
				<Entry>
					<References Name="[demoTestCLass]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlSchema" Name="[tSQLt]">
			<Relationship Name="Authorizer">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[ApplyConstraint]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  DECLARE @ConstraintType NVARCHAR(MAX);
  DECLARE @ConstraintObjectId INT;
  
  SELECT @ConstraintType = ConstraintType, @ConstraintObjectId = ConstraintObjectId
    FROM tSQLt.Private_ResolveApplyConstraintParameters (@TableName, @ConstraintName, @SchemaName);

  IF @ConstraintType = 'CHECK_CONSTRAINT'
  BEGIN
    EXEC tSQLt.Private_ApplyCheckConstraint @ConstraintObjectId;
    RETURN 0;
  END

  IF @ConstraintType = 'FOREIGN_KEY_CONSTRAINT'
  BEGIN
    EXEC tSQLt.Private_ApplyForeignKeyConstraint @ConstraintObjectId, @NoCascade;
    RETURN 0;
  END;  
   
  IF @ConstraintType IN('UNIQUE_CONSTRAINT', 'PRIMARY_KEY_CONSTRAINT')
  BEGIN
    EXEC tSQLt.Private_ApplyUniqueConstraint @ConstraintObjectId;
    RETURN 0;
  END;  
   
  RAISERROR ('ApplyConstraint could not resolve the object names, ''%s'', ''%s''. Be sure to call ApplyConstraint and pass in two parameters, such as: EXEC tSQLt.ApplyConstraint ''MySchema.MyTable'', ''MyConstraint''', 
             16, 10, @TableName, @ConstraintName);
  RETURN 0;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[ApplyConstraint].[@TableName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[ApplyConstraint].[@ConstraintName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[ApplyConstraint].[@SchemaName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveApplyConstraintParameters]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveApplyConstraintParameters].[ConstraintType]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveApplyConstraintParameters].[ConstraintObjectId]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ApplyCheckConstraint]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ApplyForeignKeyConstraint]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[ApplyConstraint].[@NoCascade]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ApplyUniqueConstraint]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[ApplyConstraint].[@TableName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[ApplyConstraint].[@ConstraintName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[ApplyConstraint].[@SchemaName]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[ApplyConstraint].[@NoCascade]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="1334" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[ApplyConstraint]&#xD;&#xA;       @TableName NVARCHAR(MAX),&#xD;&#xA;       @ConstraintName NVARCHAR(MAX),&#xD;&#xA;       @SchemaName NVARCHAR(MAX) = NULL, --parameter preserved for backward compatibility. Do not use. Will be removed soon.&#xD;&#xA;       @NoCascade BIT = 0&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[ApplyTrigger]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  DECLARE @OrgTableObjectId INT;
  SELECT @OrgTableObjectId = OrgTableObjectId FROM tSQLt.Private_GetOriginalTableInfo(OBJECT_ID(@TableName)) orgTbl
  IF(@OrgTableObjectId IS NULL)
  BEGIN
    RAISERROR('%s does not exist or was not faked by tSQLt.FakeTable.', 16, 10, @TableName);
  END;
  
  DECLARE @FullTriggerName NVARCHAR(MAX);
  DECLARE @TriggerObjectId INT;
  SELECT @FullTriggerName = QUOTENAME(SCHEMA_NAME(schema_id))+'.'+QUOTENAME(name), @TriggerObjectId = object_id
  FROM sys.objects WHERE PARSENAME(@TriggerName,1) = name AND parent_object_id = @OrgTableObjectId;
  
  DECLARE @TriggerCode NVARCHAR(MAX);
  SELECT @TriggerCode = m.definition
    FROM sys.sql_modules m
   WHERE m.object_id = @TriggerObjectId;
  
  IF (@TriggerCode IS NULL)
  BEGIN
    RAISERROR('%s is not a trigger on %s', 16, 10, @TriggerName, @TableName);
  END;
 
  EXEC tSQLt.RemoveObject @FullTriggerName;
  
  EXEC(@TriggerCode);
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[ApplyTrigger].[@TableName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetOriginalTableInfo]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetOriginalTableInfo].[OrgTableObjectId]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects].[schema_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects].[name]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects].[object_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[ApplyTrigger].[@TriggerName]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects].[parent_object_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[sql_modules]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[sql_modules].[definition]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[sql_modules].[object_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[RemoveObject]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[ApplyTrigger].[@TableName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[ApplyTrigger].[@TriggerName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="1061" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[ApplyTrigger]&#xD;&#xA;  @TableName NVARCHAR(MAX),&#xD;&#xA;  @TriggerName NVARCHAR(MAX)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[AssertEmptyTable]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  EXEC tSQLt.AssertObjectExists @TableName;

  DECLARE @FullName NVARCHAR(MAX);
  IF(OBJECT_ID(@TableName) IS NULL AND OBJECT_ID('tempdb..'+@TableName) IS NOT NULL)
  BEGIN
    SET @FullName = CASE WHEN LEFT(@TableName,1) = '[' THEN @TableName ELSE QUOTENAME(@TableName)END;
  END;
  ELSE
  BEGIN
    SET @FullName = tSQLt.Private_GetQuotedFullName(OBJECT_ID(@TableName));
  END;

  DECLARE @cmd NVARCHAR(MAX);
  DECLARE @exists INT;
  SET @cmd = 'SELECT @exists = CASE WHEN EXISTS(SELECT 1 FROM '+@FullName+') THEN 1 ELSE 0 END;'
  EXEC sp_executesql @cmd,N'@exists INT OUTPUT', @exists OUTPUT;
  
  IF(@exists = 1)
  BEGIN
    DECLARE @TableToText NVARCHAR(MAX);
    EXEC tSQLt.TableToText @TableName = @FullName,@txt = @TableToText OUTPUT;
    DECLARE @Msg NVARCHAR(MAX);
    SET @Msg = @FullName + ' was not empty:' + CHAR(13) + CHAR(10)+ @TableToText;
    EXEC tSQLt.Fail @Message,@Msg;
  END
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[AssertObjectExists]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[AssertEmptyTable].[@TableName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetQuotedFullName]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[sp_executesql]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TableToText]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TableToText].[@TableName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TableToText].[@txt]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Fail]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[AssertEmptyTable].[@Message]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[AssertEmptyTable].[@TableName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[AssertEmptyTable].[@Message]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="1044" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[AssertEmptyTable]&#xD;&#xA;  @TableName NVARCHAR(MAX),&#xD;&#xA;  @Message NVARCHAR(MAX) = ''&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[AssertEquals]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
    IF ((@Expected = @Actual) OR (@Actual IS NULL AND @Expected IS NULL))
      RETURN 0;

    DECLARE @Msg NVARCHAR(MAX);
    SELECT @Msg = 'Expected: <' + ISNULL(CAST(@Expected AS NVARCHAR(MAX)), 'NULL') + 
                  '> but was: <' + ISNULL(CAST(@Actual AS NVARCHAR(MAX)), 'NULL') + '>';
    IF((COALESCE(@Message,'') <> '') AND (@Message NOT LIKE '% ')) SET @Message = @Message + ' ';
    EXEC tSQLt.Fail @Message, @Msg;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[AssertEquals].[@Expected]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[AssertEquals].[@Actual]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[AssertEquals].[@Message]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Fail]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[AssertEquals].[@Expected]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sql_variant]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[AssertEquals].[@Actual]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sql_variant]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[AssertEquals].[@Message]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="4" />
				<Property Name="Length" Value="587" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;&#xD;&#xA;CREATE PROCEDURE [tSQLt].[AssertEquals]&#xD;&#xA;    @Expected SQL_VARIANT,&#xD;&#xA;    @Actual SQL_VARIANT,&#xD;&#xA;    @Message NVARCHAR(MAX) = ''&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[AssertEqualsString]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
    IF ((@Expected = @Actual) OR (@Actual IS NULL AND @Expected IS NULL))
      RETURN 0;

    DECLARE @Msg NVARCHAR(MAX);
    SELECT @Msg = CHAR(13)+CHAR(10)+
                  'Expected: ' + ISNULL('<'+@Expected+'>', 'NULL') +
                  CHAR(13)+CHAR(10)+
                  'but was : ' + ISNULL('<'+@Actual+'>', 'NULL');
    EXEC tSQLt.Fail @Message, @Msg;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[AssertEqualsString].[@Expected]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[AssertEqualsString].[@Actual]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Fail]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[AssertEqualsString].[@Message]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[AssertEqualsString].[@Expected]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[AssertEqualsString].[@Actual]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[AssertEqualsString].[@Message]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="530" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [tSQLt].[AssertEqualsString]&#xD;&#xA;    @Expected NVARCHAR(MAX),&#xD;&#xA;    @Actual NVARCHAR(MAX),&#xD;&#xA;    @Message NVARCHAR(MAX) = ''&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[AssertEqualsTable]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN

    EXEC tSQLt.AssertObjectExists @Expected;
    EXEC tSQLt.AssertObjectExists @Actual;

    DECLARE @ResultTable NVARCHAR(MAX);    
    DECLARE @ResultColumn NVARCHAR(MAX);    
    DECLARE @ColumnList NVARCHAR(MAX);    
    DECLARE @UnequalRowsExist INT;
    DECLARE @CombinedMessage NVARCHAR(MAX);

    SELECT @ResultTable = tSQLt.Private::CreateUniqueObjectName();
    SELECT @ResultColumn = 'RC_' + @ResultTable;

    EXEC tSQLt.Private_CreateResultTableForCompareTables 
      @ResultTable = @ResultTable,
      @ResultColumn = @ResultColumn,
      @BaseTable = @Expected;
        
    SELECT @ColumnList = tSQLt.Private_GetCommaSeparatedColumnList(@ResultTable, @ResultColumn);

    EXEC tSQLt.Private_ValidateThatAllDataTypesInTableAreSupported @ResultTable, @ColumnList;    
    
    EXEC @UnequalRowsExist = tSQLt.Private_CompareTables 
      @Expected = @Expected,
      @Actual = @Actual,
      @ResultTable = @ResultTable,
      @ColumnList = @ColumnList,
      @MatchIndicatorColumnName = @ResultColumn;
        
    SET @CombinedMessage = ISNULL(@Message + CHAR(13) + CHAR(10),'') + @FailMsg;
    EXEC tSQLt.Private_CompareTablesFailIfUnequalRowsExists 
      @UnequalRowsExist = @UnequalRowsExist,
      @ResultTable = @ResultTable,
      @ResultColumn = @ResultColumn,
      @ColumnList = @ColumnList,
      @FailMsg = @CombinedMessage;   
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[AssertObjectExists]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[AssertEqualsTable].[@Expected]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[AssertEqualsTable].[@Actual]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CreateResultTableForCompareTables]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CreateResultTableForCompareTables].[@ResultTable]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CreateResultTableForCompareTables].[@ResultColumn]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CreateResultTableForCompareTables].[@BaseTable]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetCommaSeparatedColumnList]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ValidateThatAllDataTypesInTableAreSupported]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CompareTables]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CompareTables].[@Expected]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CompareTables].[@Actual]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CompareTables].[@ResultTable]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CompareTables].[@ColumnList]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CompareTables].[@MatchIndicatorColumnName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[AssertEqualsTable].[@Message]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[AssertEqualsTable].[@FailMsg]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CompareTablesFailIfUnequalRowsExists]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CompareTablesFailIfUnequalRowsExists].[@UnequalRowsExist]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CompareTablesFailIfUnequalRowsExists].[@ResultTable]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CompareTablesFailIfUnequalRowsExists].[@ResultColumn]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CompareTablesFailIfUnequalRowsExists].[@ColumnList]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CompareTablesFailIfUnequalRowsExists].[@FailMsg]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[AssertEqualsTable].[@Expected]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[AssertEqualsTable].[@Actual]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[AssertEqualsTable].[@Message]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[AssertEqualsTable].[@FailMsg]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['Unexpected/missing resultset rows!']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="1617" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[AssertEqualsTable]&#xD;&#xA;    @Expected NVARCHAR(MAX),&#xD;&#xA;    @Actual NVARCHAR(MAX),&#xD;&#xA;    @Message NVARCHAR(MAX) = NULL,&#xD;&#xA;    @FailMsg NVARCHAR(MAX) = 'Unexpected/missing resultset rows!'&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[AssertEqualsTableSchema]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  INSERT INTO tSQLt.Private_AssertEqualsTableSchema_Expected([RANK(column_id)],name,system_type_id,user_type_id,max_length,precision,scale,collation_name,is_nullable)
  SELECT 
      RANK()OVER(ORDER BY C.column_id),
      C.name,
      CAST(C.system_type_id AS NVARCHAR(MAX))+QUOTENAME(TS.name) system_type_id,
      CAST(C.user_type_id AS NVARCHAR(MAX))+CASE WHEN TU.system_type_id<> TU.user_type_id THEN QUOTENAME(SCHEMA_NAME(TU.schema_id))+'.' ELSE '' END + QUOTENAME(TU.name) user_type_id,
      C.max_length,
      C.precision,
      C.scale,
      C.collation_name,
      C.is_nullable
    FROM sys.columns AS C
    JOIN sys.types AS TS
      ON C.system_type_id = TS.user_type_id
    JOIN sys.types AS TU
      ON C.user_type_id = TU.user_type_id
   WHERE C.object_id = OBJECT_ID(@Expected);
  INSERT INTO tSQLt.Private_AssertEqualsTableSchema_Actual([RANK(column_id)],name,system_type_id,user_type_id,max_length,precision,scale,collation_name,is_nullable)
  SELECT 
      RANK()OVER(ORDER BY C.column_id),
      C.name,
      CAST(C.system_type_id AS NVARCHAR(MAX))+QUOTENAME(TS.name) system_type_id,
      CAST(C.user_type_id AS NVARCHAR(MAX))+CASE WHEN TU.system_type_id<> TU.user_type_id THEN QUOTENAME(SCHEMA_NAME(TU.schema_id))+'.' ELSE '' END + QUOTENAME(TU.name) user_type_id,
      C.max_length,
      C.precision,
      C.scale,
      C.collation_name,
      C.is_nullable
    FROM sys.columns AS C
    JOIN sys.types AS TS
      ON C.system_type_id = TS.user_type_id
    JOIN sys.types AS TU
      ON C.user_type_id = TU.user_type_id
   WHERE C.object_id = OBJECT_ID(@Actual);
  
  EXEC tSQLt.AssertEqualsTable 'tSQLt.Private_AssertEqualsTableSchema_Expected','tSQLt.Private_AssertEqualsTableSchema_Actual',@Message=@Message,@FailMsg='Unexpected/missing column(s)';  
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[Private_AssertEqualsTableSchema_Expected]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_AssertEqualsTableSchema_Expected].[RANK(column_id)]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_AssertEqualsTableSchema_Expected].[name]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_AssertEqualsTableSchema_Expected].[system_type_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_AssertEqualsTableSchema_Expected].[user_type_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_AssertEqualsTableSchema_Expected].[max_length]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_AssertEqualsTableSchema_Expected].[precision]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_AssertEqualsTableSchema_Expected].[scale]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_AssertEqualsTableSchema_Expected].[collation_name]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_AssertEqualsTableSchema_Expected].[is_nullable]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[types]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns].[system_type_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[types].[user_type_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns].[user_type_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[types].[user_type_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns].[column_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns].[name]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[types].[name]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[types].[system_type_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[types].[schema_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[types].[name]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns].[max_length]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns].[precision]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns].[scale]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns].[collation_name]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns].[is_nullable]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns].[object_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[AssertEqualsTableSchema].[@Expected]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_AssertEqualsTableSchema_Actual]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_AssertEqualsTableSchema_Actual].[RANK(column_id)]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_AssertEqualsTableSchema_Actual].[name]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_AssertEqualsTableSchema_Actual].[system_type_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_AssertEqualsTableSchema_Actual].[user_type_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_AssertEqualsTableSchema_Actual].[max_length]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_AssertEqualsTableSchema_Actual].[precision]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_AssertEqualsTableSchema_Actual].[scale]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_AssertEqualsTableSchema_Actual].[collation_name]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_AssertEqualsTableSchema_Actual].[is_nullable]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[AssertEqualsTableSchema].[@Actual]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[AssertEqualsTable]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[AssertEqualsTable].[@Message]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[AssertEqualsTableSchema].[@Message]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[AssertEqualsTable].[@FailMsg]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[AssertEqualsTableSchema].[@Expected]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[AssertEqualsTableSchema].[@Actual]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[AssertEqualsTableSchema].[@Message]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="1983" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [tSQLt].[AssertEqualsTableSchema]&#xD;&#xA;    @Expected NVARCHAR(MAX),&#xD;&#xA;    @Actual NVARCHAR(MAX),&#xD;&#xA;    @Message NVARCHAR(MAX) = NULL&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[AssertLike]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  IF (LEN(@ExpectedPattern) > 4000)
  BEGIN
    RAISERROR ('@ExpectedPattern may not exceed 4000 characters.', 16, 10);
  END;

  IF ((@Actual LIKE @ExpectedPattern) OR (@Actual IS NULL AND @ExpectedPattern IS NULL))
  BEGIN
    RETURN 0;
  END

  DECLARE @Msg NVARCHAR(MAX);
  SELECT @Msg = CHAR(13) + CHAR(10) + 'Expected: <' + ISNULL(@ExpectedPattern, 'NULL') + '>' +
                CHAR(13) + CHAR(10) + ' but was: <' + ISNULL(@Actual, 'NULL') + '>';
  EXEC tSQLt.Fail @Message, @Msg;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[AssertLike].[@ExpectedPattern]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[AssertLike].[@Actual]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Fail]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[AssertLike].[@Message]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[AssertLike].[@ExpectedPattern]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[AssertLike].[@Actual]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[AssertLike].[@Message]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="651" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [tSQLt].[AssertLike] &#xD;&#xA;  @ExpectedPattern NVARCHAR(MAX),&#xD;&#xA;  @Actual NVARCHAR(MAX),&#xD;&#xA;  @Message NVARCHAR(MAX) = ''&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[AssertNotEquals]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  IF (@Expected = @Actual)
  OR (@Expected IS NULL AND @Actual IS NULL)
  BEGIN
    DECLARE @Msg NVARCHAR(MAX);
    SET @Msg = 'Expected actual value to not ' + 
               COALESCE('equal <' + tSQLt.Private_SqlVariantFormatter(@Expected)+'>', 'be NULL') + 
               '.';
    EXEC tSQLt.Fail @Message,@Msg;
  END;
  RETURN 0;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[AssertNotEquals].[@Expected]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[AssertNotEquals].[@Actual]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_SqlVariantFormatter]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Fail]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[AssertNotEquals].[@Message]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[AssertNotEquals].[@Expected]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sql_variant]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[AssertNotEquals].[@Actual]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sql_variant]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[AssertNotEquals].[@Message]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="494" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[AssertNotEquals]&#xD;&#xA;    @Expected SQL_VARIANT,&#xD;&#xA;    @Actual SQL_VARIANT,&#xD;&#xA;    @Message NVARCHAR(MAX) = ''&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[AssertObjectDoesNotExist]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
     DECLARE @Msg NVARCHAR(MAX);
     IF OBJECT_ID(@ObjectName) IS NOT NULL
     OR(@ObjectName LIKE '#%' AND OBJECT_ID('tempdb..'+@ObjectName) IS NOT NULL)
     BEGIN
         SELECT @Msg = '''' + @ObjectName + ''' does exist!';
         EXEC tSQLt.Fail @Message,@Msg;
     END;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[AssertObjectDoesNotExist].[@ObjectName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Fail]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[AssertObjectDoesNotExist].[@Message]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[AssertObjectDoesNotExist].[@ObjectName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[AssertObjectDoesNotExist].[@Message]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="422" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[AssertObjectDoesNotExist]&#xD;&#xA;    @ObjectName NVARCHAR(MAX),&#xD;&#xA;    @Message NVARCHAR(MAX) = ''&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[AssertObjectExists]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
    DECLARE @Msg NVARCHAR(MAX);
    IF(@ObjectName LIKE '#%')
    BEGIN
     IF OBJECT_ID('tempdb..'+@ObjectName) IS NULL
     BEGIN
         SELECT @Msg = '''' + COALESCE(@ObjectName, 'NULL') + ''' does not exist';
         EXEC tSQLt.Fail @Message, @Msg;
         RETURN 1;
     END;
    END
    ELSE
    BEGIN
     IF OBJECT_ID(@ObjectName) IS NULL
     BEGIN
         SELECT @Msg = '''' + COALESCE(@ObjectName, 'NULL') + ''' does not exist';
         EXEC tSQLt.Fail @Message, @Msg;
         RETURN 1;
     END;
    END;
    RETURN 0;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[AssertObjectExists].[@ObjectName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Fail]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[AssertObjectExists].[@Message]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[AssertObjectExists].[@ObjectName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[AssertObjectExists].[@Message]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="688" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[AssertObjectExists]&#xD;&#xA;    @ObjectName NVARCHAR(MAX),&#xD;&#xA;    @Message NVARCHAR(MAX) = ''&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[AssertResultSetsHaveSameMetaData]">
			<Property Name="IsAnsiNullsOn" />
			<Property Name="IsQuotedIdentifierOn" />
			<Property Name="MethodName" Value="AssertResultSetsHaveSameMetaData" />
			<Property Name="ClassName" Value="tSQLtCLR.StoredProcedures" />
			<Relationship Name="Assembly">
				<Entry>
					<References Name="[tSQLtCLR]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[AssertResultSetsHaveSameMetaData].[@expectedCommand]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[AssertResultSetsHaveSameMetaData].[@actualCommand]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[AssertStringIn]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  IF(NOT EXISTS(SELECT 1 FROM @Expected WHERE value = @Actual))
  BEGIN
    DECLARE @ExpectedMessage NVARCHAR(MAX);
    SELECT value INTO #ExpectedSet FROM @Expected;
    EXEC tSQLt.TableToText @TableName = '#ExpectedSet', @OrderBy = 'value',@txt = @ExpectedMessage OUTPUT;
    SET @ExpectedMessage = ISNULL('<'+@Actual+'>','NULL')+CHAR(13)+CHAR(10)+'is not in'+CHAR(13)+CHAR(10)+@ExpectedMessage;
    EXEC tSQLt.Fail @Message, @ExpectedMessage;
  END;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[AssertStringIn].[@Expected]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[AssertStringIn].[@Expected].[value]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[AssertStringIn].[@Actual]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[AssertStringIn].[@Expected].[value]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TableToText]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TableToText].[@TableName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TableToText].[@OrderBy]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TableToText].[@txt]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Fail]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[AssertStringIn].[@Message]" />
				</Entry>
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[tSQLt].[AssertStringIn].[#ExpectedSet]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[tSQLt].[AssertStringIn].[#ExpectedSet].[value]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[tSQLt].[AssertStringIn].[@Expected].[value]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[tSQLt].[AssertStringIn].[@Expected]" Disambiguator="6">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[tSQLt].[AssertStringIn].[@Expected].[value]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[AssertStringIn].[@Expected]">
						<Property Name="IsReadOnly" Value="True" />
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References Name="[tSQLt].[AssertStringTable]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[AssertStringIn].[@Actual]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[AssertStringIn].[@Message]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="625" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[AssertStringIn]&#xD;&#xA;  @Expected tSQLt.AssertStringTable READONLY,&#xD;&#xA;  @Actual NVARCHAR(MAX),&#xD;&#xA;  @Message NVARCHAR(MAX) = ''&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlTableType" Name="[tSQLt].[AssertStringTable]">
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlTableTypeSimpleColumn" Name="[tSQLt].[AssertStringTable].[value]">
						<Property Name="IsNullable" Value="True" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[CaptureOutput]">
			<Property Name="IsAnsiNullsOn" />
			<Property Name="IsQuotedIdentifierOn" />
			<Property Name="MethodName" Value="CaptureOutput" />
			<Property Name="ClassName" Value="tSQLtCLR.StoredProcedures" />
			<Relationship Name="Assembly">
				<Entry>
					<References Name="[tSQLtCLR]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[CaptureOutput].[@command]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlTable" Name="[tSQLt].[CaptureOutputLog]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[tSQLt].[CaptureOutputLog].[Id]">
						<Property Name="IsNullable" Value="False" />
						<Property Name="IsIdentity" Value="True" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[tSQLt].[CaptureOutputLog].[OutputText]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="10" />
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[DefaultResultFormatter]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
    DECLARE @Msg1 NVARCHAR(MAX);
    DECLARE @Msg2 NVARCHAR(MAX);
    DECLARE @Msg3 NVARCHAR(MAX);
    DECLARE @Msg4 NVARCHAR(MAX);
    DECLARE @IsSuccess INT;
    DECLARE @SuccessCnt INT;
    DECLARE @Severity INT;
    
    SELECT ROW_NUMBER() OVER(ORDER BY Result DESC, Name ASC) No,Name [Test Case Name],
           RIGHT(SPACE(7)+CAST(DATEDIFF(MILLISECOND,TestStartTime,TestEndTime) AS VARCHAR(7)),7) AS [Dur(ms)], Result
      INTO #TestResultOutput
      FROM tSQLt.TestResult;
    
    EXEC tSQLt.TableToText @Msg1 OUTPUT, '#TestResultOutput', 'No';

    SELECT @Msg3 = Msg, 
           @IsSuccess = 1 - SIGN(FailCnt + ErrorCnt),
           @SuccessCnt = SuccessCnt
      FROM tSQLt.TestCaseSummary();
      
    SELECT @Severity = 16*(1-@IsSuccess);
    
    SELECT @Msg2 = REPLICATE('-',LEN(@Msg3)),
           @Msg4 = CHAR(13)+CHAR(10);
    
    
    EXEC tSQLt.Private_Print @Msg4,0;
    EXEC tSQLt.Private_Print '+----------------------+',0;
    EXEC tSQLt.Private_Print '|Test Execution Summary|',0;
    EXEC tSQLt.Private_Print '+----------------------+',0;
    EXEC tSQLt.Private_Print @Msg4,0;
    EXEC tSQLt.Private_Print @Msg1,0;
    EXEC tSQLt.Private_Print @Msg2,0;
    EXEC tSQLt.Private_Print @Msg3, @Severity;
    EXEC tSQLt.Private_Print @Msg2,0;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestResult]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestResult].[Result]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestResult].[Name]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestResult].[TestStartTime]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestResult].[TestEndTime]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TableToText]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestCaseSummary]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestCaseSummary].[Msg]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestCaseSummary].[FailCnt]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestCaseSummary].[ErrorCnt]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestCaseSummary].[SuccessCnt]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_Print]" />
				</Entry>
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[tSQLt].[DefaultResultFormatter].[#TestResultOutput]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[tSQLt].[DefaultResultFormatter].[#TestResultOutput].[No]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[tSQLt].[DefaultResultFormatter].[#TestResultOutput].[Test Case Name]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[tSQLt].[TestResult].[Name]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[tSQLt].[DefaultResultFormatter].[#TestResultOutput].[Dur(ms)]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[tSQLt].[DefaultResultFormatter].[#TestResultOutput].[Result]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[tSQLt].[TestResult].[Result]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="1374" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[DefaultResultFormatter]&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlDefaultConstraint" Name="[tSQLt].[DF:TestResult(TestStartTime)]">
			<Property Name="DefaultExpressionScript">
				<Value><![CDATA[(getdate())]]></Value>
			</Property>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[tSQLt].[TestResult]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForColumn">
				<Entry>
					<References Name="[tSQLt].[TestResult].[TestStartTime]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="33" />
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[DropClass]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
    DECLARE @Cmd NVARCHAR(MAX);

    WITH ObjectInfo(name, type) AS
         (
           SELECT QUOTENAME(SCHEMA_NAME(O.schema_id))+'.'+QUOTENAME(O.name) , O.type
             FROM sys.objects AS O
            WHERE O.schema_id = SCHEMA_ID(@ClassName)
         ),
         TypeInfo(name) AS
         (
           SELECT QUOTENAME(SCHEMA_NAME(T.schema_id))+'.'+QUOTENAME(T.name)
             FROM sys.types AS T
            WHERE T.schema_id = SCHEMA_ID(@ClassName)
         ),
         XMLSchemaInfo(name) AS
         (
           SELECT QUOTENAME(SCHEMA_NAME(XSC.schema_id))+'.'+QUOTENAME(XSC.name)
             FROM sys.xml_schema_collections AS XSC
            WHERE XSC.schema_id = SCHEMA_ID(@ClassName)
         ),
         DropStatements(no,cmd) AS
         (
           SELECT 10,
                  'DROP ' +
                  CASE type WHEN 'P' THEN 'PROCEDURE'
                            WHEN 'PC' THEN 'PROCEDURE'
                            WHEN 'U' THEN 'TABLE'
                            WHEN 'IF' THEN 'FUNCTION'
                            WHEN 'TF' THEN 'FUNCTION'
                            WHEN 'FN' THEN 'FUNCTION'
                            WHEN 'V' THEN 'VIEW'
                   END +
                   ' ' + 
                   name + 
                   ';'
              FROM ObjectInfo
             UNION ALL
           SELECT 20,
                  'DROP TYPE ' +
                   name + 
                   ';'
              FROM TypeInfo
             UNION ALL
           SELECT 30,
                  'DROP XML SCHEMA COLLECTION ' +
                   name + 
                   ';'
              FROM XMLSchemaInfo
             UNION ALL
            SELECT 10000,'DROP SCHEMA ' + QUOTENAME(name) +';'
              FROM sys.schemas
             WHERE schema_id = SCHEMA_ID(PARSENAME(@ClassName,1))
         ),
         StatementBlob(xml)AS
         (
           SELECT cmd [text()]
             FROM DropStatements
            ORDER BY no
              FOR XML PATH(''), TYPE
         )
    SELECT @Cmd = xml.value('/', 'NVARCHAR(MAX)') 
      FROM StatementBlob;

    EXEC(@Cmd);
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects].[schema_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects].[name]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects].[type]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[DropClass].[@ClassName]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[types]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[types].[schema_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[types].[name]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[xml_schema_collections]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[xml_schema_collections].[schema_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[xml_schema_collections].[name]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[DropClass].[CTE1].[ObjectInfo].[type]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[DropClass].[CTE1].[ObjectInfo].[name]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[DropClass].[CTE1].[TypeInfo].[name]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[DropClass].[CTE1].[XMLSchemaInfo].[name]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[schemas]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[schemas].[name]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[schemas].[schema_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[DropClass].[CTE1].[DropStatements].[cmd]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[DropClass].[CTE1].[DropStatements].[no]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[DropClass].[CTE1].[StatementBlob].[xml]" />
				</Entry>
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[tSQLt].[DropClass].[CTE1].[ObjectInfo]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[tSQLt].[DropClass].[CTE1].[ObjectInfo].[name]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[tSQLt].[DropClass].[CTE1].[ObjectInfo].[type]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects].[type]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[tSQLt].[DropClass].[CTE1].[TypeInfo]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[tSQLt].[DropClass].[CTE1].[TypeInfo].[name]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[tSQLt].[DropClass].[CTE1].[XMLSchemaInfo]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[tSQLt].[DropClass].[CTE1].[XMLSchemaInfo].[name]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[tSQLt].[DropClass].[CTE1].[DropStatements]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[tSQLt].[DropClass].[CTE1].[DropStatements].[no]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[tSQLt].[DropClass].[CTE1].[DropStatements].[cmd]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[tSQLt].[DropClass].[CTE1].[StatementBlob]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[tSQLt].[DropClass].[CTE1].[StatementBlob].[xml]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[tSQLt].[DropClass].[CTE1].[DropStatements].[cmd]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[DropClass].[@ClassName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="2267" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[DropClass]&#xD;&#xA;    @ClassName NVARCHAR(MAX)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[EnableExternalAccess]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  BEGIN TRY
    IF @enable = 1
    BEGIN
      EXEC('ALTER ASSEMBLY tSQLtCLR WITH PERMISSION_SET = EXTERNAL_ACCESS;');
    END
    ELSE
    BEGIN
      EXEC('ALTER ASSEMBLY tSQLtCLR WITH PERMISSION_SET = SAFE;');
    END
  END TRY
  BEGIN CATCH
    IF(@try = 0)
    BEGIN
      DECLARE @Message NVARCHAR(4000);
      SET @Message = 'The attempt to ' +
                      CASE WHEN @enable = 1 THEN 'enable' ELSE 'disable' END +
                      ' tSQLt features requiring EXTERNAL_ACCESS failed' +
                      ': '+ERROR_MESSAGE();
      RAISERROR(@Message,16,10);
    END;
    RETURN -1;
  END CATCH;
  RETURN 0;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[EnableExternalAccess].[@enable]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[EnableExternalAccess].[@try]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[EnableExternalAccess].[@try]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[EnableExternalAccess].[@enable]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[1]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="755" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [tSQLt].[EnableExternalAccess]&#xD;&#xA;  @try BIT = 0,&#xD;&#xA;  @enable BIT = 1&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[ExpectException]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
 IF(EXISTS(SELECT 1 FROM #ExpectException WHERE ExpectException = 1))
 BEGIN
   DELETE #ExpectException;
   RAISERROR('Each test can only contain one call to tSQLt.ExpectException.',16,10);
 END;
 
 INSERT INTO #ExpectException(ExpectException, ExpectedMessage, ExpectedSeverity, ExpectedState, ExpectedMessagePattern, ExpectedErrorNumber, FailMessage)
 VALUES(1, @ExpectedMessage, @ExpectedSeverity, @ExpectedState, @ExpectedMessagePattern, @ExpectedErrorNumber, @Message);
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[tSQLt].[ExpectException].[@ExpectedMessage]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[ExpectException].[@ExpectedSeverity]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[ExpectException].[@ExpectedState]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[ExpectException].[@ExpectedMessagePattern]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[ExpectException].[@ExpectedErrorNumber]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[ExpectException].[@Message]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[ExpectException].[@ExpectedMessage]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[ExpectException].[@ExpectedSeverity]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[ExpectException].[@ExpectedState]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[ExpectException].[@Message]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[ExpectException].[@ExpectedMessagePattern]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[ExpectException].[@ExpectedErrorNumber]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="755" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[ExpectException]&#xD;&#xA;@ExpectedMessage NVARCHAR(MAX) = NULL,&#xD;&#xA;@ExpectedSeverity INT = NULL,&#xD;&#xA;@ExpectedState INT = NULL,&#xD;&#xA;@Message NVARCHAR(MAX) = NULL,&#xD;&#xA;@ExpectedMessagePattern NVARCHAR(MAX) = NULL,&#xD;&#xA;@ExpectedErrorNumber INT = NULL&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[ExpectNoException]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
 IF(EXISTS(SELECT 1 FROM #ExpectException WHERE ExpectException = 0))
 BEGIN
   DELETE #ExpectException;
   RAISERROR('Each test can only contain one call to tSQLt.ExpectNoException.',16,10);
 END;
 IF(EXISTS(SELECT 1 FROM #ExpectException WHERE ExpectException = 1))
 BEGIN
   DELETE #ExpectException;
   RAISERROR('tSQLt.ExpectNoException cannot follow tSQLt.ExpectException inside a single test.',16,10);
 END;
 
 INSERT INTO #ExpectException(ExpectException, FailMessage)
 VALUES(0, @Message);
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[tSQLt].[ExpectNoException].[@Message]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[ExpectNoException].[@Message]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="607" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[ExpectNoException]&#xD;&#xA;  @Message NVARCHAR(MAX) = NULL&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlInlineTableValuedFunction" Name="[tSQLt].[F_Num]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[F_Num].[@N]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[F_Num].[CTE1].[C6].[c]" />
				</Entry>
			</Relationship>
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[F_Num].[no]" />
				</Entry>
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[tSQLt].[F_Num].[CTE1].[C0]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[tSQLt].[F_Num].[CTE1].[C0].[c]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[tSQLt].[F_Num].[CTE1].[C1]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[tSQLt].[F_Num].[CTE1].[C1].[c]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[tSQLt].[F_Num].[CTE1].[C2]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[tSQLt].[F_Num].[CTE1].[C2].[c]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[tSQLt].[F_Num].[CTE1].[C3]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[tSQLt].[F_Num].[CTE1].[C3].[c]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[tSQLt].[F_Num].[CTE1].[C4]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[tSQLt].[F_Num].[CTE1].[C4].[c]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[tSQLt].[F_Num].[CTE1].[C5]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[tSQLt].[F_Num].[CTE1].[C5].[c]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[tSQLt].[F_Num].[CTE1].[C6]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[tSQLt].[F_Num].[CTE1].[C6].[c]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[ WITH C0(c) AS (SELECT 1 UNION ALL SELECT 1),
            C1(c) AS (SELECT 1 FROM C0 AS A CROSS JOIN C0 AS B),
            C2(c) AS (SELECT 1 FROM C1 AS A CROSS JOIN C1 AS B),
            C3(c) AS (SELECT 1 FROM C2 AS A CROSS JOIN C2 AS B),
            C4(c) AS (SELECT 1 FROM C3 AS A CROSS JOIN C3 AS B),
            C5(c) AS (SELECT 1 FROM C4 AS A CROSS JOIN C4 AS B),
            C6(c) AS (SELECT 1 FROM C5 AS A CROSS JOIN C5 AS B)
       SELECT TOP(CASE WHEN @N>0 THEN @N ELSE 0 END) ROW_NUMBER() OVER (ORDER BY c) no
         FROM C6]]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="CreateOffset" Value="6" />
							<Property Name="Length" Value="632" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;CREATE FUNCTION [tSQLt].[F_Num](&#xD;&#xA;       @N INT&#xD;&#xA;)&#xD;&#xA;RETURNS TABLE &#xD;&#xA;AS &#xD;&#xA;RETURN" />
							<Property Name="FooterContents" Value=";" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[F_Num].[@N]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Fail]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
   DECLARE @WarningMessage NVARCHAR(MAX);
   SET @WarningMessage = '';

   IF XACT_STATE() = -1
   BEGIN
     SET @WarningMessage = CHAR(13)+CHAR(10)+'Warning: Uncommitable transaction detected!';

     DECLARE @TranName NVARCHAR(MAX);
     SELECT @TranName = TranName
       FROM tSQLt.TestResult
      WHERE Id = (SELECT MAX(Id) FROM tSQLt.TestResult);

     DECLARE @TranCount INT;
     SET @TranCount = @@TRANCOUNT;
     ROLLBACK;
     WHILE(@TranCount>0)
     BEGIN
       BEGIN TRAN;
       SET @TranCount = @TranCount -1;
     END;
     SAVE TRAN @TranName;
   END;

   INSERT INTO tSQLt.TestMessage(Msg)
   SELECT COALESCE(@Message0, '!NULL!')
        + COALESCE(@Message1, '!NULL!')
        + COALESCE(@Message2, '!NULL!')
        + COALESCE(@Message3, '!NULL!')
        + COALESCE(@Message4, '!NULL!')
        + COALESCE(@Message5, '!NULL!')
        + COALESCE(@Message6, '!NULL!')
        + COALESCE(@Message7, '!NULL!')
        + COALESCE(@Message8, '!NULL!')
        + COALESCE(@Message9, '!NULL!')
        + @WarningMessage;
        
   RAISERROR('tSQLt.Failure',16,10);
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestResult]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestResult].[TranName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestResult].[Id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestResult].[Id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestMessage]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestMessage].[Msg]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Fail].[@Message0]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Fail].[@Message1]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Fail].[@Message2]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Fail].[@Message3]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Fail].[@Message4]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Fail].[@Message5]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Fail].[@Message6]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Fail].[@Message7]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Fail].[@Message8]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Fail].[@Message9]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Fail].[@Message0]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Fail].[@Message1]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Fail].[@Message2]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Fail].[@Message3]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Fail].[@Message4]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Fail].[@Message5]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Fail].[@Message6]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Fail].[@Message7]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Fail].[@Message8]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Fail].[@Message9]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="1521" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[Fail]&#xD;&#xA;    @Message0 NVARCHAR(MAX) = '',&#xD;&#xA;    @Message1 NVARCHAR(MAX) = '',&#xD;&#xA;    @Message2 NVARCHAR(MAX) = '',&#xD;&#xA;    @Message3 NVARCHAR(MAX) = '',&#xD;&#xA;    @Message4 NVARCHAR(MAX) = '',&#xD;&#xA;    @Message5 NVARCHAR(MAX) = '',&#xD;&#xA;    @Message6 NVARCHAR(MAX) = '',&#xD;&#xA;    @Message7 NVARCHAR(MAX) = '',&#xD;&#xA;    @Message8 NVARCHAR(MAX) = '',&#xD;&#xA;    @Message9 NVARCHAR(MAX) = ''&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[FakeFunction]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  DECLARE @FunctionObjectId INT;
  DECLARE @FakeFunctionObjectId INT;
  DECLARE @IsScalarFunction BIT;

  EXEC tSQLt.Private_ValidateObjectsCompatibleWithFakeFunction 
               @FunctionName = @FunctionName,
               @FakeFunctionName = @FakeFunctionName,
               @FunctionObjectId = @FunctionObjectId OUT,
               @FakeFunctionObjectId = @FakeFunctionObjectId OUT,
               @IsScalarFunction = @IsScalarFunction OUT;

  EXEC tSQLt.RemoveObject @ObjectName = @FunctionName;

  EXEC tSQLt.Private_CreateFakeFunction 
               @FunctionName = @FunctionName,
               @FakeFunctionName = @FakeFunctionName,
               @FunctionObjectId = @FunctionObjectId,
               @FakeFunctionObjectId = @FakeFunctionObjectId,
               @IsScalarFunction = @IsScalarFunction;

END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ValidateObjectsCompatibleWithFakeFunction]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ValidateObjectsCompatibleWithFakeFunction].[@FunctionName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[FakeFunction].[@FunctionName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ValidateObjectsCompatibleWithFakeFunction].[@FakeFunctionName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[FakeFunction].[@FakeFunctionName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ValidateObjectsCompatibleWithFakeFunction].[@FunctionObjectId]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ValidateObjectsCompatibleWithFakeFunction].[@FakeFunctionObjectId]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ValidateObjectsCompatibleWithFakeFunction].[@IsScalarFunction]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[RemoveObject]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[RemoveObject].[@ObjectName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CreateFakeFunction]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CreateFakeFunction].[@FunctionName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CreateFakeFunction].[@FakeFunctionName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CreateFakeFunction].[@FunctionObjectId]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CreateFakeFunction].[@FakeFunctionObjectId]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CreateFakeFunction].[@IsScalarFunction]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[FakeFunction].[@FunctionName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[FakeFunction].[@FakeFunctionName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="962" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [tSQLt].[FakeFunction]&#xD;&#xA;  @FunctionName NVARCHAR(MAX),&#xD;&#xA;  @FakeFunctionName NVARCHAR(MAX)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[FakeTable]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
   DECLARE @OrigSchemaName NVARCHAR(MAX);
   DECLARE @OrigTableName NVARCHAR(MAX);
   DECLARE @NewNameOfOriginalTable NVARCHAR(4000);
   DECLARE @OrigTableFullName NVARCHAR(MAX); SET @OrigTableFullName = NULL;
   
   SELECT @OrigSchemaName = @SchemaName,
          @OrigTableName = @TableName
   
   IF(@OrigTableName NOT IN (PARSENAME(@OrigTableName,1),QUOTENAME(PARSENAME(@OrigTableName,1)))
      AND @OrigSchemaName IS NOT NULL)
   BEGIN
     RAISERROR('When @TableName is a multi-part identifier, @SchemaName must be NULL!',16,10);
   END

   SELECT @SchemaName = CleanSchemaName,
          @TableName = CleanTableName
     FROM tSQLt.Private_ResolveFakeTableNamesForBackwardCompatibility(@TableName, @SchemaName);
   
   EXEC tSQLt.Private_ValidateFakeTableParameters @SchemaName,@OrigTableName,@OrigSchemaName;

   EXEC tSQLt.Private_RenameObjectToUniqueName @SchemaName, @TableName, @NewNameOfOriginalTable OUTPUT;

   SELECT @OrigTableFullName = S.base_object_name
     FROM sys.synonyms AS S 
    WHERE S.object_id = OBJECT_ID(@SchemaName + '.' + @NewNameOfOriginalTable);

   IF(@OrigTableFullName IS NOT NULL)
   BEGIN
     IF(COALESCE(OBJECT_ID(@OrigTableFullName,'U'),OBJECT_ID(@OrigTableFullName,'V')) IS NULL)
     BEGIN
       RAISERROR('Cannot fake synonym %s.%s as it is pointing to %s, which is not a table or view!',16,10,@SchemaName,@TableName,@OrigTableFullName);
     END;
   END;
   ELSE
   BEGIN
     SET @OrigTableFullName = @SchemaName + '.' + @NewNameOfOriginalTable;
   END;

   EXEC tSQLt.Private_CreateFakeOfTable @SchemaName, @TableName, @OrigTableFullName, @Identity, @ComputedColumns, @Defaults;

   EXEC tSQLt.Private_MarkFakeTable @SchemaName, @TableName, @NewNameOfOriginalTable;
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[FakeTable].[@SchemaName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[FakeTable].[@TableName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveFakeTableNamesForBackwardCompatibility]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveFakeTableNamesForBackwardCompatibility].[CleanSchemaName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveFakeTableNamesForBackwardCompatibility].[CleanTableName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ValidateFakeTableParameters]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RenameObjectToUniqueName]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[synonyms]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[synonyms].[base_object_name]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[synonyms].[object_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CreateFakeOfTable]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[FakeTable].[@Identity]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[FakeTable].[@ComputedColumns]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[FakeTable].[@Defaults]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_MarkFakeTable]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[FakeTable].[@TableName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[FakeTable].[@SchemaName]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[FakeTable].[@Identity]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[FakeTable].[@ComputedColumns]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[FakeTable].[@Defaults]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="2054" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[FakeTable]&#xD;&#xA;    @TableName NVARCHAR(MAX),&#xD;&#xA;    @SchemaName NVARCHAR(MAX) = NULL, --parameter preserved for backward compatibility. Do not use. Will be removed soon.&#xD;&#xA;    @Identity BIT = NULL,&#xD;&#xA;    @ComputedColumns BIT = NULL,&#xD;&#xA;    @Defaults BIT = NULL&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[GetNewTranName]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  SELECT @TranName = LEFT('tSQLtTran'+REPLACE(CAST(NEWID() AS NVARCHAR(60)),'-',''),32);
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[GetNewTranName].[@TranName]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[GetNewTranName].[@TranName]">
						<Property Name="IsOutput" Value="True" />
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="32" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[char]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="4" />
				<Property Name="Length" Value="181" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;&#xD;&#xA;CREATE PROCEDURE [tSQLt].[GetNewTranName]&#xD;&#xA;  @TranName CHAR(32) OUTPUT&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlScalarFunction" Name="[tSQLt].[GetTestResultFormatter]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[extended_properties]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[extended_properties].[value]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[extended_properties].[name]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[extended_properties].[major_id]" />
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[
BEGIN
    DECLARE @FormatterName NVARCHAR(MAX);
    
    SELECT @FormatterName = CAST(value AS NVARCHAR(MAX))
    FROM sys.extended_properties
    WHERE name = N'tSQLt.ResultsFormatter'
      AND major_id = OBJECT_ID('tSQLt.Private_OutputTestResults');
      
    SELECT @FormatterName = COALESCE(@FormatterName, 'tSQLt.DefaultResultFormatter');
    
    RETURN @FormatterName;
END;]]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="CreateOffset" Value="2" />
							<Property Name="Length" Value="474" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE FUNCTION [tSQLt].[GetTestResultFormatter]()&#xD;&#xA;RETURNS NVARCHAR(MAX)&#xD;&#xA;AS" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Relationship Name="Type">
				<Entry>
					<Element Type="SqlTypeSpecifier">
						<Property Name="IsMax" Value="True" />
						<Relationship Name="Type">
							<Entry>
								<References ExternalSource="BuiltIns" Name="[nvarchar]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlInlineTableValuedFunction" Name="[tSQLt].[Info]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[Private_SqlVersion]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_SqlVersion].[ProductVersion]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_SqlVersion].[Edition]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[numeric]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[numeric]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private]" />
				</Entry>
			</Relationship>
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Info].[Version]" />
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Info].[ClrVersion]" />
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Info].[ClrSigningKey]" />
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Info].[SqlVersion]" />
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Info].[SqlBuild]" />
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Info].[SqlEdition]" />
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[
SELECT Version = '1.0.5873.27393',
       ClrVersion = (SELECT tSQLt.Private::Info()),
       ClrSigningKey = (SELECT tSQLt.Private::SigningKey()),
       V.SqlVersion,
       V.SqlBuild,
       V.SqlEdition
  FROM
  (
    SELECT CAST(VI.major+'.'+VI.minor AS NUMERIC(10,2)) AS SqlVersion,
           CAST(VI.build+'.'+VI.revision AS NUMERIC(10,2)) AS SqlBuild,
           SqlEdition
      FROM
      (
        SELECT PARSENAME(PSV.ProductVersion,4) major,
               PARSENAME(PSV.ProductVersion,3) minor, 
               PARSENAME(PSV.ProductVersion,2) build,
               PARSENAME(PSV.ProductVersion,1) revision,
               Edition AS SqlEdition
          FROM tSQLt.Private_SqlVersion() AS PSV
      )VI
  )V]]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="CreateOffset" Value="2" />
							<Property Name="Length" Value="807" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE FUNCTION [tSQLt].[Info]()&#xD;&#xA;RETURNS TABLE&#xD;&#xA;AS&#xD;&#xA;RETURN" />
							<Property Name="FooterContents" Value=";" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[InstallExternalAccessKey]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  IF(NOT EXISTS(SELECT * FROM sys.fn_my_permissions(NULL,'server') AS FMP WHERE FMP.permission_name = 'CONTROL SERVER'))
  BEGIN
    RAISERROR('Only principals with CONTROL SERVER permission can execute this procedure.',16,10);
    RETURN -1;
  END;

  DECLARE @cmd NVARCHAR(MAX);
  DECLARE @cmd2 NVARCHAR(MAX);
  DECLARE @master_sys_sp_executesql NVARCHAR(MAX); SET @master_sys_sp_executesql = 'master.sys.sp_executesql';

  SET @cmd = 'IF EXISTS(SELECT * FROM sys.assemblies WHERE name = ''tSQLtExternalAccessKey'') DROP ASSEMBLY tSQLtExternalAccessKey;';
  EXEC @master_sys_sp_executesql @cmd;

  SET @cmd2 = 'SELECT @cmd = ''DROP ASSEMBLY ''+QUOTENAME(A.name)+'';'''+ 
              '  FROM master.sys.assemblies AS A'+
              ' WHERE A.clr_name LIKE ''tsqltexternalaccesskey, %'';';
  EXEC sys.sp_executesql @cmd2,N'@cmd NVARCHAR(MAX) OUTPUT',@cmd OUT;
  EXEC @master_sys_sp_executesql @cmd;

  SELECT @cmd = 
         'CREATE ASSEMBLY tSQLtExternalAccessKey AUTHORIZATION dbo FROM ' +
         BH.prefix +
         ' WITH PERMISSION_SET = SAFE;'       
    FROM tSQLt.Private_GetExternalAccessKeyBytes() AS PGEAKB
   CROSS APPLY tSQLt.Private_Bin2Hex(PGEAKB.ExternalAccessKeyBytes) BH;
  EXEC @master_sys_sp_executesql @cmd;

  IF SUSER_ID('tSQLtExternalAccessKey') IS NOT NULL DROP LOGIN tSQLtExternalAccessKey;

  SET @cmd = N'IF ASYMKEY_ID(''tSQLtExternalAccessKey'') IS NOT NULL DROP ASYMMETRIC KEY tSQLtExternalAccessKey;';
  EXEC @master_sys_sp_executesql @cmd;

  SET @cmd2 = 'SELECT @cmd = ISNULL(''DROP LOGIN ''+QUOTENAME(SP.name)+'';'','''')+''DROP ASYMMETRIC KEY '' + QUOTENAME(AK.name) + '';'''+
              '  FROM master.sys.asymmetric_keys AS AK'+
              '  JOIN tSQLt.Private_GetExternalAccessKeyBytes() AS PGEAKB'+
              '    ON AK.thumbprint = PGEAKB.ExternalAccessKeyThumbPrint'+
              '  LEFT JOIN master.sys.server_principals AS SP'+
              '    ON AK.sid = SP.sid;';
  EXEC sys.sp_executesql @cmd2,N'@cmd NVARCHAR(MAX) OUTPUT',@cmd OUT;
  EXEC @master_sys_sp_executesql @cmd;

  SET @cmd = 'CREATE ASYMMETRIC KEY tSQLtExternalAccessKey FROM ASSEMBLY tSQLtExternalAccessKey;';
  EXEC @master_sys_sp_executesql @cmd;
 
  SET @cmd = 'CREATE LOGIN tSQLtExternalAccessKey FROM ASYMMETRIC KEY tSQLtExternalAccessKey;';
  EXEC @master_sys_sp_executesql @cmd;

  SET @cmd = 'DROP ASSEMBLY tSQLtExternalAccessKey;';
  EXEC @master_sys_sp_executesql @cmd;

  SET @cmd = 'GRANT EXTERNAL ACCESS ASSEMBLY TO tSQLtExternalAccessKey;';
  EXEC @master_sys_sp_executesql @cmd;

END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[fn_my_permissions]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[fn_my_permissions].[permission_name]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[sp_executesql]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetExternalAccessKeyBytes]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetExternalAccessKeyBytes].[ExternalAccessKeyBytes]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_Bin2Hex]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_Bin2Hex].[prefix]" />
				</Entry>
				<Entry />
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="2649" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [tSQLt].[InstallExternalAccessKey]&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[LogCapturedOutput]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  INSERT INTO tSQLt.CaptureOutputLog (OutputText) VALUES (@text);
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[CaptureOutputLog]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[CaptureOutputLog].[OutputText]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[LogCapturedOutput].[@text]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[LogCapturedOutput].[@text]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="150" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[LogCapturedOutput] @text NVARCHAR(MAX)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[NewConnection]">
			<Property Name="IsAnsiNullsOn" />
			<Property Name="IsQuotedIdentifierOn" />
			<Property Name="MethodName" Value="NewConnection" />
			<Property Name="ClassName" Value="tSQLtCLR.StoredProcedures" />
			<Relationship Name="Assembly">
				<Entry>
					<References Name="[tSQLtCLR]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[NewConnection].[@command]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[NewTestClass]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  BEGIN TRY
    EXEC tSQLt.Private_DisallowOverwritingNonTestSchema @ClassName;

    EXEC tSQLt.DropClass @ClassName = @ClassName;

    DECLARE @QuotedClassName NVARCHAR(MAX);
    SELECT @QuotedClassName = tSQLt.Private_QuoteClassNameForNewTestClass(@ClassName);

    EXEC ('CREATE SCHEMA ' + @QuotedClassName);  
    EXEC tSQLt.Private_MarkSchemaAsTestClass @QuotedClassName;
  END TRY
  BEGIN CATCH
    DECLARE @ErrMsg NVARCHAR(MAX);SET @ErrMsg = ERROR_MESSAGE() + ' (Error originated in ' + ERROR_PROCEDURE() + ')';
    DECLARE @ErrSvr INT;SET @ErrSvr = ERROR_SEVERITY();
    
    RAISERROR(@ErrMsg, @ErrSvr, 10);
  END CATCH;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_DisallowOverwritingNonTestSchema]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[NewTestClass].[@ClassName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[DropClass]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[DropClass].[@ClassName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_QuoteClassNameForNewTestClass]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_MarkSchemaAsTestClass]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[NewTestClass].[@ClassName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="735" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[NewTestClass]&#xD;&#xA;    @ClassName NVARCHAR(MAX)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[NullTestResultFormatter]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  RETURN 0;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="82" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[NullTestResultFormatter]&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlPrimaryKeyConstraint" Name="[tSQLt].[PK__Private_RenamedObjectLog__Id]">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[tSQLt].[Private_RenamedObjectLog].[Id]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[tSQLt].[Private_RenamedObjectLog]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="34" />
		</Element>
		<Element Type="SqlUserDefinedType" Name="[tSQLt].[Private]">
			<Property Name="Format" Value="2" />
			<Property Name="MaxByteSize" Value="1" />
			<Property Name="IsFixedLength" Value="True" />
			<Property Name="ClassName" Value="tSQLtCLR.tSQLtPrivate" />
			<Relationship Name="Assembly">
				<Entry>
					<References Name="[tSQLtCLR]" />
				</Entry>
			</Relationship>
			<Relationship Name="Methods">
				<Entry>
					<Element Type="SqlClrMethod" Name="[tSQLt].[Private].[Info]">
						<Property Name="ClrName" Value="Info" />
						<Relationship Name="ReturnType">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlClrMethod" Name="[tSQLt].[Private].[SigningKey]">
						<Property Name="ClrName" Value="SigningKey" />
						<Relationship Name="ReturnType">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="8000" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varbinary]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlClrMethod" Name="[tSQLt].[Private].[CreateUniqueObjectName]">
						<Property Name="ClrName" Value="CreateUniqueObjectName" />
						<Relationship Name="ReturnType">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlClrMethod" Name="[tSQLt].[Private].[TableToString]">
						<Property Name="ClrName" Value="TableToString" />
						<Relationship Name="Parameters">
							<Entry>
								<Element Type="SqlClrMethodParameter" Name="[tSQLt].[Private].[TableToString].[TableName]">
									<Property Name="ClrName" Value="TableName" />
									<Relationship Name="Type">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlClrMethodParameter" Name="[tSQLt].[Private].[TableToString].[OrderOption]">
									<Property Name="ClrName" Value="OrderOption" />
									<Relationship Name="Type">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlClrMethodParameter" Name="[tSQLt].[Private].[TableToString].[ColumnList]">
									<Property Name="ClrName" Value="ColumnList" />
									<Relationship Name="Type">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
						<Relationship Name="ReturnType">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlClrMethod" Name="[tSQLt].[Private].[GetAlterStatementWithoutSchemaBinding]">
						<Property Name="ClrName" Value="GetAlterStatementWithoutSchemaBinding" />
						<Relationship Name="Parameters">
							<Entry>
								<Element Type="SqlClrMethodParameter" Name="[tSQLt].[Private].[GetAlterStatementWithoutSchemaBinding].[createStatement]">
									<Property Name="ClrName" Value="createStatement" />
									<Relationship Name="Type">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
						<Relationship Name="ReturnType">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlClrMethod" Name="[tSQLt].[Private].[get_Null]">
						<Property Name="ClrName" Value="get_Null" />
						<Relationship Name="ReturnType">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References Name="[tSQLt].[Private]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlClrMethod" Name="[tSQLt].[Private].[get_IsNull]">
						<Property Name="ClrName" Value="get_IsNull" />
						<Relationship Name="ReturnType">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlClrMethod" Name="[tSQLt].[Private].[Parse]">
						<Property Name="ClrName" Value="Parse" />
						<Relationship Name="Parameters">
							<Entry>
								<Element Type="SqlClrMethodParameter" Name="[tSQLt].[Private].[Parse].[input]">
									<Property Name="ClrName" Value="input" />
									<Relationship Name="Type">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
						<Relationship Name="ReturnType">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References Name="[tSQLt].[Private]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlClrMethod" Name="[tSQLt].[Private].[ToString]">
						<Property Name="ClrName" Value="ToString" />
						<Relationship Name="ReturnType">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Properties">
				<Entry>
					<Element Type="SqlClrProperty" Name="[tSQLt].[Private].[Null]">
						<Property Name="ClrName" Value="Null" />
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References Name="[tSQLt].[Private]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlClrProperty" Name="[tSQLt].[Private].[IsNull]">
						<Property Name="ClrName" Value="IsNull" />
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Private_ApplyCheckConstraint]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  DECLARE @Cmd NVARCHAR(MAX);
  SELECT @Cmd = 'CONSTRAINT ' + QUOTENAME(name) + ' CHECK' + definition 
    FROM sys.check_constraints
   WHERE object_id = @ConstraintObjectId;
  
  DECLARE @QuotedTableName NVARCHAR(MAX);
  
  SELECT @QuotedTableName = QuotedTableName FROM tSQLt.Private_GetQuotedTableNameForConstraint(@ConstraintObjectId);

  EXEC tSQLt.Private_RenameObjectToUniqueNameUsingObjectId @ConstraintObjectId;
  SELECT @Cmd = 'ALTER TABLE ' + @QuotedTableName + ' ADD ' + @Cmd
    FROM sys.objects 
   WHERE object_id = @ConstraintObjectId;

  EXEC (@Cmd);

END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[check_constraints]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[check_constraints].[name]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[check_constraints].[definition]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[check_constraints].[object_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ApplyCheckConstraint].[@ConstraintObjectId]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetQuotedTableNameForConstraint]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetQuotedTableNameForConstraint].[QuotedTableName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RenameObjectToUniqueNameUsingObjectId]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects].[object_id]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_ApplyCheckConstraint].[@ConstraintObjectId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="687" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[Private_ApplyCheckConstraint]&#xD;&#xA;  @ConstraintObjectId INT&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Private_ApplyForeignKeyConstraint]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  DECLARE @SchemaName NVARCHAR(MAX);
  DECLARE @OrgTableName NVARCHAR(MAX);
  DECLARE @TableName NVARCHAR(MAX);
  DECLARE @ConstraintName NVARCHAR(MAX);
  DECLARE @CreateFkCmd NVARCHAR(MAX);
  DECLARE @AlterTableCmd NVARCHAR(MAX);
  DECLARE @CreateIndexCmd NVARCHAR(MAX);
  DECLARE @FinalCmd NVARCHAR(MAX);
  
  SELECT @SchemaName = SchemaName,
         @OrgTableName = OrgTableName,
         @TableName = TableName,
         @ConstraintName = OBJECT_NAME(@ConstraintObjectId)
    FROM tSQLt.Private_GetQuotedTableNameForConstraint(@ConstraintObjectId);
      
  SELECT @CreateFkCmd = cmd, @CreateIndexCmd = CreIdxCmd
    FROM tSQLt.Private_GetForeignKeyDefinition(@SchemaName, @OrgTableName, @ConstraintName, @NoCascade);
  SELECT @AlterTableCmd = 'ALTER TABLE ' + QUOTENAME(@SchemaName) + '.' + QUOTENAME(@TableName) + 
                          ' ADD ' + @CreateFkCmd;
  SELECT @FinalCmd = @CreateIndexCmd + @AlterTableCmd;

  EXEC tSQLt.Private_RenameObjectToUniqueName @SchemaName, @ConstraintName;
  EXEC (@FinalCmd);
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ApplyForeignKeyConstraint].[@ConstraintObjectId]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetQuotedTableNameForConstraint]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetQuotedTableNameForConstraint].[SchemaName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetQuotedTableNameForConstraint].[OrgTableName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetQuotedTableNameForConstraint].[TableName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ApplyForeignKeyConstraint].[@NoCascade]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetForeignKeyDefinition]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetForeignKeyDefinition].[cmd]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetForeignKeyDefinition].[CreIdxCmd]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RenameObjectToUniqueName]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_ApplyForeignKeyConstraint].[@ConstraintObjectId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_ApplyForeignKeyConstraint].[@NoCascade]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="1173" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[Private_ApplyForeignKeyConstraint] &#xD;&#xA;  @ConstraintObjectId INT,&#xD;&#xA;  @NoCascade BIT&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Private_ApplyUniqueConstraint]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  DECLARE @SchemaName NVARCHAR(MAX);
  DECLARE @OrgTableName NVARCHAR(MAX);
  DECLARE @TableName NVARCHAR(MAX);
  DECLARE @ConstraintName NVARCHAR(MAX);
  DECLARE @CreateConstraintCmd NVARCHAR(MAX);
  DECLARE @AlterColumnsCmd NVARCHAR(MAX);
  
  SELECT @SchemaName = SchemaName,
         @OrgTableName = OrgTableName,
         @TableName = TableName,
         @ConstraintName = OBJECT_NAME(@ConstraintObjectId)
    FROM tSQLt.Private_GetQuotedTableNameForConstraint(@ConstraintObjectId);
      
  SELECT @AlterColumnsCmd = NotNullColumnCmd,
         @CreateConstraintCmd = CreateConstraintCmd
    FROM tSQLt.Private_GetUniqueConstraintDefinition(@ConstraintObjectId, QUOTENAME(@SchemaName) + '.' + QUOTENAME(@TableName));

  EXEC tSQLt.Private_RenameObjectToUniqueName @SchemaName, @ConstraintName;
  EXEC (@AlterColumnsCmd);
  EXEC (@CreateConstraintCmd);
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ApplyUniqueConstraint].[@ConstraintObjectId]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetQuotedTableNameForConstraint]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetQuotedTableNameForConstraint].[SchemaName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetQuotedTableNameForConstraint].[OrgTableName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetQuotedTableNameForConstraint].[TableName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetUniqueConstraintDefinition]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetUniqueConstraintDefinition].[NotNullColumnCmd]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetUniqueConstraintDefinition].[CreateConstraintCmd]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RenameObjectToUniqueName]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_ApplyUniqueConstraint].[@ConstraintObjectId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="980" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[Private_ApplyUniqueConstraint] &#xD;&#xA;  @ConstraintObjectId INT&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlTable" Name="[tSQLt].[Private_AssertEqualsTableSchema_Actual]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[tSQLt].[Private_AssertEqualsTableSchema_Actual].[name]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="256" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[tSQLt].[Private_AssertEqualsTableSchema_Actual].[RANK(column_id)]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[tSQLt].[Private_AssertEqualsTableSchema_Actual].[system_type_id]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[tSQLt].[Private_AssertEqualsTableSchema_Actual].[user_type_id]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[tSQLt].[Private_AssertEqualsTableSchema_Actual].[max_length]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[smallint]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[tSQLt].[Private_AssertEqualsTableSchema_Actual].[precision]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[tinyint]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[tSQLt].[Private_AssertEqualsTableSchema_Actual].[scale]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[tinyint]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[tSQLt].[Private_AssertEqualsTableSchema_Actual].[collation_name]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="256" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[tSQLt].[Private_AssertEqualsTableSchema_Actual].[is_nullable]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[tSQLt].[Private_AssertEqualsTableSchema_Actual].[is_identity]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlTable" Name="[tSQLt].[Private_AssertEqualsTableSchema_Expected]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[tSQLt].[Private_AssertEqualsTableSchema_Expected].[name]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="256" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[tSQLt].[Private_AssertEqualsTableSchema_Expected].[RANK(column_id)]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[tSQLt].[Private_AssertEqualsTableSchema_Expected].[system_type_id]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[tSQLt].[Private_AssertEqualsTableSchema_Expected].[user_type_id]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[tSQLt].[Private_AssertEqualsTableSchema_Expected].[max_length]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[smallint]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[tSQLt].[Private_AssertEqualsTableSchema_Expected].[precision]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[tinyint]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[tSQLt].[Private_AssertEqualsTableSchema_Expected].[scale]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[tinyint]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[tSQLt].[Private_AssertEqualsTableSchema_Expected].[collation_name]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="256" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[tSQLt].[Private_AssertEqualsTableSchema_Expected].[is_nullable]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[tSQLt].[Private_AssertEqualsTableSchema_Expected].[is_identity]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlInlineTableValuedFunction" Name="[tSQLt].[Private_Bin2Hex]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[xml]" />
				</Entry>
			</Relationship>
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_Bin2Hex].[bare]" />
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_Bin2Hex].[prefix]" />
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[
  SELECT X.S AS bare, '0x'+X.S AS prefix
    FROM (SELECT LOWER(CAST('' AS XML).value('xs:hexBinary(sql:variable("@vb") )','VARCHAR(MAX)')))X(S)]]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="Length" Value="236" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="CREATE FUNCTION [tSQLt].[Private_Bin2Hex](@vb VARBINARY(MAX))&#xD;&#xA;RETURNS TABLE&#xD;&#xA;AS&#xD;&#xA;RETURN" />
							<Property Name="FooterContents" Value=";" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_Bin2Hex].[@vb]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varbinary]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Private_CleanTestResult]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
   DELETE FROM tSQLt.TestResult;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[TestResult]" />
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="101" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [tSQLt].[Private_CleanTestResult]&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Private_CompareTables]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
    DECLARE @cmd NVARCHAR(MAX);
    DECLARE @RestoredRowIndexCounterColName NVARCHAR(MAX);
    SET @RestoredRowIndexCounterColName = @MatchIndicatorColumnName + '_RR';
    
    SELECT @cmd = 
    '
    INSERT INTO ' + @ResultTable + ' (' + @MatchIndicatorColumnName + ', ' + @ColumnList + ') 
    SELECT 
      CASE 
        WHEN RestoredRowIndex.'+@RestoredRowIndexCounterColName+' <= CASE WHEN [_{Left}_]<[_{Right}_] THEN [_{Left}_] ELSE [_{Right}_] END
         THEN ''='' 
        WHEN RestoredRowIndex.'+@RestoredRowIndexCounterColName+' <= [_{Left}_] 
         THEN ''<'' 
        ELSE ''>'' 
      END AS ' + @MatchIndicatorColumnName + ', ' + @ColumnList + '
    FROM(
      SELECT SUM([_{Left}_]) AS [_{Left}_], 
             SUM([_{Right}_]) AS [_{Right}_], 
             ' + @ColumnList + ' 
      FROM (
        SELECT 1 AS [_{Left}_], 0[_{Right}_], ' + @ColumnList + '
          FROM ' + @Expected + '
        UNION ALL 
        SELECT 0[_{Left}_], 1 AS [_{Right}_], ' + @ColumnList + ' 
          FROM ' + @Actual + '
      ) AS X 
      GROUP BY ' + @ColumnList + ' 
    ) AS CollapsedRows
    CROSS APPLY (
       SELECT TOP(CASE WHEN [_{Left}_]>[_{Right}_] THEN [_{Left}_] 
                       ELSE [_{Right}_] END) 
              ROW_NUMBER() OVER(ORDER BY(SELECT 1)) 
         FROM (SELECT 1 
                 FROM ' + @Actual + ' UNION ALL SELECT 1 FROM ' + @Expected + ') X(X)
              ) AS RestoredRowIndex(' + @RestoredRowIndexCounterColName + ');';
    
    EXEC (@cmd); --MainGroupQuery
    
    SET @cmd = 'SET @r = 
         CASE WHEN EXISTS(
                  SELECT 1 
                    FROM ' + @ResultTable + 
                 ' WHERE ' + @MatchIndicatorColumnName + ' IN (''<'', ''>'')) 
              THEN 1 ELSE 0 
         END';
    DECLARE @UnequalRowsExist INT;
    EXEC sp_executesql @cmd, N'@r INT OUTPUT',@UnequalRowsExist OUTPUT;
    
    RETURN @UnequalRowsExist;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CompareTables].[@MatchIndicatorColumnName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CompareTables].[@ResultTable]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CompareTables].[@ColumnList]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CompareTables].[@Expected]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CompareTables].[@Actual]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[sp_executesql]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_CompareTables].[@Expected]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_CompareTables].[@Actual]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_CompareTables].[@ResultTable]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_CompareTables].[@ColumnList]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_CompareTables].[@MatchIndicatorColumnName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="2198" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [tSQLt].[Private_CompareTables]&#xD;&#xA;    @Expected NVARCHAR(MAX),&#xD;&#xA;    @Actual NVARCHAR(MAX),&#xD;&#xA;    @ResultTable NVARCHAR(MAX),&#xD;&#xA;    @ColumnList NVARCHAR(MAX),&#xD;&#xA;    @MatchIndicatorColumnName NVARCHAR(MAX)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Private_CompareTablesFailIfUnequalRowsExists]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  IF @UnequalRowsExist > 0
  BEGIN
   DECLARE @TableToTextResult NVARCHAR(MAX);
   DECLARE @OutputColumnList NVARCHAR(MAX);
   SELECT @OutputColumnList = '[_m_],' + @ColumnList;
   EXEC tSQLt.TableToText @TableName = @ResultTable, @OrderBy = @ResultColumn, @PrintOnlyColumnNameAliasList = @OutputColumnList, @txt = @TableToTextResult OUTPUT;
   
   DECLARE @Message NVARCHAR(MAX);
   SELECT @Message = @FailMsg + CHAR(13) + CHAR(10);

    EXEC tSQLt.Fail @Message, @TableToTextResult;
  END;
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CompareTablesFailIfUnequalRowsExists].[@UnequalRowsExist]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CompareTablesFailIfUnequalRowsExists].[@ColumnList]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TableToText]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TableToText].[@TableName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CompareTablesFailIfUnequalRowsExists].[@ResultTable]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TableToText].[@OrderBy]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CompareTablesFailIfUnequalRowsExists].[@ResultColumn]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TableToText].[@PrintOnlyColumnNameAliasList]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TableToText].[@txt]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CompareTablesFailIfUnequalRowsExists].[@FailMsg]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Fail]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_CompareTablesFailIfUnequalRowsExists].[@UnequalRowsExist]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_CompareTablesFailIfUnequalRowsExists].[@ResultTable]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_CompareTablesFailIfUnequalRowsExists].[@ResultColumn]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_CompareTablesFailIfUnequalRowsExists].[@ColumnList]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_CompareTablesFailIfUnequalRowsExists].[@FailMsg]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="731" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [tSQLt].[Private_CompareTablesFailIfUnequalRowsExists]&#xD;&#xA; @UnequalRowsExist INT,&#xD;&#xA; @ResultTable NVARCHAR(MAX),&#xD;&#xA; @ResultColumn NVARCHAR(MAX),&#xD;&#xA; @ColumnList NVARCHAR(MAX),&#xD;&#xA; @FailMsg NVARCHAR(MAX)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlTable" Name="[tSQLt].[Private_Configurations]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[tSQLt].[Private_Configurations].[Name]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="100" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[tSQLt].[Private_Configurations].[Value]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sql_variant]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="7" />
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Private_CreateFakeFunction]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  DECLARE @ReturnType NVARCHAR(MAX);
  SELECT @ReturnType = T.TypeName
    FROM sys.parameters AS P
   CROSS APPLY tSQLt.Private_GetFullTypeName(P.user_type_id,P.max_length,P.precision,P.scale,NULL) AS T
   WHERE P.object_id = @FunctionObjectId
     AND P.parameter_id = 0;
     
  DECLARE @ParameterList NVARCHAR(MAX);
  SELECT @ParameterList = COALESCE(
     STUFF((SELECT ','+P.name+' '+T.TypeName+CASE WHEN T.IsTableType = 1 THEN ' READONLY' ELSE '' END
              FROM sys.parameters AS P
             CROSS APPLY tSQLt.Private_GetFullTypeName(P.user_type_id,P.max_length,P.precision,P.scale,NULL) AS T
             WHERE P.object_id = @FunctionObjectId
               AND P.parameter_id > 0
             ORDER BY P.parameter_id
               FOR XML PATH(''),TYPE
           ).value('.','NVARCHAR(MAX)'),1,1,''),'');
           
  DECLARE @ParameterCallList NVARCHAR(MAX);
  SELECT @ParameterCallList = COALESCE(
     STUFF((SELECT ','+P.name
              FROM sys.parameters AS P
             CROSS APPLY tSQLt.Private_GetFullTypeName(P.user_type_id,P.max_length,P.precision,P.scale,NULL) AS T
             WHERE P.object_id = @FunctionObjectId
               AND P.parameter_id > 0
             ORDER BY P.parameter_id
               FOR XML PATH(''),TYPE
           ).value('.','NVARCHAR(MAX)'),1,1,''),'');


  IF(@IsScalarFunction = 1)
  BEGIN
    EXEC('CREATE FUNCTION '+@FunctionName+'('+@ParameterList+') RETURNS '+@ReturnType+' AS BEGIN RETURN '+@FakeFunctionName+'('+@ParameterCallList+');END;'); 
  END
  ELSE
  BEGIN
    EXEC('CREATE FUNCTION '+@FunctionName+'('+@ParameterList+') RETURNS TABLE AS RETURN SELECT * FROM '+@FakeFunctionName+'('+@ParameterCallList+');'); 
  END;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[parameters]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[parameters].[user_type_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[parameters].[max_length]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[parameters].[precision]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[parameters].[scale]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetFullTypeName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetFullTypeName].[TypeName]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[parameters].[object_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CreateFakeFunction].[@FunctionObjectId]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[parameters].[parameter_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[parameters].[user_type_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[parameters].[max_length]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[parameters].[precision]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[parameters].[scale]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[parameters].[name]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetFullTypeName].[TypeName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetFullTypeName].[IsTableType]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[parameters].[object_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[parameters].[parameter_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CreateFakeFunction].[@IsScalarFunction]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CreateFakeFunction].[@FunctionName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CreateFakeFunction].[@FakeFunctionName]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_CreateFakeFunction].[@FunctionName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_CreateFakeFunction].[@FakeFunctionName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_CreateFakeFunction].[@FunctionObjectId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_CreateFakeFunction].[@FakeFunctionObjectId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_CreateFakeFunction].[@IsScalarFunction]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="1957" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [tSQLt].[Private_CreateFakeFunction]&#xD;&#xA;  @FunctionName NVARCHAR(MAX),&#xD;&#xA;  @FakeFunctionName NVARCHAR(MAX),&#xD;&#xA;  @FunctionObjectId INT,&#xD;&#xA;  @FakeFunctionObjectId INT,&#xD;&#xA;  @IsScalarFunction BIT&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Private_CreateFakeOfTable]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
   DECLARE @Cmd NVARCHAR(MAX);
   DECLARE @Cols NVARCHAR(MAX);
   
   SELECT @Cols = 
   (
    SELECT
       ',' +
       QUOTENAME(name) + 
       cc.ColumnDefinition +
       dc.DefaultDefinition + 
       id.IdentityDefinition +
       CASE WHEN cc.IsComputedColumn = 1 OR id.IsIdentityColumn = 1 
            THEN ''
            ELSE ' NULL'
       END
      FROM sys.columns c
     CROSS APPLY tSQLt.Private_GetDataTypeOrComputedColumnDefinition(c.user_type_id, c.max_length, c.precision, c.scale, c.collation_name, c.object_id, c.column_id, @ComputedColumns) cc
     CROSS APPLY tSQLt.Private_GetDefaultConstraintDefinition(c.object_id, c.column_id, @Defaults) AS dc
     CROSS APPLY tSQLt.Private_GetIdentityDefinition(c.object_id, c.column_id, @Identity) AS id
     WHERE object_id = OBJECT_ID(@OrigTableFullName)
     ORDER BY column_id
     FOR XML PATH(''), TYPE
    ).value('.', 'NVARCHAR(MAX)');
    
   SELECT @Cmd = 'CREATE TABLE ' + @SchemaName + '.' + @TableName + '(' + STUFF(@Cols,1,1,'') + ')';
   
   EXEC (@Cmd);
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns].[user_type_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns].[max_length]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns].[precision]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns].[scale]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns].[collation_name]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns].[object_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns].[column_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CreateFakeOfTable].[@ComputedColumns]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetDataTypeOrComputedColumnDefinition]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns].[object_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns].[column_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CreateFakeOfTable].[@Defaults]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetDefaultConstraintDefinition]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns].[object_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns].[column_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CreateFakeOfTable].[@Identity]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetIdentityDefinition]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns].[name]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetDataTypeOrComputedColumnDefinition].[ColumnDefinition]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetDefaultConstraintDefinition].[DefaultDefinition]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetIdentityDefinition].[IdentityDefinition]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetDataTypeOrComputedColumnDefinition].[IsComputedColumn]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetIdentityDefinition].[IsIdentityColumn]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns].[object_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CreateFakeOfTable].[@OrigTableFullName]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns].[column_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CreateFakeOfTable].[@SchemaName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CreateFakeOfTable].[@TableName]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_CreateFakeOfTable].[@SchemaName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_CreateFakeOfTable].[@TableName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_CreateFakeOfTable].[@OrigTableFullName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_CreateFakeOfTable].[@Identity]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_CreateFakeOfTable].[@ComputedColumns]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_CreateFakeOfTable].[@Defaults]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="1289" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[Private_CreateFakeOfTable]&#xD;&#xA;  @SchemaName NVARCHAR(MAX),&#xD;&#xA;  @TableName NVARCHAR(MAX),&#xD;&#xA;  @OrigTableFullName NVARCHAR(MAX),&#xD;&#xA;  @Identity BIT,&#xD;&#xA;  @ComputedColumns BIT,&#xD;&#xA;  @Defaults BIT&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Private_CreateProcedureSpy]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
    DECLARE @Cmd NVARCHAR(MAX);
    DECLARE @ProcParmList NVARCHAR(MAX),
            @TableColList NVARCHAR(MAX),
            @ProcParmTypeList NVARCHAR(MAX),
            @TableColTypeList NVARCHAR(MAX);
            
    DECLARE @Seperator CHAR(1),
            @ProcParmTypeListSeparater CHAR(1),
            @ParamName sysname,
            @TypeName sysname,
            @IsOutput BIT,
            @IsCursorRef BIT,
            @IsTableType BIT;
            

      
    SELECT @Seperator = '', @ProcParmTypeListSeparater = '', 
           @ProcParmList = '', @TableColList = '', @ProcParmTypeList = '', @TableColTypeList = '';
      
    DECLARE Parameters CURSOR FOR
     SELECT p.name, t.TypeName, p.is_output, p.is_cursor_ref, t.IsTableType
       FROM sys.parameters p
       CROSS APPLY tSQLt.Private_GetFullTypeName(p.user_type_id,p.max_length,p.precision,p.scale,NULL) t
      WHERE object_id = @ProcedureObjectId;
    
    OPEN Parameters;
    
    FETCH NEXT FROM Parameters INTO @ParamName, @TypeName, @IsOutput, @IsCursorRef, @IsTableType;
    WHILE (@@FETCH_STATUS = 0)
    BEGIN
        IF @IsCursorRef = 0
        BEGIN
            SELECT @ProcParmList = @ProcParmList + @Seperator + 
                                   CASE WHEN @IsTableType = 1 
                                     THEN '(SELECT * FROM '+@ParamName+' FOR XML PATH(''row''),TYPE,ROOT('''+STUFF(@ParamName,1,1,'')+'''))' 
                                     ELSE @ParamName 
                                   END, 
                   @TableColList = @TableColList + @Seperator + '[' + STUFF(@ParamName,1,1,'') + ']', 
                   @ProcParmTypeList = @ProcParmTypeList + @ProcParmTypeListSeparater + @ParamName + ' ' + @TypeName + 
                                       CASE WHEN @IsTableType = 1 THEN ' READONLY' ELSE ' = NULL ' END+ 
                                       CASE WHEN @IsOutput = 1 THEN ' OUT' ELSE '' END, 
                   @TableColTypeList = @TableColTypeList + ',[' + STUFF(@ParamName,1,1,'') + '] ' + 
                          CASE 
                               WHEN @IsTableType = 1
                               THEN 'XML'
                               WHEN @TypeName LIKE '%nchar%'
                                 OR @TypeName LIKE '%nvarchar%'
                               THEN 'NVARCHAR(MAX)'
                               WHEN @TypeName LIKE '%char%'
                               THEN 'VARCHAR(MAX)'
                               ELSE @TypeName
                          END + ' NULL';

            SELECT @Seperator = ',';        
            SELECT @ProcParmTypeListSeparater = ',';
        END
        ELSE
        BEGIN
            SELECT @ProcParmTypeList = @ProcParmTypeListSeparater + @ParamName + ' CURSOR VARYING OUTPUT';
            SELECT @ProcParmTypeListSeparater = ',';
        END;
        
        FETCH NEXT FROM Parameters INTO @ParamName, @TypeName, @IsOutput, @IsCursorRef, @IsTableType;
    END;
    
    CLOSE Parameters;
    DEALLOCATE Parameters;
    
    DECLARE @InsertStmt NVARCHAR(MAX);
    SELECT @InsertStmt = 'INSERT INTO ' + @LogTableName + 
                         CASE WHEN @TableColList = '' THEN ' DEFAULT VALUES'
                              ELSE ' (' + @TableColList + ') SELECT ' + @ProcParmList
                         END + ';';
                         
    SELECT @Cmd = 'CREATE TABLE ' + @LogTableName + ' (_id_ int IDENTITY(1,1) PRIMARY KEY CLUSTERED ' + @TableColTypeList + ');';
    EXEC(@Cmd);

    SELECT @Cmd = 'CREATE PROCEDURE ' + @OriginalProcedureName + ' ' + @ProcParmTypeList + 
                  ' AS BEGIN ' + 
                     @InsertStmt + 
                     ISNULL(@CommandToExecute, '') + ';' +
                  ' END;';
    EXEC(@Cmd);

    RETURN 0;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[char]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[char]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[parameters]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[parameters].[user_type_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[parameters].[max_length]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[parameters].[precision]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[parameters].[scale]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetFullTypeName]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[parameters].[name]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetFullTypeName].[TypeName]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[parameters].[is_output]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[parameters].[is_cursor_ref]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetFullTypeName].[IsTableType]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[parameters].[object_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CreateProcedureSpy].[@ProcedureObjectId]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CreateProcedureSpy].[@LogTableName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CreateProcedureSpy].[@OriginalProcedureName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CreateProcedureSpy].[@CommandToExecute]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_CreateProcedureSpy].[@ProcedureObjectId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_CreateProcedureSpy].[@OriginalProcedureName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_CreateProcedureSpy].[@LogTableName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_CreateProcedureSpy].[@CommandToExecute]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="4067" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[Private_CreateProcedureSpy]&#xD;&#xA;    @ProcedureObjectId INT,&#xD;&#xA;    @OriginalProcedureName NVARCHAR(MAX),&#xD;&#xA;    @LogTableName NVARCHAR(MAX),&#xD;&#xA;    @CommandToExecute NVARCHAR(MAX) = NULL&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Private_CreateResultTableForCompareTables]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  DECLARE @Cmd NVARCHAR(MAX);
  SET @Cmd = '
     SELECT ''='' AS ' + @ResultColumn + ', Expected.* INTO ' + @ResultTable + ' 
       FROM tSQLt.Private_NullCellTable N 
       LEFT JOIN ' + @BaseTable + ' AS Expected ON N.I <> N.I 
     TRUNCATE TABLE ' + @ResultTable + ';' --Need to insert an actual row to prevent IDENTITY property from transfering (IDENTITY_COL can't be NULLable);
  EXEC(@Cmd);
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CreateResultTableForCompareTables].[@ResultColumn]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CreateResultTableForCompareTables].[@ResultTable]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CreateResultTableForCompareTables].[@BaseTable]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_CreateResultTableForCompareTables].[@ResultTable]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_CreateResultTableForCompareTables].[@ResultColumn]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_CreateResultTableForCompareTables].[@BaseTable]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="580" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [tSQLt].[Private_CreateResultTableForCompareTables]&#xD;&#xA; @ResultTable NVARCHAR(MAX),&#xD;&#xA; @ResultColumn NVARCHAR(MAX),&#xD;&#xA; @BaseTable NVARCHAR(MAX)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Private_DisallowOverwritingNonTestSchema]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  IF SCHEMA_ID(@ClassName) IS NOT NULL AND tSQLt.Private_IsTestClass(@ClassName) = 0
  BEGIN
    RAISERROR('Attempted to execute tSQLt.NewTestClass on ''%s'' which is an existing schema but not a test class', 16, 10, @ClassName);
  END
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[Private_DisallowOverwritingNonTestSchema].[@ClassName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_IsTestClass]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_DisallowOverwritingNonTestSchema].[@ClassName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="354" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[Private_DisallowOverwritingNonTestSchema]&#xD;&#xA;  @ClassName NVARCHAR(MAX)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlTable" Name="[tSQLt].[Private_ExpectException]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[tSQLt].[Private_ExpectException].[i]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlInlineTableValuedFunction" Name="[tSQLt].[Private_FindConstraint]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_FindConstraint].[@TableObjectId]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetOriginalTableInfo]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects].[object_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects].[type_desc]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_FindConstraint].[@ConstraintName]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects].[name]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects].[parent_object_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetOriginalTableInfo].[OrgTableObjectId]" />
				</Entry>
			</Relationship>
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_FindConstraint].[ConstraintObjectId]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects].[object_id]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_FindConstraint].[ConstraintType]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects].[type_desc]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[
  SELECT TOP(1) constraints.object_id AS ConstraintObjectId, type_desc AS ConstraintType
    FROM sys.objects constraints
    CROSS JOIN tSQLt.Private_GetOriginalTableInfo(@TableObjectId) orgTbl
   WHERE @ConstraintName IN (constraints.name, QUOTENAME(constraints.name))
     AND constraints.parent_object_id = orgTbl.OrgTableObjectId
   ORDER BY LEN(constraints.name) ASC]]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="CreateOffset" Value="4" />
							<Property Name="Length" Value="521" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="&#xD;&#xA;&#xD;&#xA;CREATE FUNCTION [tSQLt].[Private_FindConstraint]&#xD;&#xA;(&#xD;&#xA;  @TableObjectId INT,&#xD;&#xA;  @ConstraintName NVARCHAR(MAX)&#xD;&#xA;)&#xD;&#xA;RETURNS TABLE&#xD;&#xA;AS&#xD;&#xA;RETURN" />
							<Property Name="FooterContents" Value=";" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_FindConstraint].[@TableObjectId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_FindConstraint].[@ConstraintName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlScalarFunction" Name="[tSQLt].[Private_GetCleanObjectName]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[Private_GetCleanObjectName].[@ObjectName]" />
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[
BEGIN
    RETURN (SELECT OBJECT_NAME(OBJECT_ID(@ObjectName)));
END;]]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="CreateOffset" Value="2" />
							<Property Name="Length" Value="179" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE FUNCTION [tSQLt].[Private_GetCleanObjectName](@ObjectName NVARCHAR(MAX))&#xD;&#xA;RETURNS NVARCHAR(MAX)&#xD;&#xA;AS" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetCleanObjectName].[@ObjectName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Relationship Name="Type">
				<Entry>
					<Element Type="SqlTypeSpecifier">
						<Property Name="IsMax" Value="True" />
						<Relationship Name="Type">
							<Entry>
								<References ExternalSource="BuiltIns" Name="[nvarchar]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlScalarFunction" Name="[tSQLt].[Private_GetCleanSchemaName]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects].[schema_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects].[object_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetCleanSchemaName].[@SchemaName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetCleanSchemaName].[@ObjectName]" />
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[
BEGIN
    RETURN (SELECT SCHEMA_NAME(schema_id) 
              FROM sys.objects 
             WHERE object_id = CASE WHEN ISNULL(@SchemaName,'') in ('','[]')
                                    THEN OBJECT_ID(@ObjectName)
                                    ELSE OBJECT_ID(@SchemaName + '.' + @ObjectName)
                                END);
END;]]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="CreateOffset" Value="287" />
							<Property Name="Length" Value="777" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="&#xD;&#xA;/*******************************************************************************************/&#xD;&#xA;/*******************************************************************************************/&#xD;&#xA;/*******************************************************************************************/&#xD;&#xA;CREATE FUNCTION [tSQLt].[Private_GetCleanSchemaName](@SchemaName NVARCHAR(MAX), @ObjectName NVARCHAR(MAX))&#xD;&#xA;RETURNS NVARCHAR(MAX)&#xD;&#xA;AS" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetCleanSchemaName].[@SchemaName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetCleanSchemaName].[@ObjectName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Relationship Name="Type">
				<Entry>
					<Element Type="SqlTypeSpecifier">
						<Property Name="IsMax" Value="True" />
						<Relationship Name="Type">
							<Entry>
								<References ExternalSource="BuiltIns" Name="[nvarchar]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlScalarFunction" Name="[tSQLt].[Private_GetCommaSeparatedColumnList]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[ 
BEGIN
  RETURN STUFF((
     SELECT ',' + CASE WHEN system_type_id = TYPE_ID('timestamp') THEN ';TIMESTAMP columns are unsupported!;' ELSE QUOTENAME(name) END 
       FROM sys.columns 
      WHERE object_id = OBJECT_ID(@Table) 
        AND name <> @ExcludeColumn 
      ORDER BY column_id
     FOR XML PATH(''), TYPE).value('.','NVARCHAR(MAX)')
    ,1, 1, '');
        
END;]]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="Length" Value="527" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="CREATE FUNCTION [tSQLt].[Private_GetCommaSeparatedColumnList] (@Table NVARCHAR(MAX), @ExcludeColumn NVARCHAR(MAX))&#xD;&#xA;RETURNS NVARCHAR(MAX)&#xD;&#xA;AS" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetCommaSeparatedColumnList].[@Table]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetCommaSeparatedColumnList].[@ExcludeColumn]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Relationship Name="Type">
				<Entry>
					<Element Type="SqlTypeSpecifier">
						<Property Name="IsMax" Value="True" />
						<Relationship Name="Type">
							<Entry>
								<References ExternalSource="BuiltIns" Name="[nvarchar]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlInlineTableValuedFunction" Name="[tSQLt].[Private_GetConfiguration]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[Private_Configurations]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_Configurations].[Name]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_Configurations].[Value]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetConfiguration].[@Name]" />
				</Entry>
			</Relationship>
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_GetConfiguration].[Name]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References Name="[tSQLt].[Private_Configurations].[Name]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_GetConfiguration].[Value]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References Name="[tSQLt].[Private_Configurations].[Value]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[
  SELECT PC.Name,
         PC.Value 
    FROM tSQLt.Private_Configurations AS PC
   WHERE PC.Name = @Name]]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="Length" Value="215" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="CREATE FUNCTION [tSQLt].[Private_GetConfiguration](&#xD;&#xA;  @Name NVARCHAR(100)&#xD;&#xA;)&#xD;&#xA;RETURNS TABLE&#xD;&#xA;AS&#xD;&#xA;RETURN" />
							<Property Name="FooterContents" Value=";" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetConfiguration].[@Name]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="100" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlInlineTableValuedFunction" Name="[tSQLt].[Private_GetConstraintType]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects].[object_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects].[type]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects].[type_desc]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects].[schema_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetConstraintType].[@ConstraintName]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects].[parent_object_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetConstraintType].[@TableObjectId]" />
				</Entry>
			</Relationship>
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_GetConstraintType].[object_id]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects].[object_id]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_GetConstraintType].[type]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects].[type]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_GetConstraintType].[type_desc]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects].[type_desc]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[
  SELECT object_id,type,type_desc
    FROM sys.objects 
   WHERE object_id = OBJECT_ID(SCHEMA_NAME(schema_id)+'.'+@ConstraintName)
     AND parent_object_id = @TableObjectId]]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="CreateOffset" Value="2" />
							<Property Name="Length" Value="310" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE FUNCTION [tSQLt].[Private_GetConstraintType](@TableObjectId INT, @ConstraintName NVARCHAR(MAX))&#xD;&#xA;RETURNS TABLE&#xD;&#xA;AS&#xD;&#xA;RETURN" />
							<Property Name="FooterContents" Value=";" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetConstraintType].[@TableObjectId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetConstraintType].[@ConstraintName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Private_GetCursorForRunAll]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  SET @TestClassCursor = CURSOR LOCAL FAST_FORWARD FOR
   SELECT Name
     FROM tSQLt.TestClasses;

  OPEN @TestClassCursor;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[Private_GetCursorForRunAll].[@TestClassCursor]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestClasses]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestClasses].[Name]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetCursorForRunAll].[@TestClassCursor]">
						<Property Name="IsOutput" Value="True" />
						<Property Name="IsVarying" Value="True" />
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[cursor]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="244" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[Private_GetCursorForRunAll]&#xD;&#xA;  @TestClassCursor CURSOR VARYING OUTPUT&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Private_GetCursorForRunNew]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  SET @TestClassCursor = CURSOR LOCAL FAST_FORWARD FOR
   SELECT TC.Name
     FROM tSQLt.TestClasses AS TC
     JOIN tSQLt.Private_NewTestClassList AS PNTCL
       ON PNTCL.ClassName = TC.Name;

  OPEN @TestClassCursor;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[Private_GetCursorForRunNew].[@TestClassCursor]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestClasses]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_NewTestClassList]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_NewTestClassList].[ClassName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestClasses].[Name]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetCursorForRunNew].[@TestClassCursor]">
						<Property Name="IsOutput" Value="True" />
						<Property Name="IsVarying" Value="True" />
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[cursor]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="341" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[Private_GetCursorForRunNew]&#xD;&#xA;  @TestClassCursor CURSOR VARYING OUTPUT&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlInlineTableValuedFunction" Name="[tSQLt].[Private_GetDataTypeOrComputedColumnDefinition]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[Private_GetDataTypeOrComputedColumnDefinition].[@UserTypeId]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetDataTypeOrComputedColumnDefinition].[@MaxLength]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetDataTypeOrComputedColumnDefinition].[@Precision]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetDataTypeOrComputedColumnDefinition].[@Scale]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetDataTypeOrComputedColumnDefinition].[@CollationName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetDataTypeOrComputedColumnDefinition].[@ObjectId]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetDataTypeOrComputedColumnDefinition].[@ColumnId]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetDataTypeOrComputedColumnDefinition].[@ReturnDetails]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetFullTypeName]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[computed_columns]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[computed_columns].[definition]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[computed_columns].[is_persisted]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[computed_columns].[object_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[computed_columns].[column_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[computed_columns].[object_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[computed_columns].[column_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetFullTypeName].[TypeName]" />
				</Entry>
			</Relationship>
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_GetDataTypeOrComputedColumnDefinition].[IsComputedColumn]" />
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_GetDataTypeOrComputedColumnDefinition].[ColumnDefinition]" />
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[ SELECT 
              COALESCE(cc.IsComputedColumn, 0) AS IsComputedColumn,
              COALESCE(cc.ComputedColumnDefinition, GFTN.TypeName) AS ColumnDefinition
        FROM (SELECT @UserTypeId, @MaxLength, @Precision, @Scale, @CollationName, @ObjectId, @ColumnId, @ReturnDetails) 
             AS V(UserTypeId, MaxLength, Precision, Scale, CollationName, ObjectId, ColumnId, ReturnDetails)
       CROSS APPLY tSQLt.Private_GetFullTypeName(V.UserTypeId, V.MaxLength, V.Precision, V.Scale, V.CollationName) AS GFTN
        LEFT JOIN (SELECT 1 AS IsComputedColumn,
                          ' AS '+ cci.definition + CASE WHEN cci.is_persisted = 1 THEN ' PERSISTED' ELSE '' END AS ComputedColumnDefinition,
                          cci.object_id,
                          cci.column_id
                     FROM sys.computed_columns cci
                  )cc
               ON cc.object_id = V.ObjectId
              AND cc.column_id = V.ColumnId
              AND V.ReturnDetails = 1]]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="Length" Value="1240" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="CREATE FUNCTION [tSQLt].[Private_GetDataTypeOrComputedColumnDefinition](@UserTypeId INT, @MaxLength INT, @Precision INT, @Scale INT, @CollationName NVARCHAR(MAX), @ObjectId INT, @ColumnId INT, @ReturnDetails BIT)&#xD;&#xA;RETURNS TABLE&#xD;&#xA;AS&#xD;&#xA;RETURN" />
							<Property Name="FooterContents" Value=";" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetDataTypeOrComputedColumnDefinition].[@UserTypeId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetDataTypeOrComputedColumnDefinition].[@MaxLength]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetDataTypeOrComputedColumnDefinition].[@Precision]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetDataTypeOrComputedColumnDefinition].[@Scale]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetDataTypeOrComputedColumnDefinition].[@CollationName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetDataTypeOrComputedColumnDefinition].[@ObjectId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetDataTypeOrComputedColumnDefinition].[@ColumnId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetDataTypeOrComputedColumnDefinition].[@ReturnDetails]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlInlineTableValuedFunction" Name="[tSQLt].[Private_GetDefaultConstraintDefinition]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[default_constraints]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[default_constraints].[definition]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[default_constraints].[parent_object_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[default_constraints].[parent_column_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[default_constraints].[parent_object_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetDefaultConstraintDefinition].[@ObjectId]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[default_constraints].[parent_column_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetDefaultConstraintDefinition].[@ColumnId]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetDefaultConstraintDefinition].[@ReturnDetails]" />
				</Entry>
			</Relationship>
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_GetDefaultConstraintDefinition].[IsDefault]" />
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_GetDefaultConstraintDefinition].[DefaultDefinition]" />
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[ SELECT 
              COALESCE(IsDefault, 0) AS IsDefault,
              COALESCE(DefaultDefinition, '') AS DefaultDefinition
        FROM (SELECT 1) X(X)
        LEFT JOIN (SELECT 1 AS IsDefault,' DEFAULT '+ definition AS DefaultDefinition,parent_object_id,parent_column_id
                     FROM sys.default_constraints
                  )dc
               ON dc.parent_object_id = @ObjectId
              AND dc.parent_column_id = @ColumnId
              AND @ReturnDetails = 1]]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="Length" Value="635" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="CREATE FUNCTION [tSQLt].[Private_GetDefaultConstraintDefinition](@ObjectId INT, @ColumnId INT, @ReturnDetails BIT)&#xD;&#xA;RETURNS TABLE&#xD;&#xA;AS&#xD;&#xA;RETURN" />
							<Property Name="FooterContents" Value=";" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetDefaultConstraintDefinition].[@ObjectId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetDefaultConstraintDefinition].[@ColumnId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetDefaultConstraintDefinition].[@ReturnDetails]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlInlineTableValuedFunction" Name="[tSQLt].[Private_GetExternalAccessKeyBytes]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_GetExternalAccessKeyBytes].[ExternalAccessKeyBytes]" />
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_GetExternalAccessKeyBytes].[ExternalAccessKeyThumbPrint]" />
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[
  SELECT 0xxternalAccessKeyBytes, 0x7722217D36028E4C AS ExternalAccessKeyThumbPrint]]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="Length" Value="6323" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="CREATE FUNCTION [tSQLt].[Private_GetExternalAccessKeyBytes]()&#xD;&#xA;RETURNS TABLE&#xD;&#xA;AS&#xD;&#xA;RETURN" />
							<Property Name="FooterContents" Value=";" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlInlineTableValuedFunction" Name="[tSQLt].[Private_GetForeignKeyDefinition]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[foreign_keys]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[foreign_keys].[object_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetForeignKeyParColumns]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[foreign_keys].[object_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetForeignKeyRefColumns]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[extended_properties]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[extended_properties].[name]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[extended_properties].[value]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[foreign_keys].[referenced_object_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[tables]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[extended_properties].[major_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[foreign_keys].[referenced_object_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[tables].[object_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[foreign_keys].[schema_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[foreign_keys].[name]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[foreign_keys].[parent_object_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[tables].[schema_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[tables].[name]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetForeignKeyParColumns].[ColNames]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetForeignKeyRefColumns].[ColNames]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[foreign_keys].[update_referential_action]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[foreign_keys].[delete_referential_action]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[extended_properties].[name]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetForeignKeyDefinition].[@SchemaName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetForeignKeyDefinition].[@ParentTableName]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[foreign_keys].[object_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetForeignKeyDefinition].[@ForeignKeyName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetForeignKeyParColumns].[ColNames]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetForeignKeyRefColumns].[ColNames]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetForeignKeyDefinition].[@NoCascade]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private]" />
				</Entry>
			</Relationship>
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_GetForeignKeyDefinition].[cmd]" />
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_GetForeignKeyDefinition].[CreIdxCmd]" />
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[ SELECT 'CONSTRAINT ' + name + ' FOREIGN KEY (' +
              parCols + ') REFERENCES ' + refName + '(' + refCols + ')'+
              CASE WHEN @NoCascade = 1 THEN ''
                ELSE delete_referential_action_cmd + ' ' + update_referential_action_cmd 
              END AS cmd,
              CASE 
                WHEN RefTableIsFakedInd = 1
                  THEN 'CREATE UNIQUE INDEX ' + tSQLt.Private::CreateUniqueObjectName() + ' ON ' + refName + '(' + refCols + ');' 
                ELSE '' 
              END CreIdxCmd
         FROM (SELECT QUOTENAME(SCHEMA_NAME(k.schema_id)) AS SchemaName,
                      QUOTENAME(k.name) AS name,
                      QUOTENAME(OBJECT_NAME(k.parent_object_id)) AS parName,
                      QUOTENAME(SCHEMA_NAME(refTab.schema_id)) + '.' + QUOTENAME(refTab.name) AS refName,
                      parCol.ColNames AS parCols,
                      refCol.ColNames AS refCols,
                      'ON UPDATE '+
                      CASE k.update_referential_action
                        WHEN 0 THEN 'NO ACTION'
                        WHEN 1 THEN 'CASCADE'
                        WHEN 2 THEN 'SET NULL'
                        WHEN 3 THEN 'SET DEFAULT'
                      END AS update_referential_action_cmd,
                      'ON DELETE '+
                      CASE k.delete_referential_action
                        WHEN 0 THEN 'NO ACTION'
                        WHEN 1 THEN 'CASCADE'
                        WHEN 2 THEN 'SET NULL'
                        WHEN 3 THEN 'SET DEFAULT'
                      END AS delete_referential_action_cmd,
                      CASE WHEN e.name IS NULL THEN 0
                           ELSE 1 
                       END AS RefTableIsFakedInd
                 FROM sys.foreign_keys k
                 CROSS APPLY tSQLt.Private_GetForeignKeyParColumns(k.object_id) AS parCol
                 CROSS APPLY tSQLt.Private_GetForeignKeyRefColumns(k.object_id) AS refCol
                 LEFT JOIN sys.extended_properties e
                   ON e.name = 'tSQLt.FakeTable_OrgTableName'
                  AND e.value = OBJECT_NAME(k.referenced_object_id)
                 JOIN sys.tables refTab
                   ON COALESCE(e.major_id,k.referenced_object_id) = refTab.object_id
                WHERE k.parent_object_id = OBJECT_ID(@SchemaName + '.' + @ParentTableName)
                  AND k.object_id = OBJECT_ID(@SchemaName + '.' + @ForeignKeyName)
               )x]]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="CreateOffset" Value="2" />
							<Property Name="Length" Value="2740" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE FUNCTION [tSQLt].[Private_GetForeignKeyDefinition](&#xD;&#xA;    @SchemaName NVARCHAR(MAX),&#xD;&#xA;    @ParentTableName NVARCHAR(MAX),&#xD;&#xA;    @ForeignKeyName NVARCHAR(MAX),&#xD;&#xA;    @NoCascade BIT&#xD;&#xA;)&#xD;&#xA;RETURNS TABLE&#xD;&#xA;AS&#xD;&#xA;RETURN" />
							<Property Name="FooterContents" Value=";" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetForeignKeyDefinition].[@SchemaName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetForeignKeyDefinition].[@ParentTableName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetForeignKeyDefinition].[@ForeignKeyName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetForeignKeyDefinition].[@NoCascade]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlInlineTableValuedFunction" Name="[tSQLt].[Private_GetForeignKeyParColumns]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[foreign_key_columns]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns].[object_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[foreign_key_columns].[parent_object_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns].[column_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[foreign_key_columns].[parent_column_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns].[name]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetForeignKeyParColumns].[@ConstraintObjectId]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[foreign_key_columns].[constraint_object_id]" />
				</Entry>
			</Relationship>
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_GetForeignKeyParColumns].[ColNames]" />
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[ SELECT STUFF((
                 SELECT ','+QUOTENAME(pci.name) FROM sys.foreign_key_columns c
                   JOIN sys.columns pci
                   ON pci.object_id = c.parent_object_id
                  AND pci.column_id = c.parent_column_id
                   WHERE @ConstraintObjectId = c.constraint_object_id
                   FOR XML PATH(''),TYPE
                   ).value('.','NVARCHAR(MAX)'),1,1,'')  AS ColNames]]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="Length" Value="552" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="CREATE FUNCTION [tSQLt].[Private_GetForeignKeyParColumns](&#xD;&#xA;    @ConstraintObjectId INT&#xD;&#xA;)&#xD;&#xA;RETURNS TABLE&#xD;&#xA;AS&#xD;&#xA;RETURN" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetForeignKeyParColumns].[@ConstraintObjectId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlInlineTableValuedFunction" Name="[tSQLt].[Private_GetForeignKeyRefColumns]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[foreign_key_columns]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns].[object_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[foreign_key_columns].[referenced_object_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns].[column_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[foreign_key_columns].[referenced_column_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns].[name]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetForeignKeyRefColumns].[@ConstraintObjectId]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[foreign_key_columns].[constraint_object_id]" />
				</Entry>
			</Relationship>
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_GetForeignKeyRefColumns].[ColNames]" />
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[ SELECT STUFF((
                 SELECT ','+QUOTENAME(rci.name) FROM sys.foreign_key_columns c
                   JOIN sys.columns rci
                  ON rci.object_id = c.referenced_object_id
                  AND rci.column_id = c.referenced_column_id
                   WHERE @ConstraintObjectId = c.constraint_object_id
                   FOR XML PATH(''),TYPE
                   ).value('.','NVARCHAR(MAX)'),1,1,'')  AS ColNames]]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="CreateOffset" Value="2" />
							<Property Name="Length" Value="562" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE FUNCTION [tSQLt].[Private_GetForeignKeyRefColumns](&#xD;&#xA;    @ConstraintObjectId INT&#xD;&#xA;)&#xD;&#xA;RETURNS TABLE&#xD;&#xA;AS&#xD;&#xA;RETURN" />
							<Property Name="FooterContents" Value=";" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetForeignKeyRefColumns].[@ConstraintObjectId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlInlineTableValuedFunction" Name="[tSQLt].[Private_GetFullTypeName]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[Private_SysTypes]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_SysTypes].[schema_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_SysTypes].[name]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_SysTypes].[max_length]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetFullTypeName].[@Length]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetFullTypeName].[@Precision]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetFullTypeName].[@Scale]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetFullTypeName].[@CollationName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_SysTypes].[is_user_defined]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_SysTypes].[is_table_type]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_SysTypes].[user_type_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetFullTypeName].[@TypeId]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_SysTypes].[is_table_type]" />
				</Entry>
			</Relationship>
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_GetFullTypeName].[TypeName]" />
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_GetFullTypeName].[SchemaName]" />
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_GetFullTypeName].[Name]" />
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_GetFullTypeName].[Suffix]" />
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_GetFullTypeName].[IsTableType]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References Name="[tSQLt].[Private_SysTypes].[is_table_type]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[ SELECT X.SchemaName + '.' + X.Name + X.Suffix + X.Collation AS TypeName, X.SchemaName, X.Name, X.Suffix, X.is_table_type AS IsTableType
FROM(
  SELECT QUOTENAME(SCHEMA_NAME(T.schema_id)) SchemaName, QUOTENAME(T.name) Name,
              CASE WHEN T.max_length = -1
                    THEN ''
                   WHEN @Length = -1
                    THEN '(MAX)'
                   WHEN T.name LIKE 'n%char'
                    THEN '(' + CAST(@Length / 2 AS NVARCHAR) + ')'
                   WHEN T.name LIKE '%char' OR T.name LIKE '%binary'
                    THEN '(' + CAST(@Length AS NVARCHAR) + ')'
                   WHEN T.name IN ('decimal', 'numeric')
                    THEN '(' + CAST(@Precision AS NVARCHAR) + ',' + CAST(@Scale AS NVARCHAR) + ')'
                   ELSE ''
               END Suffix,
              CASE WHEN @CollationName IS NULL OR T.is_user_defined = 1 THEN ''
                   ELSE ' COLLATE ' + @CollationName
               END Collation,
               T.is_table_type
          FROM tSQLt.Private_SysTypes AS T WHERE T.user_type_id = @TypeId
          )X]]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="Length" Value="1279" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="CREATE FUNCTION [tSQLt].[Private_GetFullTypeName](@TypeId INT, @Length INT, @Precision INT, @Scale INT, @CollationName NVARCHAR(MAX))&#xD;&#xA;RETURNS TABLE&#xD;&#xA;AS&#xD;&#xA;RETURN" />
							<Property Name="FooterContents" Value=";" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetFullTypeName].[@TypeId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetFullTypeName].[@Length]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetFullTypeName].[@Precision]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetFullTypeName].[@Scale]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetFullTypeName].[@CollationName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlInlineTableValuedFunction" Name="[tSQLt].[Private_GetIdentityDefinition]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[identity_columns]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[identity_columns].[seed_value]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[identity_columns].[increment_value]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[identity_columns].[object_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[identity_columns].[column_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[identity_columns].[object_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetIdentityDefinition].[@ObjectId]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[identity_columns].[column_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetIdentityDefinition].[@ColumnId]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetIdentityDefinition].[@ReturnDetails]" />
				</Entry>
			</Relationship>
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_GetIdentityDefinition].[IsIdentityColumn]" />
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_GetIdentityDefinition].[IdentityDefinition]" />
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[ SELECT 
              COALESCE(IsIdentity, 0) AS IsIdentityColumn,
              COALESCE(IdentityDefinition, '') AS IdentityDefinition
        FROM (SELECT 1) X(X)
        LEFT JOIN (SELECT 1 AS IsIdentity,
                          ' IDENTITY(' + CAST(seed_value AS NVARCHAR(MAX)) + ',' + CAST(increment_value AS NVARCHAR(MAX)) + ')' AS IdentityDefinition, 
                          object_id, 
                          column_id
                     FROM sys.identity_columns
                  ) AS id
               ON id.object_id = @ObjectId
              AND id.column_id = @ColumnId
              AND @ReturnDetails = 1]]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="CreateOffset" Value="2" />
							<Property Name="Length" Value="777" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE FUNCTION [tSQLt].[Private_GetIdentityDefinition](@ObjectId INT, @ColumnId INT, @ReturnDetails BIT)&#xD;&#xA;RETURNS TABLE&#xD;&#xA;AS&#xD;&#xA;RETURN" />
							<Property Name="FooterContents" Value=";" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetIdentityDefinition].[@ObjectId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetIdentityDefinition].[@ColumnId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetIdentityDefinition].[@ReturnDetails]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlScalarFunction" Name="[tSQLt].[Private_GetLastTestNameIfNotProvided]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[Private_GetLastTestNameIfNotProvided].[@TestName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Run_LastExecution]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[dm_exec_sessions]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Run_LastExecution].[SessionId]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[dm_exec_sessions].[session_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Run_LastExecution].[LoginTime]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[dm_exec_sessions].[login_time]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Run_LastExecution].[TestName]" />
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[
BEGIN
  IF(LTRIM(ISNULL(@TestName,'')) = '')
  BEGIN
    SELECT @TestName = TestName 
      FROM tSQLt.Run_LastExecution le
      JOIN sys.dm_exec_sessions es
        ON le.SessionId = es.session_id
       AND le.LoginTime = es.login_time
     WHERE es.session_id = @@SPID;
  END

  RETURN @TestName;
END]]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="CreateOffset" Value="74" />
							<Property Name="Length" Value="506" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="&#xD;&#xA;----------------------------------------------------------------------&#xD;&#xA;CREATE FUNCTION [tSQLt].[Private_GetLastTestNameIfNotProvided](@TestName NVARCHAR(MAX))&#xD;&#xA;RETURNS NVARCHAR(MAX)&#xD;&#xA;AS" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetLastTestNameIfNotProvided].[@TestName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Relationship Name="Type">
				<Entry>
					<Element Type="SqlTypeSpecifier">
						<Property Name="IsMax" Value="True" />
						<Relationship Name="Type">
							<Entry>
								<References ExternalSource="BuiltIns" Name="[nvarchar]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlInlineTableValuedFunction" Name="[tSQLt].[Private_GetOriginalTableInfo]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[extended_properties]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[extended_properties].[value]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetOriginalTableInfo].[@TableObjectId]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[extended_properties].[class_desc]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[extended_properties].[major_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[extended_properties].[minor_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[extended_properties].[name]" />
				</Entry>
			</Relationship>
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_GetOriginalTableInfo].[OrgTableName]" />
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_GetOriginalTableInfo].[OrgTableObjectId]" />
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[ SELECT CAST(value AS NVARCHAR(4000)) OrgTableName,
                OBJECT_ID(QUOTENAME(OBJECT_SCHEMA_NAME(@TableObjectId)) + '.' + QUOTENAME(CAST(value AS NVARCHAR(4000)))) OrgTableObjectId
    FROM sys.extended_properties
   WHERE class_desc = 'OBJECT_OR_COLUMN'
     AND major_id = @TableObjectId
     AND minor_id = 0
     AND name = 'tSQLt.FakeTable_OrgTableName']]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="CreateOffset" Value="4" />
							<Property Name="Length" Value="482" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="&#xD;&#xA;&#xD;&#xA;CREATE FUNCTION [tSQLt].[Private_GetOriginalTableInfo](@TableObjectId INT)&#xD;&#xA;RETURNS TABLE&#xD;&#xA;AS&#xD;&#xA;  RETURN" />
							<Property Name="FooterContents" Value=";" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetOriginalTableInfo].[@TableObjectId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlScalarFunction" Name="[tSQLt].[Private_GetOriginalTableName]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[extended_properties]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[extended_properties].[value]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[extended_properties].[class_desc]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[extended_properties].[major_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetOriginalTableName].[@SchemaName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetOriginalTableName].[@TableName]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[extended_properties].[minor_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[extended_properties].[name]" />
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[
BEGIN
  RETURN (SELECT CAST(value AS NVARCHAR(4000))
    FROM sys.extended_properties
   WHERE class_desc = 'OBJECT_OR_COLUMN'
     AND major_id = OBJECT_ID(@SchemaName + '.' + @TableName)
     AND minor_id = 0
     AND name = 'tSQLt.FakeTable_OrgTableName');
END;]]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="CreateOffset" Value="289" />
							<Property Name="Length" Value="708" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="&#xD;&#xA;&#xD;&#xA;/*******************************************************************************************/&#xD;&#xA;/*******************************************************************************************/&#xD;&#xA;/*******************************************************************************************/&#xD;&#xA;CREATE FUNCTION [tSQLt].[Private_GetOriginalTableName](@SchemaName NVARCHAR(MAX), @TableName NVARCHAR(MAX)) --DELETE!!!&#xD;&#xA;RETURNS NVARCHAR(MAX)&#xD;&#xA;AS" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetOriginalTableName].[@SchemaName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetOriginalTableName].[@TableName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Relationship Name="Type">
				<Entry>
					<Element Type="SqlTypeSpecifier">
						<Property Name="IsMax" Value="True" />
						<Relationship Name="Type">
							<Entry>
								<References ExternalSource="BuiltIns" Name="[nvarchar]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlScalarFunction" Name="[tSQLt].[Private_GetQuotedFullName]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetQuotedFullName].[@Objectid]" />
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[
BEGIN
    DECLARE @QuotedName NVARCHAR(517);
    SELECT @QuotedName = QUOTENAME(OBJECT_SCHEMA_NAME(@Objectid)) + '.' + QUOTENAME(OBJECT_NAME(@Objectid));
    RETURN @QuotedName;
END;]]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="CreateOffset" Value="2" />
							<Property Name="Length" Value="283" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE FUNCTION [tSQLt].[Private_GetQuotedFullName](@Objectid INT)&#xD;&#xA;RETURNS NVARCHAR(517)&#xD;&#xA;AS" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetQuotedFullName].[@Objectid]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Relationship Name="Type">
				<Entry>
					<Element Type="SqlTypeSpecifier">
						<Property Name="Length" Value="517" />
						<Relationship Name="Type">
							<Entry>
								<References ExternalSource="BuiltIns" Name="[nvarchar]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlInlineTableValuedFunction" Name="[tSQLt].[Private_GetQuotedTableNameForConstraint]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[extended_properties]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects].[object_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[extended_properties].[major_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[extended_properties].[minor_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[extended_properties].[class_desc]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[extended_properties].[name]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects].[parent_object_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[extended_properties].[value]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects].[schema_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects].[schema_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects].[object_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetQuotedTableNameForConstraint].[@ConstraintObjectId]" />
				</Entry>
			</Relationship>
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_GetQuotedTableNameForConstraint].[QuotedTableName]" />
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_GetQuotedTableNameForConstraint].[SchemaName]" />
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_GetQuotedTableNameForConstraint].[TableName]" />
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_GetQuotedTableNameForConstraint].[OrgTableName]" />
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[
  SELECT QUOTENAME(SCHEMA_NAME(newtbl.schema_id)) + '.' + QUOTENAME(OBJECT_NAME(newtbl.object_id)) QuotedTableName,
         SCHEMA_NAME(newtbl.schema_id) SchemaName,
         OBJECT_NAME(newtbl.object_id) TableName,
         OBJECT_NAME(constraints.parent_object_id) OrgTableName
      FROM sys.objects AS constraints
      JOIN sys.extended_properties AS p
      JOIN sys.objects AS newtbl
        ON newtbl.object_id = p.major_id
       AND p.minor_id = 0
       AND p.class_desc = 'OBJECT_OR_COLUMN'
       AND p.name = 'tSQLt.FakeTable_OrgTableName'
        ON OBJECT_NAME(constraints.parent_object_id) = CAST(p.value AS NVARCHAR(4000))
       AND constraints.schema_id = newtbl.schema_id
       AND constraints.object_id = @ConstraintObjectId]]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="Length" Value="881" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="CREATE FUNCTION [tSQLt].[Private_GetQuotedTableNameForConstraint](@ConstraintObjectId INT)&#xD;&#xA;RETURNS TABLE&#xD;&#xA;AS&#xD;&#xA;RETURN" />
							<Property Name="FooterContents" Value=";" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetQuotedTableNameForConstraint].[@ConstraintObjectId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlScalarFunction" Name="[tSQLt].[Private_GetSchemaId]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[schemas]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[schemas].[schema_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetSchemaId].[@SchemaName]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[schemas].[name]" />
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[
BEGIN
  RETURN (
    SELECT TOP(1) schema_id
      FROM sys.schemas
     WHERE @SchemaName IN (name, QUOTENAME(name), QUOTENAME(name, '"'))
     ORDER BY 
        CASE WHEN name = @SchemaName THEN 0 ELSE 1 END
  );
END;]]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="CreateOffset" Value="2" />
							<Property Name="Length" Value="320" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE FUNCTION [tSQLt].[Private_GetSchemaId](@SchemaName NVARCHAR(MAX))&#xD;&#xA;RETURNS INT&#xD;&#xA;AS" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetSchemaId].[@SchemaName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Relationship Name="Type">
				<Entry>
					<Element Type="SqlTypeSpecifier">
						<Relationship Name="Type">
							<Entry>
								<References ExternalSource="BuiltIns" Name="[int]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Private_GetSetupProcedureName]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
    SELECT @SetupProcName = tSQLt.Private_GetQuotedFullName(object_id)
      FROM sys.procedures
     WHERE schema_id = @TestClassId
       AND LOWER(name) = 'setup';
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[procedures]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetSetupProcedureName].[@SetupProcName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetQuotedFullName]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[procedures].[object_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[procedures].[schema_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetSetupProcedureName].[@TestClassId]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[procedures].[name]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetSetupProcedureName].[@TestClassId]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetSetupProcedureName].[@SetupProcName]">
						<Property Name="IsOutput" Value="True" />
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="4" />
				<Property Name="Length" Value="315" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;&#xD;&#xA;CREATE PROCEDURE [tSQLt].[Private_GetSetupProcedureName]&#xD;&#xA;  @TestClassId INT = NULL,&#xD;&#xA;  @SetupProcName NVARCHAR(MAX) OUTPUT&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlInlineTableValuedFunction" Name="[tSQLt].[Private_GetUniqueConstraintDefinition]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[key_constraints]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetUniqueConstraintDefinition].[@QuotedTableName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetUniqueConstraintDefinition].[@ConstraintObjectId]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[key_constraints].[type_desc]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[index_columns]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[index_columns].[object_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns].[object_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[index_columns].[column_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns].[column_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns].[name]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[key_constraints].[unique_index_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[index_columns].[index_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[key_constraints].[parent_object_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns].[user_type_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns].[max_length]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns].[precision]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns].[scale]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns].[collation_name]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetDataTypeOrComputedColumnDefinition]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns].[name]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetDataTypeOrComputedColumnDefinition].[ColumnDefinition]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[key_constraints].[unique_index_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[index_columns].[index_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[key_constraints].[parent_object_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[index_columns].[object_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[key_constraints].[object_id]" />
				</Entry>
			</Relationship>
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_GetUniqueConstraintDefinition].[CreateConstraintCmd]" />
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_GetUniqueConstraintDefinition].[NotNullColumnCmd]" />
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[
  SELECT 'ALTER TABLE '+
         @QuotedTableName +
         ' ADD CONSTRAINT ' +
         QUOTENAME(OBJECT_NAME(@ConstraintObjectId)) +
         ' ' +
         CASE WHEN KC.type_desc = 'UNIQUE_CONSTRAINT' 
              THEN 'UNIQUE'
              ELSE 'PRIMARY KEY'
           END +
         '(' +
         STUFF((
                 SELECT ','+QUOTENAME(C.name)
                   FROM sys.index_columns AS IC
                   JOIN sys.columns AS C
                     ON IC.object_id = C.object_id
                    AND IC.column_id = C.column_id
                  WHERE KC.unique_index_id = IC.index_id
                    AND KC.parent_object_id = IC.object_id
                    FOR XML PATH(''),TYPE
               ).value('.','NVARCHAR(MAX)'),
               1,
               1,
               ''
              ) +
         ');' AS CreateConstraintCmd,
         CASE WHEN KC.type_desc = 'UNIQUE_CONSTRAINT' 
              THEN ''
              ELSE (
                     SELECT 'ALTER TABLE ' +
                            @QuotedTableName +
                            ' ALTER COLUMN ' +
                            QUOTENAME(C.name)+
                            cc.ColumnDefinition +
                            ' NOT NULL;'
                       FROM sys.index_columns AS IC
                       JOIN sys.columns AS C
                         ON IC.object_id = C.object_id
                        AND IC.column_id = C.column_id
                      CROSS APPLY tSQLt.Private_GetDataTypeOrComputedColumnDefinition(C.user_type_id, C.max_length, C.precision, C.scale, C.collation_name, C.object_id, C.column_id, 0) cc
                      WHERE KC.unique_index_id = IC.index_id
                        AND KC.parent_object_id = IC.object_id
                        FOR XML PATH(''),TYPE
                   ).value('.','NVARCHAR(MAX)')
           END AS NotNullColumnCmd
    FROM sys.key_constraints AS KC
   WHERE KC.object_id = @ConstraintObjectId]]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="Length" Value="2179" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="CREATE FUNCTION [tSQLt].[Private_GetUniqueConstraintDefinition]&#xD;&#xA;(&#xD;&#xA;    @ConstraintObjectId INT,&#xD;&#xA;    @QuotedTableName NVARCHAR(MAX)&#xD;&#xA;)&#xD;&#xA;RETURNS TABLE&#xD;&#xA;AS&#xD;&#xA;RETURN" />
							<Property Name="FooterContents" Value=";" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetUniqueConstraintDefinition].[@ConstraintObjectId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_GetUniqueConstraintDefinition].[@QuotedTableName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Private_Init]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  EXEC tSQLt.Private_CleanTestResult;

  DECLARE @enable BIT; SET @enable = 1;
  DECLARE @version_match BIT;SET @version_match = 0;
  BEGIN TRY
    EXEC sys.sp_executesql N'SELECT @r = CASE WHEN I.Version = I.ClrVersion THEN 1 ELSE 0 END FROM tSQLt.Info() AS I;',N'@r BIT OUTPUT',@version_match OUT;
  END TRY
  BEGIN CATCH
    RAISERROR('Cannot access CLR. Assembly might be in an invalid state. Try running EXEC tSQLt.EnableExternalAccess @enable = 0; or reinstalling tSQLt.',16,10);
    RETURN;
  END CATCH;
  IF(@version_match = 0)
  BEGIN
    RAISERROR('tSQLt is in an invalid state. Please reinstall tSQLt.',16,10);
    RETURN;
  END;

  IF((SELECT SqlEdition FROM tSQLt.Info()) <> 'SQL Azure')
  BEGIN
    EXEC tSQLt.EnableExternalAccess @enable = @enable, @try = 1;
  END;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CleanTestResult]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[sp_executesql]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Info]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Info].[SqlEdition]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[EnableExternalAccess]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[EnableExternalAccess].[@enable]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[EnableExternalAccess].[@try]" />
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="858" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [tSQLt].[Private_Init]&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Private_InputBuffer]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  CREATE TABLE #inputbuffer(EventType SYSNAME, Parameters SMALLINT, EventInfo NVARCHAR(MAX));
  INSERT INTO #inputbuffer
  EXEC('DBCC INPUTBUFFER(@@SPID) WITH NO_INFOMSGS;');
  SELECT @InputBuffer = I.EventInfo FROM #inputbuffer AS I;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[Private_InputBuffer].[#inputbuffer]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_InputBuffer].[@InputBuffer]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_InputBuffer].[#inputbuffer].[EventInfo]" />
				</Entry>
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[tSQLt].[Private_InputBuffer].[#inputbuffer]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[tSQLt].[Private_InputBuffer].[#inputbuffer].[EventType]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[tSQLt].[Private_InputBuffer].[#inputbuffer].[Parameters]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[smallint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[tSQLt].[Private_InputBuffer].[#inputbuffer].[EventInfo]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_InputBuffer].[@InputBuffer]">
						<Property Name="IsOutput" Value="True" />
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="339" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [tSQLt].[Private_InputBuffer]&#xD;&#xA;  @InputBuffer NVARCHAR(MAX) OUTPUT&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlScalarFunction" Name="[tSQLt].[Private_IsTestClass]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[TestClasses]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestClasses].[SchemaId]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetSchemaId]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_IsTestClass].[@TestClassName]" />
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[
BEGIN
  RETURN 
    CASE 
      WHEN EXISTS(
             SELECT 1 
               FROM tSQLt.TestClasses
              WHERE SchemaId = tSQLt.Private_GetSchemaId(@TestClassName)
            )
      THEN 1
      ELSE 0
    END;
END;]]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="CreateOffset" Value="2" />
							<Property Name="Length" Value="339" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE FUNCTION [tSQLt].[Private_IsTestClass](@TestClassName NVARCHAR(MAX))&#xD;&#xA;RETURNS BIT&#xD;&#xA;AS" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_IsTestClass].[@TestClassName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Relationship Name="Type">
				<Entry>
					<Element Type="SqlTypeSpecifier">
						<Relationship Name="Type">
							<Entry>
								<References ExternalSource="BuiltIns" Name="[bit]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Private_MarkFakeTable]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
   DECLARE @UnquotedSchemaName NVARCHAR(MAX);SET @UnquotedSchemaName = OBJECT_SCHEMA_NAME(OBJECT_ID(@SchemaName+'.'+@TableName));
   DECLARE @UnquotedTableName NVARCHAR(MAX);SET @UnquotedTableName = OBJECT_NAME(OBJECT_ID(@SchemaName+'.'+@TableName));

   EXEC sys.sp_addextendedproperty 
      @name = N'tSQLt.FakeTable_OrgTableName', 
      @value = @NewNameOfOriginalTable, 
      @level0type = N'SCHEMA', @level0name = @UnquotedSchemaName, 
      @level1type = N'TABLE',  @level1name = @UnquotedTableName;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_MarkFakeTable].[@SchemaName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_MarkFakeTable].[@TableName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_MarkFakeTable].[@NewNameOfOriginalTable]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_MarkFakeTable].[@SchemaName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_MarkFakeTable].[@TableName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_MarkFakeTable].[@NewNameOfOriginalTable]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="4000" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="685" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[Private_MarkFakeTable]&#xD;&#xA;  @SchemaName NVARCHAR(MAX),&#xD;&#xA;  @TableName NVARCHAR(MAX),&#xD;&#xA;  @NewNameOfOriginalTable NVARCHAR(4000)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Private_MarkObjectBeforeRename]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  INSERT INTO tSQLt.Private_RenamedObjectLog (ObjectId, OriginalName) 
  VALUES (OBJECT_ID(@SchemaName + '.' + @OriginalName), @OriginalName);
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[Private_RenamedObjectLog]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RenamedObjectLog].[ObjectId]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RenamedObjectLog].[OriginalName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_MarkObjectBeforeRename].[@SchemaName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_MarkObjectBeforeRename].[@OriginalName]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_MarkObjectBeforeRename].[@SchemaName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_MarkObjectBeforeRename].[@OriginalName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="287" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[Private_MarkObjectBeforeRename]&#xD;&#xA;    @SchemaName NVARCHAR(MAX), &#xD;&#xA;    @OriginalName NVARCHAR(MAX)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Private_MarkSchemaAsTestClass]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  SET NOCOUNT ON;

  DECLARE @UnquotedClassName NVARCHAR(MAX);

  SELECT @UnquotedClassName = name
    FROM sys.schemas
   WHERE QUOTENAME(name) = @QuotedClassName;

  EXEC sp_addextendedproperty @name = N'tSQLt.TestClass', 
                              @value = 1,
                              @level0type = 'SCHEMA',
                              @level0name = @UnquotedClassName;

  INSERT INTO tSQLt.Private_NewTestClassList(ClassName)
  SELECT @UnquotedClassName
   WHERE NOT EXISTS
             (
               SELECT * 
                 FROM tSQLt.Private_NewTestClassList AS NTC
                 WITH(UPDLOCK,ROWLOCK,HOLDLOCK)
                WHERE NTC.ClassName = @UnquotedClassName
             );
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[schemas]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[schemas].[name]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_MarkSchemaAsTestClass].[@QuotedClassName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_NewTestClassList]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_NewTestClassList].[ClassName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_NewTestClassList].[ClassName]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_MarkSchemaAsTestClass].[@QuotedClassName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="842" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[Private_MarkSchemaAsTestClass]&#xD;&#xA;  @QuotedClassName NVARCHAR(MAX)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlTable" Name="[tSQLt].[Private_NewTestClassList]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[tSQLt].[Private_NewTestClassList].[ClassName]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="450" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="9" />
		</Element>
		<Element Type="SqlTable" Name="[tSQLt].[Private_NullCellTable]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[tSQLt].[Private_NullCellTable].[I]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Private_OutputTestResults]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
    DECLARE @Formatter NVARCHAR(MAX);
    SELECT @Formatter = COALESCE(@TestResultFormatter, tSQLt.GetTestResultFormatter());
    EXEC (@Formatter);
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_OutputTestResults].[@TestResultFormatter]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[GetTestResultFormatter]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_OutputTestResults].[@TestResultFormatter]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="267" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[Private_OutputTestResults]&#xD;&#xA;  @TestResultFormatter NVARCHAR(MAX) = NULL&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Private_Print]">
			<Property Name="BodyScript">
				<Value><![CDATA[ 
BEGIN
    DECLARE @SPos INT;SET @SPos = 1;
    DECLARE @EPos INT;
    DECLARE @Len INT; SET @Len = LEN(@Message);
    DECLARE @SubMsg NVARCHAR(MAX);
    DECLARE @Cmd NVARCHAR(MAX);
    
    DECLARE @CleanedMessage NVARCHAR(MAX);
    SET @CleanedMessage = REPLACE(@Message,'%','%%');
    
    WHILE (@SPos <= @Len)
    BEGIN
      SET @EPos = CHARINDEX(CHAR(13)+CHAR(10),@CleanedMessage+CHAR(13)+CHAR(10),@SPos);
      SET @SubMsg = SUBSTRING(@CleanedMessage, @SPos, @EPos - @SPos);
      SET @Cmd = N'RAISERROR(@Msg,@Severity,10) WITH NOWAIT;';
      EXEC sp_executesql @Cmd, 
                         N'@Msg NVARCHAR(MAX),@Severity INT',
                         @SubMsg,
                         @Severity;
      SELECT @SPos = @EPos + 2,
             @Severity = 0; --Print only first line with high severity
    END

    RETURN 0;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_Print].[@Message]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[sp_executesql]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_Print].[@Severity]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_Print].[@Message]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_Print].[@Severity]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="963" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [tSQLt].[Private_Print] &#xD;&#xA;    @Message NVARCHAR(MAX),&#xD;&#xA;    @Severity INT = 0&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Private_PrintXML]">
			<Property Name="BodyScript">
				<Value><![CDATA[ 
BEGIN
    SELECT @Message FOR XML PATH('');--Required together with ":XML ON" sqlcmd statement to allow more than 1mb to be returned
    RETURN 0;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[Private_PrintXML].[@Message]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_PrintXML].[@Message]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlXmlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[xml]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="224" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[Private_PrintXML]&#xD;&#xA;    @Message XML&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlScalarFunction" Name="[tSQLt].[Private_QuoteClassNameForNewTestClass]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[Private_QuoteClassNameForNewTestClass].[@ClassName]" />
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[
BEGIN
  RETURN 
    CASE WHEN @ClassName LIKE '[[]%]' THEN @ClassName
         ELSE QUOTENAME(@ClassName)
     END;
END;]]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="CreateOffset" Value="2" />
							<Property Name="Length" Value="247" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE FUNCTION [tSQLt].[Private_QuoteClassNameForNewTestClass](@ClassName NVARCHAR(MAX))&#xD;&#xA;  RETURNS NVARCHAR(MAX)&#xD;&#xA;AS" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_QuoteClassNameForNewTestClass].[@ClassName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Relationship Name="Type">
				<Entry>
					<Element Type="SqlTypeSpecifier">
						<Property Name="IsMax" Value="True" />
						<Relationship Name="Type">
							<Entry>
								<References ExternalSource="BuiltIns" Name="[nvarchar]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Private_RemoveSchemaBinding]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  DECLARE @cmd NVARCHAR(MAX);
  SELECT @cmd = tSQLt.[Private]::GetAlterStatementWithoutSchemaBinding(SM.definition)
    FROM sys.sql_modules AS SM
   WHERE SM.object_id = @object_id;
   EXEC(@cmd);
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[sql_modules]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[sql_modules].[definition]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[sql_modules].[object_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RemoveSchemaBinding].[@object_id]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_RemoveSchemaBinding].[@object_id]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="292" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [tSQLt].[Private_RemoveSchemaBinding]&#xD;&#xA;  @object_id INT&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Private_RemoveSchemaBoundReferences]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  DECLARE @cmd NVARCHAR(MAX);
  SELECT @cmd = 
  (
    SELECT 
      'EXEC tSQLt.Private_RemoveSchemaBoundReferences @object_id = '+STR(SED.referencing_id)+';'+
      'EXEC tSQLt.Private_RemoveSchemaBinding @object_id = '+STR(SED.referencing_id)+';'
      FROM
      (
        SELECT DISTINCT SEDI.referencing_id,SEDI.referenced_id 
          FROM sys.sql_expression_dependencies AS SEDI
         WHERE SEDI.is_schema_bound_reference = 1
      ) AS SED 
     WHERE SED.referenced_id = @object_id
       FOR XML PATH(''),TYPE
  ).value('.','NVARCHAR(MAX)');
  EXEC(@cmd);
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[sql_expression_dependencies]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[sql_expression_dependencies].[referencing_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[sql_expression_dependencies].[referenced_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[sql_expression_dependencies].[is_schema_bound_reference]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[sql_expression_dependencies].[referencing_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[sql_expression_dependencies].[referenced_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RemoveSchemaBoundReferences].[@object_id]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_RemoveSchemaBoundReferences].[@object_id]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="684" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [tSQLt].[Private_RemoveSchemaBoundReferences]&#xD;&#xA;  @object_id INT&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlTable" Name="[tSQLt].[Private_RenamedObjectLog]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[tSQLt].[Private_RenamedObjectLog].[Id]">
						<Property Name="IsNullable" Value="False" />
						<Property Name="IsIdentity" Value="True" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[tSQLt].[Private_RenamedObjectLog].[ObjectId]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[tSQLt].[Private_RenamedObjectLog].[OriginalName]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="34" />
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Private_RenameObjectToUniqueName]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
   SET @NewName=tSQLt.Private::CreateUniqueObjectName();

   DECLARE @RenameCmd NVARCHAR(MAX);
   SET @RenameCmd = 'EXEC sp_rename ''' + 
                          @SchemaName + '.' + @ObjectName + ''', ''' + 
                          @NewName + ''';';
   
   EXEC tSQLt.Private_MarkObjectBeforeRename @SchemaName, @ObjectName;


   EXEC tSQLt.SuppressOutput @RenameCmd;

END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RenameObjectToUniqueName].[@NewName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RenameObjectToUniqueName].[@SchemaName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RenameObjectToUniqueName].[@ObjectName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_MarkObjectBeforeRename]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[SuppressOutput]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_RenameObjectToUniqueName].[@SchemaName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_RenameObjectToUniqueName].[@ObjectName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_RenameObjectToUniqueName].[@NewName]">
						<Property Name="IsOutput" Value="True" />
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="569" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[Private_RenameObjectToUniqueName]&#xD;&#xA;    @SchemaName NVARCHAR(MAX),&#xD;&#xA;    @ObjectName NVARCHAR(MAX),&#xD;&#xA;    @NewName NVARCHAR(MAX) = NULL OUTPUT&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Private_RenameObjectToUniqueNameUsingObjectId]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
   DECLARE @SchemaName NVARCHAR(MAX);
   DECLARE @ObjectName NVARCHAR(MAX);
   
   SELECT @SchemaName = QUOTENAME(OBJECT_SCHEMA_NAME(@ObjectId)), @ObjectName = QUOTENAME(OBJECT_NAME(@ObjectId));
   
   EXEC tSQLt.Private_RenameObjectToUniqueName @SchemaName,@ObjectName, @NewName OUTPUT;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RenameObjectToUniqueNameUsingObjectId].[@ObjectId]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RenameObjectToUniqueName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RenameObjectToUniqueNameUsingObjectId].[@NewName]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_RenameObjectToUniqueNameUsingObjectId].[@ObjectId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_RenameObjectToUniqueNameUsingObjectId].[@NewName]">
						<Property Name="IsOutput" Value="True" />
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="447" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[Private_RenameObjectToUniqueNameUsingObjectId]&#xD;&#xA;    @ObjectId INT,&#xD;&#xA;    @NewName NVARCHAR(MAX) = NULL OUTPUT&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Private_ResetNewTestClassList]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  SET NOCOUNT ON;
  DELETE FROM tSQLt.Private_NewTestClassList;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[Private_NewTestClassList]" />
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="139" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [tSQLt].[Private_ResetNewTestClassList]&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlInlineTableValuedFunction" Name="[tSQLt].[Private_ResolveApplyConstraintParameters]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[Private_ResolveApplyConstraintParameters].[@A]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveApplyConstraintParameters].[@B]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_FindConstraint]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_FindConstraint].[ConstraintObjectId]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_FindConstraint].[ConstraintType]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveApplyConstraintParameters].[@C]" />
				</Entry>
			</Relationship>
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ResolveApplyConstraintParameters].[ConstraintObjectId]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References Name="[tSQLt].[Private_FindConstraint].[ConstraintObjectId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ResolveApplyConstraintParameters].[ConstraintType]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References Name="[tSQLt].[Private_FindConstraint].[ConstraintType]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[
  SELECT ConstraintObjectId, ConstraintType
    FROM tSQLt.Private_FindConstraint(OBJECT_ID(@A), @B)
   WHERE @C IS NULL
   UNION ALL
  SELECT *
    FROM tSQLt.Private_FindConstraint(OBJECT_ID(@A + '.' + @B), @C)
   UNION ALL
  SELECT *
    FROM tSQLt.Private_FindConstraint(OBJECT_ID(@C + '.' + @A), @B)]]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="CreateOffset" Value="2" />
							<Property Name="Length" Value="479" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE FUNCTION [tSQLt].[Private_ResolveApplyConstraintParameters]&#xD;&#xA;(&#xD;&#xA;  @A NVARCHAR(MAX),&#xD;&#xA;  @B NVARCHAR(MAX),&#xD;&#xA;  @C NVARCHAR(MAX)&#xD;&#xA;)&#xD;&#xA;RETURNS TABLE&#xD;&#xA;AS &#xD;&#xA;RETURN" />
							<Property Name="FooterContents" Value=";" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_ResolveApplyConstraintParameters].[@A]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_ResolveApplyConstraintParameters].[@B]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_ResolveApplyConstraintParameters].[@C]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlInlineTableValuedFunction" Name="[tSQLt].[Private_ResolveFakeTableNamesForBackwardCompatibility]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[Private_ResolveFakeTableNamesForBackwardCompatibility].[@SchemaName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveFakeTableNamesForBackwardCompatibility].[@TableName]" />
				</Entry>
			</Relationship>
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ResolveFakeTableNamesForBackwardCompatibility].[CleanSchemaName]" />
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ResolveFakeTableNamesForBackwardCompatibility].[CleanTableName]" />
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[
  SELECT QUOTENAME(OBJECT_SCHEMA_NAME(object_id)) AS CleanSchemaName,
         QUOTENAME(OBJECT_NAME(object_id)) AS CleanTableName
     FROM (SELECT CASE
                    WHEN @SchemaName IS NULL THEN OBJECT_ID(@TableName)
                    ELSE COALESCE(OBJECT_ID(@SchemaName + '.' + @TableName),OBJECT_ID(@TableName + '.' + @SchemaName)) 
                  END object_id
          ) ids]]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="CreateOffset" Value="2" />
							<Property Name="Length" Value="567" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE FUNCTION [tSQLt].[Private_ResolveFakeTableNamesForBackwardCompatibility] &#xD;&#xA; (@TableName NVARCHAR(MAX), @SchemaName NVARCHAR(MAX))&#xD;&#xA;RETURNS TABLE AS &#xD;&#xA;RETURN" />
							<Property Name="FooterContents" Value=";" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_ResolveFakeTableNamesForBackwardCompatibility].[@TableName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_ResolveFakeTableNamesForBackwardCompatibility].[@SchemaName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlInlineTableValuedFunction" Name="[tSQLt].[Private_ResolveName]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[Private_ResolveName].[@Name]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveSchemaName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveSchemaName].[schemaId]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveSchemaName].[quotedSchemaName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveSchemaName].[isTestClass]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveObjectName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveObjectName].[schemaId]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveObjectName].[objectId]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveObjectName].[quotedSchemaName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveObjectName].[quotedObjectName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveObjectName].[quotedFullName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveObjectName].[isTestCase]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveName].[CTE1].[resolvedNames].[schemaId]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveName].[CTE1].[resolvedNames].[objectId]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveName].[CTE1].[resolvedNames].[quotedSchemaName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveName].[CTE1].[resolvedNames].[quotedObjectName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveName].[CTE1].[resolvedNames].[quotedFullName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveName].[CTE1].[resolvedNames].[isTestClass]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveName].[CTE1].[resolvedNames].[isTestCase]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveName].[CTE1].[resolvedNames].[isSchema]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveName].[CTE1].[resolvedNames].[ord]" />
				</Entry>
			</Relationship>
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ResolveName].[schemaId]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References Name="[tSQLt].[Private_ResolveName].[CTE1].[resolvedNames].[schemaId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ResolveName].[objectId]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References Name="[tSQLt].[Private_ResolveName].[CTE1].[resolvedNames].[objectId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ResolveName].[quotedSchemaName]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References Name="[tSQLt].[Private_ResolveName].[CTE1].[resolvedNames].[quotedSchemaName]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ResolveName].[quotedObjectName]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References Name="[tSQLt].[Private_ResolveName].[CTE1].[resolvedNames].[quotedObjectName]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ResolveName].[quotedFullName]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References Name="[tSQLt].[Private_ResolveName].[CTE1].[resolvedNames].[quotedFullName]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ResolveName].[isTestClass]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References Name="[tSQLt].[Private_ResolveName].[CTE1].[resolvedNames].[isTestClass]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ResolveName].[isTestCase]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References Name="[tSQLt].[Private_ResolveName].[CTE1].[resolvedNames].[isTestCase]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ResolveName].[isSchema]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References Name="[tSQLt].[Private_ResolveName].[CTE1].[resolvedNames].[isSchema]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[tSQLt].[Private_ResolveName].[CTE1].[resolvedNames]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ResolveName].[CTE1].[resolvedNames].[ord]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ResolveName].[CTE1].[resolvedNames].[schemaId]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[tSQLt].[Private_ResolveSchemaName].[schemaId]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ResolveName].[CTE1].[resolvedNames].[objectId]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ResolveName].[CTE1].[resolvedNames].[quotedSchemaName]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[tSQLt].[Private_ResolveSchemaName].[quotedSchemaName]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ResolveName].[CTE1].[resolvedNames].[quotedObjectName]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ResolveName].[CTE1].[resolvedNames].[quotedFullName]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[tSQLt].[Private_ResolveSchemaName].[quotedSchemaName]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ResolveName].[CTE1].[resolvedNames].[isTestClass]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[tSQLt].[Private_ResolveSchemaName].[isTestClass]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ResolveName].[CTE1].[resolvedNames].[isTestCase]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ResolveName].[CTE1].[resolvedNames].[isSchema]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[
  WITH resolvedNames(ord, schemaId, objectId, quotedSchemaName, quotedObjectName, quotedFullName, isTestClass, isTestCase, isSchema) AS
  (SELECT 1, schemaId, NULL, quotedSchemaName, NULL, quotedSchemaName, isTestClass, 0, 1
     FROM tSQLt.Private_ResolveSchemaName(@Name)
    UNION ALL
   SELECT 2, schemaId, objectId, quotedSchemaName, quotedObjectName, quotedFullName, 0, isTestCase, 0
     FROM tSQLt.Private_ResolveObjectName(@Name)
    UNION ALL
   SELECT 3, NULL, NULL, NULL, NULL, NULL, 0, 0, 0
   )
   SELECT TOP(1) schemaId, objectId, quotedSchemaName, quotedObjectName, quotedFullName, isTestClass, isTestCase, isSchema
     FROM resolvedNames
    WHERE schemaId IS NOT NULL 
       OR ord = 3
    ORDER BY ord]]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="CreateOffset" Value="2" />
							<Property Name="Length" Value="833" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE FUNCTION [tSQLt].[Private_ResolveName](@Name NVARCHAR(MAX))&#xD;&#xA;RETURNS TABLE &#xD;&#xA;AS&#xD;&#xA;RETURN" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_ResolveName].[@Name]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlInlineTableValuedFunction" Name="[tSQLt].[Private_ResolveObjectName]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[Private_ResolveObjectName].[@Name]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveObjectName].[CTE1].[ids].[schemaId]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveObjectName].[CTE1].[ids].[objectId]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveObjectName].[CTE1].[idsWithNames].[schemaId]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveObjectName].[CTE1].[idsWithNames].[objectId]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveObjectName].[CTE1].[idsWithNames].[quotedSchemaName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveObjectName].[CTE1].[idsWithNames].[quotedObjectName]" />
				</Entry>
			</Relationship>
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ResolveObjectName].[schemaId]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References Name="[tSQLt].[Private_ResolveObjectName].[CTE1].[idsWithNames].[schemaId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ResolveObjectName].[objectId]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References Name="[tSQLt].[Private_ResolveObjectName].[CTE1].[idsWithNames].[objectId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ResolveObjectName].[quotedSchemaName]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References Name="[tSQLt].[Private_ResolveObjectName].[CTE1].[idsWithNames].[quotedSchemaName]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ResolveObjectName].[quotedObjectName]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References Name="[tSQLt].[Private_ResolveObjectName].[CTE1].[idsWithNames].[quotedObjectName]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ResolveObjectName].[quotedFullName]" />
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ResolveObjectName].[isTestCase]" />
				</Entry>
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[tSQLt].[Private_ResolveObjectName].[CTE1].[ids]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ResolveObjectName].[CTE1].[ids].[schemaId]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ResolveObjectName].[CTE1].[ids].[objectId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[tSQLt].[Private_ResolveObjectName].[CTE1].[idsWithNames]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ResolveObjectName].[CTE1].[idsWithNames].[schemaId]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[tSQLt].[Private_ResolveObjectName].[CTE1].[ids].[schemaId]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ResolveObjectName].[CTE1].[idsWithNames].[objectId]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[tSQLt].[Private_ResolveObjectName].[CTE1].[ids].[objectId]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ResolveObjectName].[CTE1].[idsWithNames].[quotedSchemaName]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ResolveObjectName].[CTE1].[idsWithNames].[quotedObjectName]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[
  WITH ids(schemaId, objectId) AS
       (SELECT SCHEMA_ID(OBJECT_SCHEMA_NAME(OBJECT_ID(@Name))),
               OBJECT_ID(@Name)
       ),
       idsWithNames(schemaId, objectId, quotedSchemaName, quotedObjectName) AS
        (SELECT schemaId, objectId,
         QUOTENAME(SCHEMA_NAME(schemaId)) AS quotedSchemaName, 
         QUOTENAME(OBJECT_NAME(objectId)) AS quotedObjectName
         FROM ids
        )
  SELECT schemaId, 
         objectId, 
         quotedSchemaName,
         quotedObjectName,
         quotedSchemaName + '.' + quotedObjectName AS quotedFullName, 
         CASE WHEN LOWER(quotedObjectName) LIKE '[[]test%]' 
               AND objectId = OBJECT_ID(quotedSchemaName + '.' + quotedObjectName,'P') 
              THEN 1 ELSE 0 END AS isTestCase
    FROM idsWithNames]]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="CreateOffset" Value="2" />
							<Property Name="Length" Value="913" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE FUNCTION [tSQLt].[Private_ResolveObjectName](@Name NVARCHAR(MAX))&#xD;&#xA;RETURNS TABLE &#xD;&#xA;AS&#xD;&#xA;RETURN" />
							<Property Name="FooterContents" Value=";" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_ResolveObjectName].[@Name]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlInlineTableValuedFunction" Name="[tSQLt].[Private_ResolveSchemaName]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[Private_ResolveSchemaName].[@Name]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetSchemaId]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveSchemaName].[CTE1].[ids].[schemaId]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveSchemaName].[CTE1].[idsWithNames].[schemaId]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveSchemaName].[CTE1].[idsWithNames].[quotedSchemaName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestClasses]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestClasses].[SchemaId]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveSchemaName].[CTE1].[idsWithNames].[schemaId]" />
				</Entry>
			</Relationship>
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ResolveSchemaName].[schemaId]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References Name="[tSQLt].[Private_ResolveSchemaName].[CTE1].[idsWithNames].[schemaId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ResolveSchemaName].[quotedSchemaName]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References Name="[tSQLt].[Private_ResolveSchemaName].[CTE1].[idsWithNames].[quotedSchemaName]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ResolveSchemaName].[isTestClass]" />
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ResolveSchemaName].[isSchema]" />
				</Entry>
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[tSQLt].[Private_ResolveSchemaName].[CTE1].[ids]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ResolveSchemaName].[CTE1].[ids].[schemaId]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[tSQLt].[Private_GetSchemaId]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[tSQLt].[Private_ResolveSchemaName].[CTE1].[idsWithNames]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ResolveSchemaName].[CTE1].[idsWithNames].[schemaId]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[tSQLt].[Private_ResolveSchemaName].[CTE1].[ids].[schemaId]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ResolveSchemaName].[CTE1].[idsWithNames].[quotedSchemaName]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[
  WITH ids(schemaId) AS
       (SELECT tSQLt.Private_GetSchemaId(@Name)
       ),
       idsWithNames(schemaId, quotedSchemaName) AS
        (SELECT schemaId,
         QUOTENAME(SCHEMA_NAME(schemaId))
         FROM ids
        )
  SELECT schemaId, 
         quotedSchemaName,
         CASE WHEN EXISTS(SELECT 1 FROM tSQLt.TestClasses WHERE TestClasses.SchemaId = idsWithNames.schemaId)
               THEN 1
              ELSE 0
         END AS isTestClass, 
         CASE WHEN schemaId IS NOT NULL THEN 1 ELSE 0 END AS isSchema
    FROM idsWithNames]]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="CreateOffset" Value="2" />
							<Property Name="Length" Value="670" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE FUNCTION [tSQLt].[Private_ResolveSchemaName](@Name NVARCHAR(MAX))&#xD;&#xA;RETURNS TABLE &#xD;&#xA;AS&#xD;&#xA;RETURN" />
							<Property Name="FooterContents" Value=";" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_ResolveSchemaName].[@Name]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Private_Run]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
SET NOCOUNT ON;
    DECLARE @FullName NVARCHAR(MAX);
    DECLARE @TestClassId INT;
    DECLARE @IsTestClass BIT;
    DECLARE @IsTestCase BIT;
    DECLARE @IsSchema BIT;
    DECLARE @SetUp NVARCHAR(MAX);SET @SetUp = NULL;
    
    SELECT @TestName = tSQLt.Private_GetLastTestNameIfNotProvided(@TestName);
    EXEC tSQLt.Private_SaveTestNameForSession @TestName;
    
    SELECT @TestClassId = schemaId,
           @FullName = quotedFullName,
           @IsTestClass = isTestClass,
           @IsSchema = isSchema,
           @IsTestCase = isTestCase
      FROM tSQLt.Private_ResolveName(@TestName);

    IF @IsSchema = 1
    BEGIN
        EXEC tSQLt.Private_RunTestClass @FullName;
    END
    
    IF @IsTestCase = 1
    BEGIN
      DECLARE @SetupProcName NVARCHAR(MAX);
      EXEC tSQLt.Private_GetSetupProcedureName @TestClassId, @SetupProcName OUTPUT;

      EXEC tSQLt.Private_RunTest @FullName, @SetupProcName;
    END;

    EXEC tSQLt.Private_OutputTestResults @TestResultFormatter;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_Run].[@TestName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetLastTestNameIfNotProvided]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_SaveTestNameForSession]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveName].[schemaId]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveName].[quotedFullName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveName].[isTestClass]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveName].[isSchema]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ResolveName].[isTestCase]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RunTestClass]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetSetupProcedureName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RunTest]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_OutputTestResults]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_Run].[@TestResultFormatter]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_Run].[@TestName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_Run].[@TestResultFormatter]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="1146" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[Private_Run]&#xD;&#xA;   @TestName NVARCHAR(MAX),&#xD;&#xA;   @TestResultFormatter NVARCHAR(MAX)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Private_RunAll]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  EXEC tSQLt.Private_RunCursor @TestResultFormatter = @TestResultFormatter, @GetCursorCallback = 'tSQLt.Private_GetCursorForRunAll';
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[Private_RunCursor]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RunCursor].[@TestResultFormatter]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RunAll].[@TestResultFormatter]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RunCursor].[@GetCursorCallback]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_RunAll].[@TestResultFormatter]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="232" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[Private_RunAll]&#xD;&#xA;  @TestResultFormatter NVARCHAR(MAX)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Private_RunCursor]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  SET NOCOUNT ON;
  DECLARE @TestClassName NVARCHAR(MAX);
  DECLARE @TestProcName NVARCHAR(MAX);

  DECLARE @TestClassCursor CURSOR;
  EXEC @GetCursorCallback @TestClassCursor = @TestClassCursor OUT;
----  
  WHILE(1=1)
  BEGIN
    FETCH NEXT FROM @TestClassCursor INTO @TestClassName;
    IF(@@FETCH_STATUS<>0)BREAK;

    EXEC tSQLt.Private_RunTestClass @TestClassName;
    
  END;
  
  CLOSE @TestClassCursor;
  DEALLOCATE @TestClassCursor;
  
  EXEC tSQLt.Private_OutputTestResults @TestResultFormatter;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[cursor]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RunCursor].[@GetCursorCallback]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RunTestClass]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_OutputTestResults]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RunCursor].[@TestResultFormatter]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_RunCursor].[@TestResultFormatter]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_RunCursor].[@GetCursorCallback]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="4" />
				<Property Name="Length" Value="667" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;&#xD;&#xA;CREATE PROCEDURE [tSQLt].[Private_RunCursor]&#xD;&#xA;  @TestResultFormatter NVARCHAR(MAX),&#xD;&#xA;  @GetCursorCallback NVARCHAR(MAX)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Private_RunMethodHandler]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  SELECT @TestResultFormatter = ISNULL(@TestResultFormatter,tSQLt.GetTestResultFormatter());

  EXEC tSQLt.Private_Init;
  IF(@@ERROR = 0)
  BEGIN  
    IF(EXISTS(SELECT * FROM sys.parameters AS P WHERE P.object_id = OBJECT_ID(@RunMethod) AND name = '@TestName'))
    BEGIN
      EXEC @RunMethod @TestName = @TestName, @TestResultFormatter = @TestResultFormatter;
    END;
    ELSE
    BEGIN  
      EXEC @RunMethod @TestResultFormatter = @TestResultFormatter;
    END;
  END;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[Private_RunMethodHandler].[@TestResultFormatter]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[GetTestResultFormatter]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_Init]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[parameters]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[parameters].[object_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RunMethodHandler].[@RunMethod]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[parameters].[name]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RunMethodHandler].[@TestName]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_RunMethodHandler].[@RunMethod]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_RunMethodHandler].[@TestResultFormatter]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_RunMethodHandler].[@TestName]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="670" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[Private_RunMethodHandler]&#xD;&#xA;  @RunMethod NVARCHAR(MAX),&#xD;&#xA;  @TestResultFormatter NVARCHAR(MAX) = NULL,&#xD;&#xA;  @TestName NVARCHAR(MAX) = NULL&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Private_RunNew]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  EXEC tSQLt.Private_RunCursor @TestResultFormatter = @TestResultFormatter, @GetCursorCallback = 'tSQLt.Private_GetCursorForRunNew';
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[Private_RunCursor]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RunCursor].[@TestResultFormatter]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RunNew].[@TestResultFormatter]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RunCursor].[@GetCursorCallback]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_RunNew].[@TestResultFormatter]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="232" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[Private_RunNew]&#xD;&#xA;  @TestResultFormatter NVARCHAR(MAX)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Private_RunTest]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
    DECLARE @Msg NVARCHAR(MAX); SET @Msg = '';
    DECLARE @Msg2 NVARCHAR(MAX); SET @Msg2 = '';
    DECLARE @Cmd NVARCHAR(MAX); SET @Cmd = '';
    DECLARE @TestClassName NVARCHAR(MAX); SET @TestClassName = '';
    DECLARE @TestProcName NVARCHAR(MAX); SET @TestProcName = '';
    DECLARE @Result NVARCHAR(MAX); SET @Result = 'Success';
    DECLARE @TranName CHAR(32); EXEC tSQLt.GetNewTranName @TranName OUT;
    DECLARE @TestResultId INT;
    DECLARE @PreExecTrancount INT;

    DECLARE @VerboseMsg NVARCHAR(MAX);
    DECLARE @Verbose BIT;
    SET @Verbose = ISNULL((SELECT CAST(Value AS BIT) FROM tSQLt.Private_GetConfiguration('Verbose')),0);
    
    TRUNCATE TABLE tSQLt.CaptureOutputLog;
    CREATE TABLE #ExpectException(ExpectException INT,ExpectedMessage NVARCHAR(MAX), ExpectedSeverity INT, ExpectedState INT, ExpectedMessagePattern NVARCHAR(MAX), ExpectedErrorNumber INT, FailMessage NVARCHAR(MAX));

    IF EXISTS (SELECT 1 FROM sys.extended_properties WHERE name = N'SetFakeViewOnTrigger')
    BEGIN
      RAISERROR('Test system is in an invalid state. SetFakeViewOff must be called if SetFakeViewOn was called. Call SetFakeViewOff after creating all test case procedures.', 16, 10) WITH NOWAIT;
      RETURN -1;
    END;

    SELECT @Cmd = 'EXEC ' + @TestName;
    
    SELECT @TestClassName = OBJECT_SCHEMA_NAME(OBJECT_ID(@TestName)), --tSQLt.Private_GetCleanSchemaName('', @TestName),
           @TestProcName = tSQLt.Private_GetCleanObjectName(@TestName);
           
    INSERT INTO tSQLt.TestResult(Class, TestCase, TranName, Result) 
        SELECT @TestClassName, @TestProcName, @TranName, 'A severe error happened during test execution. Test did not finish.'
        OPTION(MAXDOP 1);
    SELECT @TestResultId = SCOPE_IDENTITY();

    IF(@Verbose = 1)
    BEGIN
      SET @VerboseMsg = 'tSQLt.Run '''+@TestName+'''; --Starting';
      EXEC tSQLt.Private_Print @Message =@VerboseMsg, @Severity = 0;
    END;

    BEGIN TRAN;
    SAVE TRAN @TranName;

    SET @PreExecTrancount = @@TRANCOUNT;
    
    TRUNCATE TABLE tSQLt.TestMessage;

    DECLARE @TmpMsg NVARCHAR(MAX);
    DECLARE @TestEndTime DATETIME; SET @TestEndTime = NULL;
    BEGIN TRY
        IF (@SetUp IS NOT NULL) EXEC @SetUp;
        EXEC (@Cmd);
        SET @TestEndTime = GETDATE();
        IF(EXISTS(SELECT 1 FROM #ExpectException WHERE ExpectException = 1))
        BEGIN
          SET @TmpMsg = COALESCE((SELECT FailMessage FROM #ExpectException)+' ','')+'Expected an error to be raised.';
          EXEC tSQLt.Fail @TmpMsg;
        END
    END TRY
    BEGIN CATCH
        SET @TestEndTime = ISNULL(@TestEndTime,GETDATE());
        IF ERROR_MESSAGE() LIKE '%tSQLt.Failure%'
        BEGIN
            SELECT @Msg = Msg FROM tSQLt.TestMessage;
            SET @Result = 'Failure';
        END
        ELSE
        BEGIN
          DECLARE @ErrorInfo NVARCHAR(MAX);
          SELECT @ErrorInfo = 
            COALESCE(ERROR_MESSAGE(), '<ERROR_MESSAGE() is NULL>') + 
            '[' +COALESCE(LTRIM(STR(ERROR_SEVERITY())), '<ERROR_SEVERITY() is NULL>') + ','+COALESCE(LTRIM(STR(ERROR_STATE())), '<ERROR_STATE() is NULL>') + ']' +
            '{' + COALESCE(ERROR_PROCEDURE(), '<ERROR_PROCEDURE() is NULL>') + ',' + COALESCE(CAST(ERROR_LINE() AS NVARCHAR), '<ERROR_LINE() is NULL>') + '}';

          IF(EXISTS(SELECT 1 FROM #ExpectException))
          BEGIN
            DECLARE @ExpectException INT;
            DECLARE @ExpectedMessage NVARCHAR(MAX);
            DECLARE @ExpectedMessagePattern NVARCHAR(MAX);
            DECLARE @ExpectedSeverity INT;
            DECLARE @ExpectedState INT;
            DECLARE @ExpectedErrorNumber INT;
            DECLARE @FailMessage NVARCHAR(MAX);
            SELECT @ExpectException = ExpectException,
                   @ExpectedMessage = ExpectedMessage, 
                   @ExpectedSeverity = ExpectedSeverity,
                   @ExpectedState = ExpectedState,
                   @ExpectedMessagePattern = ExpectedMessagePattern,
                   @ExpectedErrorNumber = ExpectedErrorNumber,
                   @FailMessage = FailMessage
              FROM #ExpectException;

            IF(@ExpectException = 1)
            BEGIN
              SET @Result = 'Success';
              SET @TmpMsg = COALESCE(@FailMessage+' ','')+'Exception did not match expectation!';
              IF(ERROR_MESSAGE() <> @ExpectedMessage)
              BEGIN
                SET @TmpMsg = @TmpMsg +CHAR(13)+CHAR(10)+
                           'Expected Message: <'+@ExpectedMessage+'>'+CHAR(13)+CHAR(10)+
                           'Actual Message  : <'+ERROR_MESSAGE()+'>';
                SET @Result = 'Failure';
              END
              IF(ERROR_MESSAGE() NOT LIKE @ExpectedMessagePattern)
              BEGIN
                SET @TmpMsg = @TmpMsg +CHAR(13)+CHAR(10)+
                           'Expected Message to be like <'+@ExpectedMessagePattern+'>'+CHAR(13)+CHAR(10)+
                           'Actual Message            : <'+ERROR_MESSAGE()+'>';
                SET @Result = 'Failure';
              END
              IF(ERROR_NUMBER() <> @ExpectedErrorNumber)
              BEGIN
                SET @TmpMsg = @TmpMsg +CHAR(13)+CHAR(10)+
                           'Expected Error Number: '+CAST(@ExpectedErrorNumber AS NVARCHAR(MAX))+CHAR(13)+CHAR(10)+
                           'Actual Error Number  : '+CAST(ERROR_NUMBER() AS NVARCHAR(MAX));
                SET @Result = 'Failure';
              END
              IF(ERROR_SEVERITY() <> @ExpectedSeverity)
              BEGIN
                SET @TmpMsg = @TmpMsg +CHAR(13)+CHAR(10)+
                           'Expected Severity: '+CAST(@ExpectedSeverity AS NVARCHAR(MAX))+CHAR(13)+CHAR(10)+
                           'Actual Severity  : '+CAST(ERROR_SEVERITY() AS NVARCHAR(MAX));
                SET @Result = 'Failure';
              END
              IF(ERROR_STATE() <> @ExpectedState)
              BEGIN
                SET @TmpMsg = @TmpMsg +CHAR(13)+CHAR(10)+
                           'Expected State: '+CAST(@ExpectedState AS NVARCHAR(MAX))+CHAR(13)+CHAR(10)+
                           'Actual State  : '+CAST(ERROR_STATE() AS NVARCHAR(MAX));
                SET @Result = 'Failure';
              END
              IF(@Result = 'Failure')
              BEGIN
                SET @Msg = @TmpMsg;
              END
            END 
            ELSE
            BEGIN
                SET @Result = 'Failure';
                SET @Msg = 
                  COALESCE(@FailMessage+' ','')+
                  'Expected no error to be raised. Instead this error was encountered:'+
                  CHAR(13)+CHAR(10)+
                  @ErrorInfo;
            END
          END
          ELSE
          BEGIN
            SET @Result = 'Error';
            SET @Msg = @ErrorInfo;
          END  
        END;
    END CATCH

    BEGIN TRY
        ROLLBACK TRAN @TranName;
    END TRY
    BEGIN CATCH
        DECLARE @PostExecTrancount INT;
        SET @PostExecTrancount = @PreExecTrancount - @@TRANCOUNT;
        IF (@@TRANCOUNT > 0) ROLLBACK;
        BEGIN TRAN;
        IF(   @Result <> 'Success'
           OR @PostExecTrancount <> 0
          )
        BEGIN
          SELECT @Msg = COALESCE(@Msg, '<NULL>') + ' (There was also a ROLLBACK ERROR --> ' + COALESCE(ERROR_MESSAGE(), '<ERROR_MESSAGE() is NULL>') + '{' + COALESCE(ERROR_PROCEDURE(), '<ERROR_PROCEDURE() is NULL>') + ',' + COALESCE(CAST(ERROR_LINE() AS NVARCHAR), '<ERROR_LINE() is NULL>') + '})';
          SET @Result = 'Error';
        END
    END CATCH    

    If(@Result <> 'Success') 
    BEGIN
      SET @Msg2 = @TestName + ' failed: (' + @Result + ') ' + @Msg;
      EXEC tSQLt.Private_Print @Message = @Msg2, @Severity = 0;
    END

    IF EXISTS(SELECT 1 FROM tSQLt.TestResult WHERE Id = @TestResultId)
    BEGIN
        UPDATE tSQLt.TestResult SET
            Result = @Result,
            Msg = @Msg,
            TestEndTime = @TestEndTime
         WHERE Id = @TestResultId;
    END
    ELSE
    BEGIN
        INSERT tSQLt.TestResult(Class, TestCase, TranName, Result, Msg)
        SELECT @TestClassName, 
               @TestProcName,  
               '?', 
               'Error', 
               'TestResult entry is missing; Original outcome: ' + @Result + ', ' + @Msg;
    END    
      

    COMMIT;

    IF(@Verbose = 1)
    BEGIN
    SET @VerboseMsg = 'tSQLt.Run '''+@TestName+'''; --Finished';
      EXEC tSQLt.Private_Print @Message =@VerboseMsg, @Severity = 0;
    END;

END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[char]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[GetNewTranName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetConfiguration]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetConfiguration].[Value]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[CaptureOutputLog]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[extended_properties]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[extended_properties].[name]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RunTest].[@TestName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetCleanObjectName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestResult]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestResult].[Class]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestResult].[TestCase]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestResult].[TranName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestResult].[Result]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_Print]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_Print].[@Message]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_Print].[@Severity]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestMessage]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RunTest].[@SetUp]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RunTest].[#ExpectException]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RunTest].[#ExpectException].[ExpectException]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RunTest].[#ExpectException].[FailMessage]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Fail]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestMessage].[Msg]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RunTest].[#ExpectException].[ExpectException]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RunTest].[#ExpectException].[ExpectedMessage]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RunTest].[#ExpectException].[ExpectedSeverity]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RunTest].[#ExpectException].[ExpectedState]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RunTest].[#ExpectException].[ExpectedMessagePattern]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RunTest].[#ExpectException].[ExpectedErrorNumber]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RunTest].[#ExpectException].[FailMessage]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestResult].[Id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestResult].[Msg]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestResult].[TestEndTime]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestResult].[Id]" />
				</Entry>
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[tSQLt].[Private_RunTest].[#ExpectException]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[tSQLt].[Private_RunTest].[#ExpectException].[ExpectException]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[tSQLt].[Private_RunTest].[#ExpectException].[ExpectedMessage]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[tSQLt].[Private_RunTest].[#ExpectException].[ExpectedSeverity]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[tSQLt].[Private_RunTest].[#ExpectException].[ExpectedState]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[tSQLt].[Private_RunTest].[#ExpectException].[ExpectedMessagePattern]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[tSQLt].[Private_RunTest].[#ExpectException].[ExpectedErrorNumber]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[tSQLt].[Private_RunTest].[#ExpectException].[FailMessage]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_RunTest].[@TestName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_RunTest].[@SetUp]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="8782" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[Private_RunTest]&#xD;&#xA;   @TestName NVARCHAR(MAX),&#xD;&#xA;   @SetUp NVARCHAR(MAX) = NULL&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Private_RunTestClass]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
    DECLARE @TestCaseName NVARCHAR(MAX);
    DECLARE @TestClassId INT; SET @TestClassId = tSQLt.Private_GetSchemaId(@TestClassName);
    DECLARE @SetupProcName NVARCHAR(MAX);
    EXEC tSQLt.Private_GetSetupProcedureName @TestClassId, @SetupProcName OUTPUT;
    
    DECLARE testCases CURSOR LOCAL FAST_FORWARD 
        FOR
     SELECT tSQLt.Private_GetQuotedFullName(object_id)
       FROM sys.procedures
      WHERE schema_id = @TestClassId
        AND LOWER(name) LIKE 'test%';

    OPEN testCases;
    
    FETCH NEXT FROM testCases INTO @TestCaseName;

    WHILE @@FETCH_STATUS = 0
    BEGIN
        EXEC tSQLt.Private_RunTest @TestCaseName, @SetupProcName;

        FETCH NEXT FROM testCases INTO @TestCaseName;
    END;

    CLOSE testCases;
    DEALLOCATE testCases;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetSchemaId]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RunTestClass].[@TestClassName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetSetupProcedureName]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[procedures]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[procedures].[object_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_GetQuotedFullName]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[procedures].[schema_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[procedures].[name]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RunTest]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_RunTestClass].[@TestClassName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="897" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[Private_RunTestClass]&#xD;&#xA;  @TestClassName NVARCHAR(MAX)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Private_SaveTestNameForSession]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  DELETE FROM tSQLt.Run_LastExecution
   WHERE SessionId = @@SPID;  

  INSERT INTO tSQLt.Run_LastExecution(TestName, SessionId, LoginTime)
  SELECT TestName = @TestName,
         session_id,
         login_time
    FROM sys.dm_exec_sessions
   WHERE session_id = @@SPID;
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[Run_LastExecution]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Run_LastExecution].[SessionId]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Run_LastExecution].[TestName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Run_LastExecution].[LoginTime]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[dm_exec_sessions]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_SaveTestNameForSession].[@TestName]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[dm_exec_sessions].[session_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[dm_exec_sessions].[login_time]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_SaveTestNameForSession].[@TestName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="384" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[Private_SaveTestNameForSession] &#xD;&#xA;  @TestName NVARCHAR(MAX)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlInlineTableValuedFunction" Name="[tSQLt].[Private_ScriptIndex]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[Private_SysIndexes]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[index_columns]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[index_columns].[column_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns].[column_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[index_columns].[object_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns].[object_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns].[name]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[index_columns].[is_descending_key]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[index_columns].[key_ordinal]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[index_columns].[is_included_column]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[index_columns].[index_column_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_SysIndexes].[object_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[index_columns].[index_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_SysIndexes].[index_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[index_columns].[is_included_column]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_SysIndexes].[type]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[columns].[name]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[index_columns].[is_descending_key]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_SysIndexes].[index_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_SysIndexes].[name]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_SysIndexes].[is_primary_key]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_SysIndexes].[is_unique]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_SysIndexes].[is_disabled]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_SysIndexes].[name]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ScriptIndex].[@object_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_SysIndexes].[has_filter]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_SysIndexes].[filter_definition]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_SysIndexes].[is_hypothetical]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_SysIndexes].[object_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ScriptIndex].[@index_id]" />
				</Entry>
			</Relationship>
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ScriptIndex].[index_id]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References Name="[tSQLt].[Private_SysIndexes].[index_id]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ScriptIndex].[index_name]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References Name="[tSQLt].[Private_SysIndexes].[name]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ScriptIndex].[is_primary_key]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References Name="[tSQLt].[Private_SysIndexes].[is_primary_key]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ScriptIndex].[is_unique]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References Name="[tSQLt].[Private_SysIndexes].[is_unique]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ScriptIndex].[is_disabled]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References Name="[tSQLt].[Private_SysIndexes].[is_disabled]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_ScriptIndex].[create_cmd]" />
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[
  SELECT I.index_id,
         I.name AS index_name,
         I.is_primary_key,
         I.is_unique,
         I.is_disabled,
         'CREATE ' +
         CASE WHEN I.is_unique = 1 THEN 'UNIQUE ' ELSE '' END +
         CASE I.type
           WHEN 1 THEN 'CLUSTERED'
           WHEN 2 THEN 'NONCLUSTERED'
           WHEN 5 THEN 'CLUSTERED COLUMNSTORE'
           WHEN 6 THEN 'NONCLUSTERED COLUMNSTORE'
           ELSE '{Index Type Not Supported!}' 
         END +
         ' INDEX ' +
         QUOTENAME(I.name)+
         ' ON ' + QUOTENAME(OBJECT_SCHEMA_NAME(@object_id)) + '.' + QUOTENAME(OBJECT_NAME(@object_id)) +
         CASE WHEN I.type NOT IN (5)
           THEN
             '('+ 
             CL.column_list +
             ')'
           ELSE ''
         END +
         CASE WHEN I.has_filter = 1
           THEN 'WHERE' + I.filter_definition
           ELSE ''
         END +
         CASE WHEN I.is_hypothetical = 1
           THEN 'WITH(STATISTICS_ONLY = -1)'
           ELSE ''
         END +
         ';' AS create_cmd
    FROM tSQLt.Private_SysIndexes AS I
   CROSS APPLY
   (
     SELECT
      (
        SELECT 
          CASE WHEN OIC.rn > 1 THEN ',' ELSE '' END +
          CASE WHEN OIC.rn = 1 AND OIC.is_included_column = 1 AND I.type NOT IN (6) THEN ')INCLUDE(' ELSE '' END +
          QUOTENAME(OIC.name) +
          CASE WHEN OIC.is_included_column = 0
            THEN CASE WHEN OIC.is_descending_key = 1 THEN 'DESC' ELSE 'ASC' END
            ELSE ''
          END
          FROM
          (
            SELECT C.name,
                   IC.is_descending_key, 
                   IC.key_ordinal,
                   IC.is_included_column,
                   ROW_NUMBER()OVER(PARTITION BY IC.is_included_column ORDER BY IC.key_ordinal, IC.index_column_id) AS rn
              FROM sys.index_columns AS IC
              JOIN sys.columns AS C
                ON IC.column_id = C.column_id
               AND IC.object_id = C.object_id
             WHERE IC.object_id = I.object_id
               AND IC.index_id = I.index_id
          )OIC
         ORDER BY OIC.is_included_column, OIC.rn
           FOR XML PATH(''),TYPE
      ).value('.','NVARCHAR(MAX)') AS column_list
   )CL
   WHERE I.object_id = @object_id
     AND I.index_id = ISNULL(@index_id,I.index_id)]]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="Length" Value="2466" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="CREATE FUNCTION [tSQLt].[Private_ScriptIndex]&#xD;&#xA;(&#xD;&#xA;  @object_id INT,&#xD;&#xA;  @index_id INT&#xD;&#xA;)&#xD;&#xA;RETURNS TABLE&#xD;&#xA;AS&#xD;&#xA;RETURN" />
							<Property Name="FooterContents" Value=";" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_ScriptIndex].[@object_id]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_ScriptIndex].[@index_id]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Private_SetConfiguration]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  IF(EXISTS(SELECT 1 FROM tSQLt.Private_Configurations WITH(ROWLOCK,UPDLOCK) WHERE Name = @Name))
  BEGIN
    UPDATE tSQLt.Private_Configurations SET
           Value = @Value
     WHERE Name = @Name;
  END;
  ELSE
  BEGIN
     INSERT tSQLt.Private_Configurations(Name,Value)
     VALUES(@Name,@Value);
  END;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[Private_Configurations]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_Configurations].[Name]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_SetConfiguration].[@Name]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_Configurations].[Value]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_SetConfiguration].[@Value]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_Configurations].[Name]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_SetConfiguration].[@Name]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="100" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_SetConfiguration].[@Value]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sql_variant]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="435" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [tSQLt].[Private_SetConfiguration]&#xD;&#xA;  @Name NVARCHAR(100),&#xD;&#xA;  @Value SQL_VARIANT&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Private_SetFakeViewOff_SingleView]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  DECLARE @Cmd NVARCHAR(MAX),
          @SchemaName NVARCHAR(MAX),
          @TriggerName NVARCHAR(MAX);
          
  SELECT @SchemaName = QUOTENAME(OBJECT_SCHEMA_NAME(ObjId)),
         @TriggerName = QUOTENAME(OBJECT_NAME(ObjId) + '_SetFakeViewOn')
    FROM (SELECT OBJECT_ID(@ViewName) AS ObjId) X;
  
  SET @Cmd = 'DROP TRIGGER %SCHEMA_NAME%.%TRIGGER_NAME%;';
      
  SET @Cmd = REPLACE(@Cmd, '%SCHEMA_NAME%', @SchemaName);
  SET @Cmd = REPLACE(@Cmd, '%TRIGGER_NAME%', @TriggerName);
  
  EXEC(@Cmd);
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_SetFakeViewOff_SingleView].[@ViewName]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_SetFakeViewOff_SingleView].[@ViewName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="625" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[Private_SetFakeViewOff_SingleView]&#xD;&#xA;  @ViewName NVARCHAR(MAX)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Private_SetFakeViewOn_SingleView]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  DECLARE @Cmd NVARCHAR(MAX),
          @SchemaName NVARCHAR(MAX),
          @TriggerName NVARCHAR(MAX);
          
  SELECT @SchemaName = OBJECT_SCHEMA_NAME(ObjId),
         @ViewName = OBJECT_NAME(ObjId),
         @TriggerName = OBJECT_NAME(ObjId) + '_SetFakeViewOn'
    FROM (SELECT OBJECT_ID(@ViewName) AS ObjId) X;

  SET @Cmd = 
     'CREATE TRIGGER $$SCHEMA_NAME$$.$$TRIGGER_NAME$$
      ON $$SCHEMA_NAME$$.$$VIEW_NAME$$ INSTEAD OF INSERT AS
      BEGIN
         RAISERROR(''Test system is in an invalid state. SetFakeViewOff must be called if SetFakeViewOn was called. Call SetFakeViewOff after creating all test case procedures.'', 16, 10) WITH NOWAIT;
         RETURN;
      END;
     ';
      
  SET @Cmd = REPLACE(@Cmd, '$$SCHEMA_NAME$$', QUOTENAME(@SchemaName));
  SET @Cmd = REPLACE(@Cmd, '$$VIEW_NAME$$', QUOTENAME(@ViewName));
  SET @Cmd = REPLACE(@Cmd, '$$TRIGGER_NAME$$', QUOTENAME(@TriggerName));
  EXEC(@Cmd);

  EXEC sp_addextendedproperty @name = N'SetFakeViewOnTrigger', 
                               @value = 1,
                               @level0type = 'SCHEMA',
                               @level0name = @SchemaName, 
                               @level1type = 'VIEW',
                               @level1name = @ViewName,
                               @level2type = 'TRIGGER',
                               @level2name = @TriggerName;

  RETURN 0;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_SetFakeViewOn_SingleView].[@ViewName]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_SetFakeViewOn_SingleView].[@ViewName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="1527" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[Private_SetFakeViewOn_SingleView]&#xD;&#xA;  @ViewName NVARCHAR(MAX)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlScalarFunction" Name="[tSQLt].[Private_SqlVariantFormatter]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_SqlVariantFormatter].[@Value]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[
BEGIN
  RETURN CASE UPPER(CAST(SQL_VARIANT_PROPERTY(@Value,'BaseType')AS sysname))
           WHEN 'FLOAT' THEN CONVERT(NVARCHAR(MAX),@Value,2)
           WHEN 'REAL' THEN CONVERT(NVARCHAR(MAX),@Value,1)
           WHEN 'MONEY' THEN CONVERT(NVARCHAR(MAX),@Value,2)
           WHEN 'SMALLMONEY' THEN CONVERT(NVARCHAR(MAX),@Value,2)
           WHEN 'DATE' THEN CONVERT(NVARCHAR(MAX),@Value,126)
           WHEN 'DATETIME' THEN CONVERT(NVARCHAR(MAX),@Value,126)
           WHEN 'DATETIME2' THEN CONVERT(NVARCHAR(MAX),@Value,126)
           WHEN 'DATETIMEOFFSET' THEN CONVERT(NVARCHAR(MAX),@Value,126)
           WHEN 'SMALLDATETIME' THEN CONVERT(NVARCHAR(MAX),@Value,126)
           WHEN 'TIME' THEN CONVERT(NVARCHAR(MAX),@Value,126)
           WHEN 'BINARY' THEN CONVERT(NVARCHAR(MAX),@Value,1)
           WHEN 'VARBINARY' THEN CONVERT(NVARCHAR(MAX),@Value,1)
           ELSE CAST(@Value AS NVARCHAR(MAX))
         END;
END]]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="CreateOffset" Value="2" />
							<Property Name="Length" Value="1041" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE FUNCTION [tSQLt].[Private_SqlVariantFormatter](@Value SQL_VARIANT)&#xD;&#xA;RETURNS NVARCHAR(MAX)&#xD;&#xA;AS" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_SqlVariantFormatter].[@Value]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sql_variant]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Relationship Name="Type">
				<Entry>
					<Element Type="SqlTypeSpecifier">
						<Property Name="IsMax" Value="True" />
						<Relationship Name="Type">
							<Entry>
								<References ExternalSource="BuiltIns" Name="[nvarchar]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlInlineTableValuedFunction" Name="[tSQLt].[Private_SqlVersion]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
			</Relationship>
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_SqlVersion].[ProductVersion]" />
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_SqlVersion].[Edition]" />
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[
  SELECT CAST(SERVERPROPERTY('ProductVersion')AS NVARCHAR(128)) ProductVersion,
         CAST(SERVERPROPERTY('Edition')AS NVARCHAR(128)) Edition]]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="Length" Value="221" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="CREATE FUNCTION [tSQLt].[Private_SqlVersion]()&#xD;&#xA;RETURNS TABLE&#xD;&#xA;AS&#xD;&#xA;RETURN" />
							<Property Name="FooterContents" Value=";" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlView" Name="[tSQLt].[Private_SysIndexes]">
			<Property Name="QueryScript">
				<Value><![CDATA[ SELECT * FROM sys.indexes]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_SysIndexes].[object_id]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References ExternalSource="master.dacpac" Name="[master]|[sys].[indexes].[object_id]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_SysIndexes].[name]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References ExternalSource="master.dacpac" Name="[master]|[sys].[indexes].[name]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_SysIndexes].[index_id]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References ExternalSource="master.dacpac" Name="[master]|[sys].[indexes].[index_id]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_SysIndexes].[type]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References ExternalSource="master.dacpac" Name="[master]|[sys].[indexes].[type]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_SysIndexes].[type_desc]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References ExternalSource="master.dacpac" Name="[master]|[sys].[indexes].[type_desc]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_SysIndexes].[is_unique]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References ExternalSource="master.dacpac" Name="[master]|[sys].[indexes].[is_unique]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_SysIndexes].[data_space_id]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References ExternalSource="master.dacpac" Name="[master]|[sys].[indexes].[data_space_id]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_SysIndexes].[ignore_dup_key]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References ExternalSource="master.dacpac" Name="[master]|[sys].[indexes].[ignore_dup_key]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_SysIndexes].[is_primary_key]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References ExternalSource="master.dacpac" Name="[master]|[sys].[indexes].[is_primary_key]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_SysIndexes].[is_unique_constraint]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References ExternalSource="master.dacpac" Name="[master]|[sys].[indexes].[is_unique_constraint]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_SysIndexes].[fill_factor]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References ExternalSource="master.dacpac" Name="[master]|[sys].[indexes].[fill_factor]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_SysIndexes].[is_padded]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References ExternalSource="master.dacpac" Name="[master]|[sys].[indexes].[is_padded]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_SysIndexes].[is_disabled]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References ExternalSource="master.dacpac" Name="[master]|[sys].[indexes].[is_disabled]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_SysIndexes].[is_hypothetical]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References ExternalSource="master.dacpac" Name="[master]|[sys].[indexes].[is_hypothetical]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_SysIndexes].[allow_row_locks]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References ExternalSource="master.dacpac" Name="[master]|[sys].[indexes].[allow_row_locks]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_SysIndexes].[allow_page_locks]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References ExternalSource="master.dacpac" Name="[master]|[sys].[indexes].[allow_page_locks]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_SysIndexes].[has_filter]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References ExternalSource="master.dacpac" Name="[master]|[sys].[indexes].[has_filter]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_SysIndexes].[filter_definition]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References ExternalSource="master.dacpac" Name="[master]|[sys].[indexes].[filter_definition]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_SysIndexes].[compression_delay]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References ExternalSource="master.dacpac" Name="[master]|[sys].[indexes].[compression_delay]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="QueryDependencies">
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[indexes]" />
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="70" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE VIEW [tSQLt].[Private_SysIndexes] AS" />
				<Property Name="FooterContents" Value=";" />
			</Annotation>
		</Element>
		<Element Type="SqlView" Name="[tSQLt].[Private_SysTypes]">
			<Property Name="QueryScript">
				<Value><![CDATA[ SELECT * FROM sys.types AS T]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_SysTypes].[name]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References ExternalSource="master.dacpac" Name="[master]|[sys].[types].[name]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_SysTypes].[system_type_id]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References ExternalSource="master.dacpac" Name="[master]|[sys].[types].[system_type_id]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_SysTypes].[user_type_id]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References ExternalSource="master.dacpac" Name="[master]|[sys].[types].[user_type_id]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_SysTypes].[schema_id]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References ExternalSource="master.dacpac" Name="[master]|[sys].[types].[schema_id]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_SysTypes].[principal_id]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References ExternalSource="master.dacpac" Name="[master]|[sys].[types].[principal_id]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_SysTypes].[max_length]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References ExternalSource="master.dacpac" Name="[master]|[sys].[types].[max_length]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_SysTypes].[precision]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References ExternalSource="master.dacpac" Name="[master]|[sys].[types].[precision]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_SysTypes].[scale]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References ExternalSource="master.dacpac" Name="[master]|[sys].[types].[scale]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_SysTypes].[collation_name]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References ExternalSource="master.dacpac" Name="[master]|[sys].[types].[collation_name]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_SysTypes].[is_nullable]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References ExternalSource="master.dacpac" Name="[master]|[sys].[types].[is_nullable]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_SysTypes].[is_user_defined]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References ExternalSource="master.dacpac" Name="[master]|[sys].[types].[is_user_defined]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_SysTypes].[is_assembly_type]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References ExternalSource="master.dacpac" Name="[master]|[sys].[types].[is_assembly_type]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_SysTypes].[default_object_id]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References ExternalSource="master.dacpac" Name="[master]|[sys].[types].[default_object_id]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_SysTypes].[rule_object_id]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References ExternalSource="master.dacpac" Name="[master]|[sys].[types].[rule_object_id]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Private_SysTypes].[is_table_type]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References ExternalSource="master.dacpac" Name="[master]|[sys].[types].[is_table_type]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="QueryDependencies">
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[types]" />
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="71" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE VIEW [tSQLt].[Private_SysTypes] AS" />
				<Property Name="FooterContents" Value=";" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Private_ValidateFakeTableParameters]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
   IF @SchemaName IS NULL
   BEGIN
        DECLARE @FullName NVARCHAR(MAX); SET @FullName = @OrigTableName + COALESCE('.' + @OrigSchemaName, '');
        
        RAISERROR ('FakeTable could not resolve the object name, ''%s''. (When calling tSQLt.FakeTable, avoid the use of the @SchemaName parameter, as it is deprecated.)', 
                   16, 10, @FullName);
   END;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ValidateFakeTableParameters].[@SchemaName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ValidateFakeTableParameters].[@OrigTableName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ValidateFakeTableParameters].[@OrigSchemaName]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_ValidateFakeTableParameters].[@SchemaName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_ValidateFakeTableParameters].[@OrigTableName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_ValidateFakeTableParameters].[@OrigSchemaName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="559" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[Private_ValidateFakeTableParameters]&#xD;&#xA;  @SchemaName NVARCHAR(MAX),&#xD;&#xA;  @OrigTableName NVARCHAR(MAX),&#xD;&#xA;  @OrigSchemaName NVARCHAR(MAX)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Private_ValidateObjectsCompatibleWithFakeFunction]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  SET @FunctionObjectId = OBJECT_ID(@FunctionName);
  SET @FakeFunctionObjectId = OBJECT_ID(@FakeFunctionName);

  IF(@FunctionObjectId IS NULL)
  BEGIN
    RAISERROR('%s does not exist!',16,10,@FunctionName);
  END;
  IF(@FakeFunctionObjectId IS NULL)
  BEGIN
    RAISERROR('%s does not exist!',16,10,@FakeFunctionName);
  END;
  
  DECLARE @FunctionType CHAR(2);
  DECLARE @FakeFunctionType CHAR(2);
  SELECT @FunctionType = type FROM sys.objects WHERE object_id = @FunctionObjectId;
  SELECT @FakeFunctionType = type FROM sys.objects WHERE object_id = @FakeFunctionObjectId;

  IF((@FunctionType IN('FN','FS') AND @FakeFunctionType NOT IN('FN','FS'))
     OR
     (@FunctionType IN('TF','IF','FT') AND @FakeFunctionType NOT IN('TF','IF','FT'))
     OR
     (@FunctionType NOT IN('FN','FS','TF','IF','FT'))
     )    
  BEGIN
    RAISERROR('Both parameters must contain the name of either scalar or table valued functions!',16,10);
  END;
  
  SET @IsScalarFunction = CASE WHEN @FunctionType IN('FN','FS') THEN 1 ELSE 0 END;
  
  IF(EXISTS(SELECT 1 
              FROM sys.parameters AS P
             WHERE P.object_id IN(@FunctionObjectId,@FakeFunctionObjectId)
             GROUP BY P.name, P.max_length, P.precision, P.scale, P.parameter_id
            HAVING COUNT(1) <> 2
           ))
  BEGIN
    RAISERROR('Parameters of both functions must match! (This includes the return type for scalar functions.)',16,10);
  END; 
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[char]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[char]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ValidateObjectsCompatibleWithFakeFunction].[@FunctionObjectId]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ValidateObjectsCompatibleWithFakeFunction].[@FunctionName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ValidateObjectsCompatibleWithFakeFunction].[@FakeFunctionObjectId]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ValidateObjectsCompatibleWithFakeFunction].[@FakeFunctionName]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects].[type]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects].[object_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ValidateObjectsCompatibleWithFakeFunction].[@IsScalarFunction]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[parameters]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[parameters].[object_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[parameters].[name]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[parameters].[max_length]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[parameters].[precision]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[parameters].[scale]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[parameters].[parameter_id]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_ValidateObjectsCompatibleWithFakeFunction].[@FunctionName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_ValidateObjectsCompatibleWithFakeFunction].[@FakeFunctionName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_ValidateObjectsCompatibleWithFakeFunction].[@FunctionObjectId]">
						<Property Name="IsOutput" Value="True" />
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_ValidateObjectsCompatibleWithFakeFunction].[@FakeFunctionObjectId]">
						<Property Name="IsOutput" Value="True" />
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_ValidateObjectsCompatibleWithFakeFunction].[@IsScalarFunction]">
						<Property Name="IsOutput" Value="True" />
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="1730" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [tSQLt].[Private_ValidateObjectsCompatibleWithFakeFunction]&#xD;&#xA;  @FunctionName NVARCHAR(MAX),&#xD;&#xA;  @FakeFunctionName NVARCHAR(MAX),&#xD;&#xA;  @FunctionObjectId INT OUTPUT,&#xD;&#xA;  @FakeFunctionObjectId INT OUTPUT,&#xD;&#xA;  @IsScalarFunction BIT OUTPUT&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Private_ValidateProcedureCanBeUsedWithSpyProcedure]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
    IF NOT EXISTS(SELECT 1 FROM sys.procedures WHERE object_id = OBJECT_ID(@ProcedureName))
    BEGIN
      RAISERROR('Cannot use SpyProcedure on %s because the procedure does not exist', 16, 10, @ProcedureName) WITH NOWAIT;
    END;
    
    IF (1020 < (SELECT COUNT(*) FROM sys.parameters WHERE object_id = OBJECT_ID(@ProcedureName)))
    BEGIN
      RAISERROR('Cannot use SpyProcedure on procedure %s because it contains more than 1020 parameters', 16, 10, @ProcedureName) WITH NOWAIT;
    END;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[procedures]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[procedures].[object_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ValidateProcedureCanBeUsedWithSpyProcedure].[@ProcedureName]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[parameters]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[parameters].[object_id]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_ValidateProcedureCanBeUsedWithSpyProcedure].[@ProcedureName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="637" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[Private_ValidateProcedureCanBeUsedWithSpyProcedure]&#xD;&#xA;    @ProcedureName NVARCHAR(MAX)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Private_ValidateThatAllDataTypesInTableAreSupported]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
    BEGIN TRY
      EXEC('DECLARE @EatResult INT; SELECT @EatResult = COUNT(1) FROM ' + @ResultTable + ' GROUP BY ' + @ColumnList + ';');
    END TRY
    BEGIN CATCH
      RAISERROR('The table contains a datatype that is not supported for tSQLt.AssertEqualsTable. Please refer to http://tsqlt.org/user-guide/assertions/assertequalstable/ for a list of unsupported datatypes.',16,10);
    END CATCH
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[Private_ValidateThatAllDataTypesInTableAreSupported].[@ResultTable]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ValidateThatAllDataTypesInTableAreSupported].[@ColumnList]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_ValidateThatAllDataTypesInTableAreSupported].[@ResultTable]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Private_ValidateThatAllDataTypesInTableAreSupported].[@ColumnList]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="557" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [tSQLt].[Private_ValidateThatAllDataTypesInTableAreSupported]&#xD;&#xA; @ResultTable NVARCHAR(MAX),&#xD;&#xA; @ColumnList NVARCHAR(MAX)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[RemoveExternalAccessKey]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  IF(NOT EXISTS(SELECT * FROM sys.fn_my_permissions(NULL,'server') AS FMP WHERE FMP.permission_name = 'CONTROL SERVER'))
  BEGIN
    RAISERROR('Only principals with CONTROL SERVER permission can execute this procedure.',16,10);
    RETURN -1;
  END;

  DECLARE @master_sys_sp_executesql NVARCHAR(MAX); SET @master_sys_sp_executesql = 'master.sys.sp_executesql';

  IF SUSER_ID('tSQLtExternalAccessKey') IS NOT NULL DROP LOGIN tSQLtExternalAccessKey;
  EXEC @master_sys_sp_executesql N'IF ASYMKEY_ID(''tSQLtExternalAccessKey'') IS NOT NULL DROP ASYMMETRIC KEY tSQLtExternalAccessKey;';
  EXEC @master_sys_sp_executesql N'IF EXISTS(SELECT * FROM sys.assemblies WHERE name = ''tSQLtExternalAccessKey'') DROP ASSEMBLY tSQLtExternalAccessKey;';
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[fn_my_permissions]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[fn_my_permissions].[permission_name]" />
				</Entry>
				<Entry />
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="818" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [tSQLt].[RemoveExternalAccessKey]&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[RemoveObject]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  DECLARE @ObjectId INT;
  SELECT @ObjectId = OBJECT_ID(@ObjectName);
  
  IF(@ObjectId IS NULL)
  BEGIN
    IF(@IfExists = 1) RETURN;
    RAISERROR('%s does not exist!',16,10,@ObjectName);
  END;

  EXEC tSQLt.Private_RenameObjectToUniqueNameUsingObjectId @ObjectId, @NewName = @NewName OUTPUT;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[RemoveObject].[@ObjectName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[RemoveObject].[@IfExists]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RenameObjectToUniqueNameUsingObjectId]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RenameObjectToUniqueNameUsingObjectId].[@NewName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[RemoveObject].[@NewName]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[RemoveObject].[@ObjectName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[RemoveObject].[@NewName]">
						<Property Name="IsOutput" Value="True" />
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[RemoveObject].[@IfExists]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="461" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [tSQLt].[RemoveObject] &#xD;&#xA;    @ObjectName NVARCHAR(MAX),&#xD;&#xA;    @NewName NVARCHAR(MAX) = NULL OUTPUT,&#xD;&#xA;    @IfExists INT = 0&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[RemoveObjectIfExists]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  EXEC tSQLt.RemoveObject @ObjectName = @ObjectName, @NewName = @NewName OUT, @IfExists = 1;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[RemoveObject]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[RemoveObject].[@ObjectName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[RemoveObjectIfExists].[@ObjectName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[RemoveObject].[@NewName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[RemoveObjectIfExists].[@NewName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[RemoveObject].[@IfExists]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[RemoveObjectIfExists].[@ObjectName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[RemoveObjectIfExists].[@NewName]">
						<Property Name="IsOutput" Value="True" />
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="233" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [tSQLt].[RemoveObjectIfExists] &#xD;&#xA;    @ObjectName NVARCHAR(MAX),&#xD;&#xA;    @NewName NVARCHAR(MAX) = NULL OUTPUT&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[RenameClass]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  DECLARE @MigrateObjectsCommand NVARCHAR(MAX);

  SELECT @NewSchemaName = PARSENAME(@NewSchemaName, 1),
         @SchemaName = PARSENAME(@SchemaName, 1);

  EXEC tSQLt.NewTestClass @NewSchemaName;

  SELECT @MigrateObjectsCommand = (
    SELECT Cmd AS [text()] FROM (
    SELECT 'ALTER SCHEMA ' + QUOTENAME(@NewSchemaName) + ' TRANSFER ' + QUOTENAME(@SchemaName) + '.' + QUOTENAME(name) + ';' AS Cmd
      FROM sys.objects
     WHERE schema_id = SCHEMA_ID(@SchemaName)
       AND type NOT IN ('PK', 'F')
    UNION ALL 
    SELECT 'ALTER SCHEMA ' + QUOTENAME(@NewSchemaName) + ' TRANSFER XML SCHEMA COLLECTION::' + QUOTENAME(@SchemaName) + '.' + QUOTENAME(name) + ';' AS Cmd
      FROM sys.xml_schema_collections
     WHERE schema_id = SCHEMA_ID(@SchemaName)
    UNION ALL 
    SELECT 'ALTER SCHEMA ' + QUOTENAME(@NewSchemaName) + ' TRANSFER TYPE::' + QUOTENAME(@SchemaName) + '.' + QUOTENAME(name) + ';' AS Cmd
      FROM sys.types
     WHERE schema_id = SCHEMA_ID(@SchemaName)
    ) AS Cmds
       FOR XML PATH(''), TYPE).value('.', 'NVARCHAR(MAX)');

  EXEC (@MigrateObjectsCommand);

  EXEC tSQLt.DropClass @SchemaName;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[RenameClass].[@NewSchemaName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[RenameClass].[@SchemaName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[NewTestClass]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects].[name]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects].[schema_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[objects].[type]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[xml_schema_collections]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[xml_schema_collections].[name]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[xml_schema_collections].[schema_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[types]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[types].[name]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[types].[schema_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[DropClass]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[RenameClass].[@SchemaName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[RenameClass].[@NewSchemaName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="1272" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[RenameClass]&#xD;&#xA;   @SchemaName NVARCHAR(MAX),&#xD;&#xA;   @NewSchemaName NVARCHAR(MAX)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Reset]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  EXEC tSQLt.Private_ResetNewTestClassList;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[Private_ResetNewTestClassList]" />
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="94" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [tSQLt].[Reset]&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[ResultSetFilter]">
			<Property Name="IsAnsiNullsOn" />
			<Property Name="IsQuotedIdentifierOn" />
			<Property Name="MethodName" Value="ResultSetFilter" />
			<Property Name="ClassName" Value="tSQLtCLR.StoredProcedures" />
			<Relationship Name="Assembly">
				<Entry>
					<References Name="[tSQLtCLR]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[ResultSetFilter].[@ResultsetNo]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[ResultSetFilter].[@Command]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Run]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  EXEC tSQLt.Private_RunMethodHandler @RunMethod = 'tSQLt.Private_Run', @TestResultFormatter = @TestResultFormatter, @TestName = @TestName; 
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[Private_RunMethodHandler]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RunMethodHandler].[@RunMethod]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RunMethodHandler].[@TestResultFormatter]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Run].[@TestResultFormatter]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RunMethodHandler].[@TestName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Run].[@TestName]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Run].[@TestName]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[Run].[@TestResultFormatter]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="273" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[Run]&#xD;&#xA;   @TestName NVARCHAR(MAX) = NULL,&#xD;&#xA;   @TestResultFormatter NVARCHAR(MAX) = NULL&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlTable" Name="[tSQLt].[Run_LastExecution]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[tSQLt].[Run_LastExecution].[TestName]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[tSQLt].[Run_LastExecution].[SessionId]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[tSQLt].[Run_LastExecution].[LoginTime]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[datetime]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[RunAll]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  EXEC tSQLt.Private_RunMethodHandler @RunMethod = 'tSQLt.Private_RunAll';
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[Private_RunMethodHandler]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RunMethodHandler].[@RunMethod]" />
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="126" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [tSQLt].[RunAll]&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[RunC]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  DECLARE @TestName NVARCHAR(MAX);SET @TestName = NULL;
  DECLARE @InputBuffer NVARCHAR(MAX);
  EXEC tSQLt.Private_InputBuffer @InputBuffer = @InputBuffer OUT;
  IF(@InputBuffer LIKE 'EXEC tSQLt.RunC;--%')
  BEGIN
    SET @TestName = LTRIM(RTRIM(STUFF(@InputBuffer,1,18,'')));
  END;
  EXEC tSQLt.Run @TestName = @TestName;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_InputBuffer]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_InputBuffer].[@InputBuffer]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Run]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Run].[@TestName]" />
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="380" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [tSQLt].[RunC]&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[RunNew]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  EXEC tSQLt.Private_RunMethodHandler @RunMethod = 'tSQLt.Private_RunNew';
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[Private_RunMethodHandler]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RunMethodHandler].[@RunMethod]" />
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="128" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[RunNew]&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[RunTest]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  RAISERROR('tSQLt.RunTest has been retired. Please use tSQLt.Run instead.', 16, 10);
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[RunTest].[@TestName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="168" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[RunTest]&#xD;&#xA;   @TestName NVARCHAR(MAX)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[RunTestClass]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
    EXEC tSQLt.Run @TestClassName;
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[Run]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[RunTestClass].[@TestClassName]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[RunTestClass].[@TestClassName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="126" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[RunTestClass]&#xD;&#xA;   @TestClassName NVARCHAR(MAX)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[RunWithNullResults]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  EXEC tSQLt.Run @TestName = @TestName, @TestResultFormatter = 'tSQLt.NullTestResultFormatter';
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[Run]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Run].[@TestName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[RunWithNullResults].[@TestName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Run].[@TestResultFormatter]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[RunWithNullResults].[@TestName]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="197" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[RunWithNullResults]&#xD;&#xA;    @TestName NVARCHAR(MAX) = NULL&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[RunWithXmlResults]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  EXEC tSQLt.Run @TestName = @TestName, @TestResultFormatter = 'tSQLt.XmlResultFormatter';
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[Run]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Run].[@TestName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[RunWithXmlResults].[@TestName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Run].[@TestResultFormatter]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[RunWithXmlResults].[@TestName]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="190" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[RunWithXmlResults]&#xD;&#xA;   @TestName NVARCHAR(MAX) = NULL&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[SetFakeViewOff]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  DECLARE @ViewName NVARCHAR(MAX);
    
  DECLARE viewNames CURSOR LOCAL FAST_FORWARD FOR
   SELECT QUOTENAME(OBJECT_SCHEMA_NAME(t.parent_id)) + '.' + QUOTENAME(OBJECT_NAME(t.parent_id)) AS viewName
     FROM sys.extended_properties ep
     JOIN sys.triggers t
       on ep.major_id = t.object_id
     WHERE ep.name = N'SetFakeViewOnTrigger'  
  OPEN viewNames;
  
  FETCH NEXT FROM viewNames INTO @ViewName;
  WHILE @@FETCH_STATUS = 0
  BEGIN
    EXEC tSQLt.Private_SetFakeViewOff_SingleView @ViewName;
    
    FETCH NEXT FROM viewNames INTO @ViewName;
  END;
  
  CLOSE viewNames;
  DEALLOCATE viewNames;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[extended_properties]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[triggers]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[extended_properties].[major_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[triggers].[object_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[triggers].[parent_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[extended_properties].[name]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_SetFakeViewOff_SingleView]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[SetFakeViewOff].[@SchemaName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="717" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[SetFakeViewOff]&#xD;&#xA;  @SchemaName NVARCHAR(MAX)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[SetFakeViewOn]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  DECLARE @ViewName NVARCHAR(MAX);
    
  DECLARE viewNames CURSOR LOCAL FAST_FORWARD FOR
  SELECT QUOTENAME(OBJECT_SCHEMA_NAME(object_id)) + '.' + QUOTENAME([name]) AS viewName
    FROM sys.views
   WHERE schema_id = SCHEMA_ID(@SchemaName);
  
  OPEN viewNames;
  
  FETCH NEXT FROM viewNames INTO @ViewName;
  WHILE @@FETCH_STATUS = 0
  BEGIN
    EXEC tSQLt.Private_SetFakeViewOn_SingleView @ViewName;
    
    FETCH NEXT FROM viewNames INTO @ViewName;
  END;
  
  CLOSE viewNames;
  DEALLOCATE viewNames;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[views]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[views].[object_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[views].[name]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[views].[schema_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[SetFakeViewOn].[@SchemaName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_SetFakeViewOn_SingleView]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[SetFakeViewOn].[@SchemaName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="615" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[SetFakeViewOn]&#xD;&#xA;  @SchemaName NVARCHAR(MAX)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[SetTestResultFormatter]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
    IF EXISTS (SELECT 1 FROM sys.extended_properties WHERE [name] = N'tSQLt.ResultsFormatter')
    BEGIN
        EXEC sp_dropextendedproperty @name = N'tSQLt.ResultsFormatter',
                                    @level0type = 'SCHEMA',
                                    @level0name = 'tSQLt',
                                    @level1type = 'PROCEDURE',
                                    @level1name = 'Private_OutputTestResults';
    END;

    EXEC sp_addextendedproperty @name = N'tSQLt.ResultsFormatter', 
                                @value = @Formatter,
                                @level0type = 'SCHEMA',
                                @level0name = 'tSQLt',
                                @level1type = 'PROCEDURE',
                                @level1name = 'Private_OutputTestResults';
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[extended_properties]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[extended_properties].[name]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[sp_dropextendedproperty]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[sp_dropextendedproperty].[@name]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[sp_dropextendedproperty].[@level0type]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[sp_dropextendedproperty].[@level0name]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[sp_dropextendedproperty].[@level1type]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[sp_dropextendedproperty].[@level1name]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[SetTestResultFormatter].[@Formatter]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[SetTestResultFormatter].[@Formatter]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="4000" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="6" />
				<Property Name="Length" Value="932" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;CREATE PROCEDURE [tSQLt].[SetTestResultFormatter]&#xD;&#xA;    @Formatter NVARCHAR(4000)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[SetVerbose]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  EXEC tSQLt.Private_SetConfiguration @Name = 'Verbose', @Value = @Verbose;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[Private_SetConfiguration]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_SetConfiguration].[@Name]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_SetConfiguration].[@Value]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[SetVerbose].[@Verbose]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[SetVerbose].[@Verbose]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[1]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="151" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [tSQLt].[SetVerbose]&#xD;&#xA;  @Verbose BIT = 1&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[SpyProcedure]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
    DECLARE @ProcedureObjectId INT;
    SELECT @ProcedureObjectId = OBJECT_ID(@ProcedureName);

    EXEC tSQLt.Private_ValidateProcedureCanBeUsedWithSpyProcedure @ProcedureName;

    DECLARE @LogTableName NVARCHAR(MAX);
    SELECT @LogTableName = QUOTENAME(OBJECT_SCHEMA_NAME(@ProcedureObjectId)) + '.' + QUOTENAME(OBJECT_NAME(@ProcedureObjectId)+'_SpyProcedureLog');

    EXEC tSQLt.Private_RenameObjectToUniqueNameUsingObjectId @ProcedureObjectId;

    EXEC tSQLt.Private_CreateProcedureSpy @ProcedureObjectId, @ProcedureName, @LogTableName, @CommandToExecute;

    RETURN 0;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[SpyProcedure].[@ProcedureName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_ValidateProcedureCanBeUsedWithSpyProcedure]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_RenameObjectToUniqueNameUsingObjectId]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_CreateProcedureSpy]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[SpyProcedure].[@CommandToExecute]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[SpyProcedure].[@ProcedureName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[SpyProcedure].[@CommandToExecute]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="728" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[SpyProcedure]&#xD;&#xA;    @ProcedureName NVARCHAR(MAX),&#xD;&#xA;    @CommandToExecute NVARCHAR(MAX) = NULL&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[StubRecord]">
			<Property Name="BodyScript">
				<Value><![CDATA[   
BEGIN  

    RAISERROR('Warning, tSQLt.StubRecord is not currently supported. Use at your own risk!', 0, 1) WITH NOWAIT;

    DECLARE @VcInsertStmt NVARCHAR(MAX),  
            @VcInsertValues NVARCHAR(MAX);  
    DECLARE @SnColumnName NVARCHAR(MAX); 
    DECLARE @SintDataType SMALLINT; 
    DECLARE @NvcFKCmd NVARCHAR(MAX);  
    DECLARE @VcFKVal NVARCHAR(MAX); 
  
    SET @VcInsertStmt = 'INSERT INTO ' + @SnTableName + ' ('  
      
    DECLARE curColumns CURSOR  
        LOCAL FAST_FORWARD  
    FOR  
    SELECT syscolumns.name,  
           syscolumns.xtype,  
           cmd.cmd  
    FROM syscolumns  
        LEFT OUTER JOIN dbo.sysconstraints ON syscolumns.id = sysconstraints.id  
                                      AND syscolumns.colid = sysconstraints.colid  
                                      AND sysconstraints.status = 1    -- Primary key constraints only  
        LEFT OUTER JOIN (select fkeyid id,fkey colid,N'select @V=cast(min('+syscolumns.name+') as NVARCHAR) from '+sysobjects.name cmd  
                        from sysforeignkeys   
                        join sysobjects on sysobjects.id=sysforeignkeys.rkeyid  
                        join syscolumns on sysobjects.id=syscolumns.id and syscolumns.colid=rkey) cmd  
            on cmd.id=syscolumns.id and cmd.colid=syscolumns.colid  
    WHERE syscolumns.id = OBJECT_ID(@SnTableName)  
      AND (syscolumns.isnullable = 0 )  
    ORDER BY ISNULL(sysconstraints.status, 9999), -- Order Primary Key constraints first  
             syscolumns.colorder  
  
    OPEN curColumns  
  
    FETCH NEXT FROM curColumns  
    INTO @SnColumnName, @SintDataType, @NvcFKCmd  
  
    -- Treat the first column retrieved differently, no commas need to be added  
    -- and it is the ObjId column  
    IF @@FETCH_STATUS = 0  
    BEGIN  
        SET @VcInsertStmt = @VcInsertStmt + @SnColumnName  
        SELECT @VcInsertValues = ')VALUES(' + ISNULL(CAST(@BintObjId AS nvarchar), 'NULL')  
  
        FETCH NEXT FROM curColumns  
        INTO @SnColumnName, @SintDataType, @NvcFKCmd  
    END  
    ELSE  
    BEGIN  
        -- No columns retrieved, we need to insert into any first column  
        SELECT @VcInsertStmt = @VcInsertStmt + syscolumns.name  
        FROM syscolumns  
        WHERE syscolumns.id = OBJECT_ID(@SnTableName)  
          AND syscolumns.colorder = 1  
  
        SELECT @VcInsertValues = ')VALUES(' + ISNULL(CAST(@BintObjId AS nvarchar), 'NULL')  
  
    END  
  
    WHILE @@FETCH_STATUS = 0  
    BEGIN  
        SET @VcInsertStmt = @VcInsertStmt + ',' + @SnColumnName  
        SET @VcFKVal=',0'  
        if @NvcFKCmd is not null  
        BEGIN  
            set @VcFKVal=null  
            exec sp_executesql @NvcFKCmd,N'@V NVARCHAR(MAX) output',@VcFKVal output  
            set @VcFKVal=isnull(','''+@VcFKVal+'''',',NULL')  
        END  
        SET @VcInsertValues = @VcInsertValues + @VcFKVal  
  
        FETCH NEXT FROM curColumns  
        INTO @SnColumnName, @SintDataType, @NvcFKCmd  
    END  
      
    CLOSE curColumns  
    DEALLOCATE curColumns  
  
    SET @VcInsertStmt = @VcInsertStmt + @VcInsertValues + ')'  
  
    IF EXISTS (SELECT 1   
               FROM syscolumns  
               WHERE status = 128   
                 AND id = OBJECT_ID(@SnTableName))  
    BEGIN  
        SET @VcInsertStmt = 'SET IDENTITY_INSERT ' + @SnTableName + ' ON ' + CHAR(10) +   
                             @VcInsertStmt + CHAR(10) +   
                             'SET IDENTITY_INSERT ' + @SnTableName + ' OFF '  
    END  
  
    EXEC (@VcInsertStmt)    -- Execute the actual INSERT statement  
  
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[smallint]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[StubRecord].[@SnTableName]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[syscolumns]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[sysconstraints]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[syscolumns].[id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[sysconstraints].[id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[syscolumns].[colid]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[sysconstraints].[colid]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[sysconstraints].[status]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[sysforeignkeys]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[sysobjects]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[sysobjects].[id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[sysforeignkeys].[rkeyid]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[syscolumns]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[sysobjects].[id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[syscolumns].[id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[syscolumns].[colid]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[sysforeignkeys].[rkey]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[sysforeignkeys].[fkeyid]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[sysforeignkeys].[fkey]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[syscolumns].[name]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[sysobjects].[name]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[syscolumns].[name]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[syscolumns].[xtype]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[syscolumns].[isnullable]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[syscolumns].[colorder]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[StubRecord].[@BintObjId]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[syscolumns].[name]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[syscolumns].[id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[syscolumns].[colorder]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[sp_executesql]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[syscolumns].[status]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[syscolumns].[id]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[StubRecord].[@SnTableName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[StubRecord].[@BintObjId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bigint]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="3817" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [tSQLt].[StubRecord](@SnTableName AS NVARCHAR(MAX), @BintObjId AS BIGINT)  &#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[SuppressOutput]">
			<Property Name="IsAnsiNullsOn" />
			<Property Name="IsQuotedIdentifierOn" />
			<Property Name="MethodName" Value="SuppressOutput" />
			<Property Name="ClassName" Value="tSQLtCLR.StoredProcedures" />
			<Relationship Name="Assembly">
				<Entry>
					<References Name="[tSQLtCLR]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[SuppressOutput].[@command]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[TableToText]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
    SET @txt = tSQLt.Private::TableToString(@TableName, @OrderBy, @PrintOnlyColumnNameAliasList);
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[TableToText].[@txt]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TableToText].[@TableName]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TableToText].[@OrderBy]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TableToText].[@PrintOnlyColumnNameAliasList]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[TableToText].[@txt]">
						<Property Name="IsOutput" Value="True" />
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[TableToText].[@TableName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[TableToText].[@OrderBy]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[tSQLt].[TableToText].[@PrintOnlyColumnNameAliasList]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="309" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [tSQLt].[TableToText]&#xD;&#xA;    @txt NVARCHAR(MAX) OUTPUT,&#xD;&#xA;    @TableName NVARCHAR(MAX),&#xD;&#xA;    @OrderBy NVARCHAR(MAX) = NULL,&#xD;&#xA;    @PrintOnlyColumnNameAliasList NVARCHAR(MAX) = NULL&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlInlineTableValuedFunction" Name="[tSQLt].[TestCaseSummary]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[TestResult]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestResult].[Result]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestCaseSummary].[CTE1].[A].[Cnt]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestCaseSummary].[CTE1].[A].[SuccessCnt]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestCaseSummary].[CTE1].[A].[FailCnt]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestCaseSummary].[CTE1].[A].[ErrorCnt]" />
				</Entry>
			</Relationship>
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[TestCaseSummary].[Msg]" />
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[TestCaseSummary].[Cnt]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References Name="[tSQLt].[TestCaseSummary].[CTE1].[A].[Cnt]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[TestCaseSummary].[SuccessCnt]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References Name="[tSQLt].[TestCaseSummary].[CTE1].[A].[SuccessCnt]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[TestCaseSummary].[FailCnt]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References Name="[tSQLt].[TestCaseSummary].[CTE1].[A].[FailCnt]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[TestCaseSummary].[ErrorCnt]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References Name="[tSQLt].[TestCaseSummary].[CTE1].[A].[ErrorCnt]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[tSQLt].[TestCaseSummary].[CTE1].[A]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[tSQLt].[TestCaseSummary].[CTE1].[A].[Cnt]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[tSQLt].[TestCaseSummary].[CTE1].[A].[SuccessCnt]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[tSQLt].[TestCaseSummary].[CTE1].[A].[FailCnt]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[tSQLt].[TestCaseSummary].[CTE1].[A].[ErrorCnt]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[ WITH A(Cnt, SuccessCnt, FailCnt, ErrorCnt) AS (
                SELECT COUNT(1),
                       ISNULL(SUM(CASE WHEN Result = 'Success' THEN 1 ELSE 0 END), 0),
                       ISNULL(SUM(CASE WHEN Result = 'Failure' THEN 1 ELSE 0 END), 0),
                       ISNULL(SUM(CASE WHEN Result = 'Error' THEN 1 ELSE 0 END), 0)
                  FROM tSQLt.TestResult
                  
                )
       SELECT 'Test Case Summary: ' + CAST(Cnt AS NVARCHAR) + ' test case(s) executed, '+
                  CAST(SuccessCnt AS NVARCHAR) + ' succeeded, '+
                  CAST(FailCnt AS NVARCHAR) + ' failed, '+
                  CAST(ErrorCnt AS NVARCHAR) + ' errored.' Msg,*
         FROM A]]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="CreateOffset" Value="4" />
							<Property Name="Length" Value="798" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="&#xD;&#xA;&#xD;&#xA;CREATE FUNCTION [tSQLt].[TestCaseSummary]()&#xD;&#xA;RETURNS TABLE&#xD;&#xA;AS&#xD;&#xA;RETURN" />
							<Property Name="FooterContents" Value=";" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlView" Name="[tSQLt].[TestClasses]">
			<Property Name="QueryScript">
				<Value><![CDATA[
  SELECT s.name AS Name, s.schema_id AS SchemaId
    FROM sys.extended_properties ep
    JOIN sys.schemas s
      ON ep.major_id = s.schema_id
   WHERE ep.name = N'tSQLt.TestClass']]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[TestClasses].[Name]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References ExternalSource="master.dacpac" Name="[master]|[sys].[schemas].[name]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[TestClasses].[SchemaId]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References ExternalSource="master.dacpac" Name="[master]|[sys].[schemas].[schema_id]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="QueryDependencies">
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[extended_properties]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[schemas]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[extended_properties].[major_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[schemas].[schema_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[schemas].[name]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[schemas].[schema_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[extended_properties].[name]" />
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="74" />
				<Property Name="Length" Value="298" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;----------------------------------------------------------------------&#xD;&#xA;CREATE VIEW [tSQLt].[TestClasses]&#xD;&#xA;AS" />
				<Property Name="FooterContents" Value=";" />
			</Annotation>
		</Element>
		<Element Type="SqlTable" Name="[tSQLt].[TestMessage]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[tSQLt].[TestMessage].[Msg]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlTable" Name="[tSQLt].[TestResult]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[tSQLt].[TestResult].[Id]">
						<Property Name="IsNullable" Value="False" />
						<Property Name="IsIdentity" Value="True" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[tSQLt].[TestResult].[Class]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[tSQLt].[TestResult].[TestCase]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[TestResult].[Name]">
						<Property Name="ExpressionScript">
							<Value><![CDATA[((quotename([Class])+'.')+quotename([TestCase]))]]></Value>
						</Property>
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References Name="[tSQLt].[TestResult].[Class]" />
							</Entry>
							<Entry>
								<References Name="[tSQLt].[TestResult].[TestCase]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[tSQLt].[TestResult].[TranName]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[tSQLt].[TestResult].[Result]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[tSQLt].[TestResult].[Msg]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[tSQLt].[TestResult].[TestStartTime]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[datetime]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
						<AttachedAnnotation Disambiguator="33" />
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[tSQLt].[TestResult].[TestEndTime]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[datetime]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="8" />
		</Element>
		<Element Type="SqlView" Name="[tSQLt].[Tests]">
			<Property Name="QueryScript">
				<Value><![CDATA[
  SELECT classes.SchemaId, classes.Name AS TestClassName, 
         procs.object_id AS ObjectId, procs.name AS Name
    FROM tSQLt.TestClasses classes
    JOIN sys.procedures procs ON classes.SchemaId = procs.schema_id
   WHERE LOWER(procs.name) LIKE 'test%']]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Tests].[SchemaId]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References Name="[tSQLt].[TestClasses].[SchemaId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Tests].[TestClassName]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References Name="[tSQLt].[TestClasses].[Name]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Tests].[ObjectId]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References ExternalSource="master.dacpac" Name="[master]|[sys].[procedures].[object_id]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlComputedColumn" Name="[tSQLt].[Tests].[Name]">
						<Relationship Name="ExpressionDependencies">
							<Entry>
								<References ExternalSource="master.dacpac" Name="[master]|[sys].[procedures].[name]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="QueryDependencies">
				<Entry>
					<References Name="[tSQLt].[TestClasses]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[procedures]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestClasses].[SchemaId]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[procedures].[schema_id]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestClasses].[Name]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[procedures].[object_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[procedures].[name]" />
				</Entry>
				<Entry>
					<References ExternalSource="master.dacpac" Name="[master]|[sys].[procedures].[name]" />
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="298" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE VIEW [tSQLt].[Tests]&#xD;&#xA;AS" />
				<Property Name="FooterContents" Value=";" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[Uninstall]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  DROP TYPE tSQLt.Private;

  EXEC tSQLt.DropClass 'tSQLt';  
  
  DROP ASSEMBLY tSQLtCLR;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[tSQLt].[Private]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[DropClass]" />
				</Entry>
				<Entry>
					<References Name="[tSQLtCLR]" />
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="151" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[Uninstall]&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[tSQLt].[XmlResultFormatter]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
    DECLARE @XmlOutput XML;

    SELECT @XmlOutput = (
      SELECT *--Tag, Parent, [testsuites!1!hide!hide], [testsuite!2!name], [testsuite!2!tests], [testsuite!2!errors], [testsuite!2!failures], [testsuite!2!timestamp], [testsuite!2!time], [testcase!3!classname], [testcase!3!name], [testcase!3!time], [failure!4!message]  
        FROM (
          SELECT 1 AS Tag,
                 NULL AS Parent,
                 'root' AS [testsuites!1!hide!hide],
                 NULL AS [testsuite!2!id],
                 NULL AS [testsuite!2!name],
                 NULL AS [testsuite!2!tests],
                 NULL AS [testsuite!2!errors],
                 NULL AS [testsuite!2!failures],
                 NULL AS [testsuite!2!timestamp],
                 NULL AS [testsuite!2!time],
                 NULL AS [testsuite!2!hostname],
                 NULL AS [testsuite!2!package],
                 NULL AS [properties!3!hide!hide],
                 NULL AS [testcase!4!classname],
                 NULL AS [testcase!4!name],
                 NULL AS [testcase!4!time],
                 NULL AS [failure!5!message],
                 NULL AS [failure!5!type],
                 NULL AS [error!6!message],
                 NULL AS [error!6!type],
                 NULL AS [system-out!7!hide],
                 NULL AS [system-err!8!hide]
          UNION ALL
          SELECT 2 AS Tag, 
                 1 AS Parent,
                 'root',
                 ROW_NUMBER()OVER(ORDER BY Class),
                 Class,
                 COUNT(1),
                 SUM(CASE Result WHEN 'Error' THEN 1 ELSE 0 END),
                 SUM(CASE Result WHEN 'Failure' THEN 1 ELSE 0 END),
                 CONVERT(VARCHAR(19),MIN(TestResult.TestStartTime),126),
                 CAST(CAST(DATEDIFF(MILLISECOND,MIN(TestResult.TestStartTime),MAX(TestResult.TestEndTime))/1000.0 AS NUMERIC(20,3))AS VARCHAR(MAX)),
                 CAST(SERVERPROPERTY('ServerName') AS NVARCHAR(MAX)),
                 'tSQLt',
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL
            FROM tSQLt.TestResult
          GROUP BY Class
          UNION ALL
          SELECT 3 AS Tag,
                 2 AS Parent,
                 'root',
                 NULL,
                 Class,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 Class,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL
            FROM tSQLt.TestResult
           GROUP BY Class
          UNION ALL
          SELECT 4 AS Tag,
                 2 AS Parent,
                 'root',
                 NULL,
                 Class,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 Class,
                 TestCase,
                 CAST(CAST(DATEDIFF(MILLISECOND,TestResult.TestStartTime,TestResult.TestEndTime)/1000.0 AS NUMERIC(20,3))AS VARCHAR(MAX)),
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL
            FROM tSQLt.TestResult
          UNION ALL
          SELECT 5 AS Tag,
                 4 AS Parent,
                 'root',
                 NULL,
                 Class,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 Class,
                 TestCase,
                 CAST(CAST(DATEDIFF(MILLISECOND,TestResult.TestStartTime,TestResult.TestEndTime)/1000.0 AS NUMERIC(20,3))AS VARCHAR(MAX)),
                 Msg,
                 'tSQLt.Fail',
                 NULL,
                 NULL,
                 NULL,
                 NULL
            FROM tSQLt.TestResult
           WHERE Result IN ('Failure')
          UNION ALL
          SELECT 6 AS Tag,
                 4 AS Parent,
                 'root',
                 NULL,
                 Class,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 Class,
                 TestCase,
                 CAST(CAST(DATEDIFF(MILLISECOND,TestResult.TestStartTime,TestResult.TestEndTime)/1000.0 AS NUMERIC(20,3))AS VARCHAR(MAX)),
                 NULL,
                 NULL,
                 Msg,
                 'SQL Error',
                 NULL,
                 NULL
            FROM tSQLt.TestResult
           WHERE Result IN ( 'Error')
          UNION ALL
          SELECT 7 AS Tag,
                 2 AS Parent,
                 'root',
                 NULL,
                 Class,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 Class,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL
            FROM tSQLt.TestResult
           GROUP BY Class
          UNION ALL
          SELECT 8 AS Tag,
                 2 AS Parent,
                 'root',
                 NULL,
                 Class,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 Class,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL,
                 NULL
            FROM tSQLt.TestResult
           GROUP BY Class
        ) AS X
       ORDER BY [testsuite!2!name],CASE WHEN Tag IN (7,8) THEN 1 ELSE 0 END, [testcase!4!name], Tag
       FOR XML EXPLICIT
       );

    EXEC tSQLt.Private_PrintXML @XmlOutput;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[xml]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestResult]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestResult].[Class]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestResult].[Result]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestResult].[TestStartTime]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[numeric]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestResult].[TestEndTime]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestResult].[TestCase]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[numeric]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[numeric]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[TestResult].[Msg]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[numeric]" />
				</Entry>
				<Entry>
					<References Name="[tSQLt].[Private_PrintXML]" />
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[tSQLt]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="6711" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [tSQLt].[XmlResultFormatter]&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlAssembly" Name="[tSQLtCLR]">
			<Relationship Name="AssemblySources">
				<Entry>
					<Element Type="SqlAssemblySource">
						<Property Name="Source">
							<Value><![CDATA[alue>
						</Property>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Authorizer">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
		</Element>
	</Model>
</DataSchemaModel>